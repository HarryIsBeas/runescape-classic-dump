// Decompiled by DJ v3.7.7.81 Copyright 2004 Atanas Neshkov  Date: 2/7/2005 1:26:16 AM
// Home Page : http://members.fortunecity.com/neshkov/dj.html  - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   mudclient.java

import java.applet.Applet;
import java.awt.*;
import java.io.*;
import java.net.*;

public final class mudclient extends b
{
    private class script extends Thread
    {

        public void run()
        {
            WaitForLoad();
            fdj((new StringBuilder()).append("@cya@Running script - ").append(String.valueOf(scriptno)).append(" lines of code").toString(), 3);
            for(counter = 0; counter < scriptno; counter++)
            {
                if(debug)
                    fdj((new StringBuilder()).append("@or1@").append(counter + 1).append(": ").append(line[counter]).toString(), 3);
                process(line[counter], true);
            }

        }

        final mudclient this$0;

        script()
        {
            this$0 = mudclient.this;
            super();
            start();
        }
    }

    private class AutoEat extends Thread
    {

        public void run()
        {
            do
            {
                if(!autoEat)
                    break;
                if(edf[3] <= hpset && !InCombat())
                    if(fac(idfood) >= 1)
                    {
                        useitem(idfood);
                        fdj((new StringBuilder()).append("@gre@TRune : @whi@AutoEating ").append(namefood).append("s").toString(), 3);
                    } else
                    {
                        fdj((new StringBuilder()).append("@gre@TRune : whi@AutoEat cannot find any ").append(namefood).append("s").toString(), 3);
                        autoEat = false;
                    }
            } while(true);
        }

        final mudclient this$0;

        AutoEat()
        {
            this$0 = mudclient.this;
            super();
            start();
        }
    }


    public void prayeron(int l)
    {
        super.aag.hcn(17);
        super.aag.hdb(l);
        super.aag.hdl();
        eeh[l] = true;
        fee("prayeron");
    }

    public void prayeroff(int l)
    {
        super.aag.hcn(164);
        super.aag.hdb(l);
        super.aag.hdl();
        eeh[l] = false;
        fee("prayeroff");
    }

    public void wait(int l)
    {
        try
        {
            Thread.sleep(l);
            return;
        }
        catch(InterruptedException interruptedexception)
        {
            return;
        }
    }

    public void dropitem(int l)
    {
        System.out.println((new StringBuilder()).append("useitem(").append(l).append(");").toString());
        for(int i1 = 0; i1 < edf.length; i1++)
            if(edf[i1] == l)
            {
                super.aag.hcn(123);
                super.aag.hdj(l);
                super.aag.hdl();
                return;
            }

    }

    public void useitem(int l)
    {
        System.out.println((new StringBuilder()).append("useitem(").append(l).append(");").toString());
        for(int i1 = 0; i1 < edf.length; i1++)
            if(edf[i1] == l)
            {
                super.aag.hcn(70);
                super.aag.hdj(l);
                super.aag.hdl();
                return;
            }

    }

    private final String findCacheDir()
    {
        String as[];
        int l;
        as = (new String[] {
            "c:/windows/", "c:/winnt/", "d:/windows/", "d:/winnt/", "e:/windows/", "e:/winnt/", "f:/windows/", "f:/winnt/", "c:/", "~/", 
            ""
        });
        l = 0;
_L3:
        if(l >= as.length) goto _L2; else goto _L1
_L1:
        String s1;
        s1 = as[l];
        if(s1.length() > 0)
        {
            File file = new File(s1);
            if(!file.exists())
                continue; /* Loop/switch isn't completed */
        }
        File file1 = new File((new StringBuilder()).append(s1).append(".file_store_32").toString());
        if(file1.exists() || file1.mkdir())
            return (new StringBuilder()).append(s1).append(".file_store_32").append("/").toString();
        continue; /* Loop/switch isn't completed */
        Exception exception;
        exception;
        l++;
          goto _L3
_L2:
        return null;
    }

    public void attacknpc(int l)
    {
        fbk(djd, dje, (dgf[l].gmh - 64) / ecj, (dgf[l].gmi - 64) / ecj, true);
        super.aag.hdg(118);
        super.aag.hdj(dgf[l].gmf);
        super.aag.hdl();
    }

    public void talknpc(int l)
    {
    }

    public void displayMessage(String s1)
    {
        WaitForLoad();
        int l = v.cek(s1);
        acm(v.ceg, l);
        s1 = v.cej(v.ceg, 0, l);
        s1 = u.fgd(s1);
        djc.gnf = 150;
        djc.gne = s1;
        fdj((new StringBuilder()).append(djc.gme).append(": ").append(s1).toString(), 2);
    }

    public String arg(String s1, int l)
    {
        if(l == 1)
        {
            String s2 = s1.substring(s1.indexOf("(") + 1);
            if(s2.indexOf(",") > -1)
                return s2.substring(0, s2.indexOf(","));
            else
                return s2.substring(0, s2.indexOf(")"));
        }
        if(l == 2)
        {
            String s3 = s1.substring(s1.indexOf(",") + 1);
            if(s3.indexOf(",") > -1)
                return s3.substring(0, s3.indexOf(","));
            else
                return s3.substring(0, s3.indexOf(")"));
        }
        if(l >= 3)
        {
            String s4 = s1.substring(s1.indexOf(",") + 1);
            for(int i1 = 2; i1 < l; i1++)
                s4 = s4.substring(s4.indexOf(",") + 1);

            if(s4.indexOf(",") > -1)
                return s4.substring(0, s4.indexOf(","));
            else
                return s4.substring(0, s4.indexOf(")"));
        } else
        {
            return null;
        }
    }

    public void walkTo(int l, int i1)
    {
        WaitForLoad();
        dga[0] = 920;
        dfl[0] = l - dni;
        dfm[0] = i1 - dnj;
        emg(0);
    }

    public void gotolabel(String s1)
    {
        WaitForLoad();
        for(int l = 0; l < labelno; l++)
            if(label[l].equalsIgnoreCase(s1))
                counter = labelline[l] - 1;

    }

    public int GetNpcIndex(int l)
    {
        WaitForLoad();
        int i1 = -1;
        int j1 = 0x98967f;
        for(int k1 = 0; k1 < ebb; k1++)
        {
            if(dgf[k1].gmj != l || dgf[k1].gmk == 8 || dgf[k1].gmk == 9)
                continue;
            int l1 = (int)Math.sqrt((dgf[k1].gmh - djc.gmh) * (dgf[k1].gmh - djc.gmh)) + (int)Math.sqrt((dgf[k1].gmi - djc.gmi) * (dgf[k1].gmi - djc.gmi));
            if(l1 < j1)
            {
                i1 = k1;
                j1 = l1;
            }
        }

        return i1;
    }

    public void changeworld(int l)
    {
        if(l == 81)
        {
            sName = "81";
            super.aac = "uk1.runescape.com";
            super.aad = 43594;
        } else
        if(l == 82)
        {
            sName = "82(M)";
            super.aac = "uk1.runescape.com";
            super.aad = 43595;
        } else
        if(l == 83)
        {
            sName = "83";
            super.aac = "ul3.runescape.com";
            super.aad = 43594;
        } else
        if(l == 84)
        {
            sName = "84(M)";
            super.aac = "ul3.runescape.com";
            super.aad = 43595;
        } else
        if(l == 85)
        {
            sName = "85";
            super.aac = "cet3.runescape.com";
            super.aad = 43594;
        } else
        if(l == 86)
        {
            sName = "86(M)";
            super.aac = "cet3.runescape.com";
            super.aad = 43595;
        }
    }

    public boolean InCombat()
    {
        return djc.gml == 8 || djc.gml == 9;
    }

    public void process(String s1, boolean flag)
    {
        try
        {
            if(s1.startsWith(":"))
                Thread.sleep(0L);
            else
            if(s1.startsWith("goto("))
            {
                WaitForLoad();
                String s2 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                gotolabel(arg(s2, 1));
            } else
            if(s1.startsWith("useitem("))
            {
                WaitForLoad();
                String s3 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                useitem(Integer.parseInt(arg(s3, 1)));
            } else
            if(s1.startsWith("dropitem("))
            {
                WaitForLoad();
                String s4 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                dropitem(Integer.parseInt(arg(s4, 1)));
            } else
            if(s1.startsWith("attackNPC("))
            {
                WaitForLoad();
                String s5 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                attacknpc(Integer.parseInt(s5));
            } else
            if(s1.startsWith("ifincombatgoto("))
            {
                WaitForLoad();
                String s6 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                if(!InCombat())
                    gotolabel(arg(s6, 1));
            } else
            if(s1.startsWith("ifamountovergoto("))
            {
                WaitForLoad();
                String s7 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                int l = Integer.parseInt(arg(s7, 1));
                int i2 = Integer.parseInt(arg(s7, 2));
                if(fac(i2) > l)
                    gotolabel(arg(s7, 3));
            } else
            if(s1.startsWith("ifamountundergoto("))
            {
                WaitForLoad();
                String s8 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                int i1 = Integer.parseInt(arg(s8, 1));
                int j2 = Integer.parseInt(arg(s8, 2));
                if(fac(j2) < i1)
                    gotolabel(arg(s8, 3));
            } else
            if(s1.startsWith("wait("))
            {
                WaitForLoad();
                String s9 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                Thread.sleep(Integer.parseInt(arg(s9, 1)));
            } else
            if(s1.startsWith("ifnritemsinbaggoto("))
            {
                WaitForLoad();
                String s10 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                int j1 = Integer.parseInt(arg(s10, 1));
                if(ede == j1)
                    gotolabel(arg(s10, 2));
            } else
            if(s1.startsWith("ifinvfullgoto("))
            {
                WaitForLoad();
                String s11 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                if(ede == 30)
                    gotolabel(arg(s11, 1));
            } else
            if(s1.startsWith("say("))
            {
                WaitForLoad();
                String s12 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                displayMessage(arg(s12, 1));
            } else
            if(s1.startsWith("print("))
            {
                WaitForLoad();
                String s13 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                adg(arg(s13, 1));
            } else
            if(s1.startsWith("switchworld("))
            {
                WaitForLoad();
                String s14 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                changeworld(Integer.parseInt(s14));
            } else
            if(s1.startsWith("talktountil("))
            {
                WaitForLoad();
                String s15 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                int k1 = 0;
                do
                {
                    if(dck)
                        break;
                    talknpc(GetNpcIndex(Integer.parseInt(arg(s15, 1))));
                    Thread.sleep(2000L);
                } while((k1 += 2000) <= 20000);
            } else
            if(s1.startsWith("printout("))
            {
                WaitForLoad();
                String s16 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                System.out.println((new StringBuilder()).append("Print Out: ").append(s16).toString());
            } else
            if(s1.startsWith("walkto("))
            {
                WaitForLoad();
                String s17 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                int l1 = Integer.parseInt(arg(s17, 1));
                for(int k2 = Integer.parseInt(arg(s17, 2)); (djd + dni != l1 || dje + dnj != k2) && ehe == 1;)
                {
                    walkTo(l1, k2);
                    Thread.sleep(4000L);
                }

            }
        }
        catch(Exception exception)
        {
            System.out.println((new StringBuilder()).append("Error: ").append(exception).toString());
        }
    }

    public void WaitForLoad()
    {
    }

    public void getlabels()
    {
        WaitForLoad();
        for(int l = 0; l < label.length; l++)
        {
            label[l] = "";
            labelline[l] = 0;
        }

        labelno = 0;
        for(int i1 = 0; i1 < scriptno; i1++)
            if(line[i1].startsWith(":") && line[i1].endsWith(":"))
            {
                label[labelno] = line[i1];
                labelline[labelno] = i1;
                labelno++;
            }

    }

    public void loadscript(String s1)
    {
        WaitForLoad();
        try
        {
            for(int l = 0; l < line.length; l++)
                line[l] = "";

            String s2 = "";
            scriptno = 0;
            BufferedReader bufferedreader = null;
            bufferedreader = new BufferedReader(new FileReader(s1));
            while((s2 = bufferedreader.readLine()) != null) 
            {
                line[scriptno] = s2.trim();
                scriptno++;
            }
            getlabels();
        }
        catch(Exception exception) { }
    }

    public static final void main(String args[])
    {
        mudclient mudclient1 = new mudclient();
        mudclient1.dcn = false;
        if(args.length > 0 && args[0].equals("members"))
            mudclient1.egi = true;
        if(args.length > 1)
            mudclient1.aac = args[1];
        if(args.length > 2)
            mudclient1.aad = Integer.parseInt(args[2]);
        mudclient1.flc(mudclient1.dch, mudclient1.dci + 11, "Runescape by Andrew Gower", false);
        mudclient1.fkd = 10;
    }

    private final void emg(int l)
    {
        int i1 = dfl[l];
        int j1 = dfm[l];
        int k1 = djk[l];
        int l1 = djl[l];
        int i2 = djm[l];
        int j2 = dga[l];
        if(j2 == 200)
        {
            fan(djd, dje, i1, j1, true);
            super.aag.hcn(18);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdj(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            dil = -1;
        }
        if(j2 == 210)
        {
            fan(djd, dje, i1, j1, true);
            super.aag.hcn(255);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdj(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            edi = -1;
        }
        if(j2 == 220)
        {
            fan(djd, dje, i1, j1, true);
            super.aag.hcn(253);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdj(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
        }
        if(j2 == 3200)
            fdj(e.aic[k1], 3);
        if(j2 == 300)
        {
            eml(i1, j1, k1);
            super.aag.hcn(76);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdb(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            dil = -1;
        }
        if(j2 == 310)
        {
            eml(i1, j1, k1);
            super.aag.hcn(71);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdb(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            edi = -1;
        }
        if(j2 == 320)
        {
            eml(i1, j1, k1);
            super.aag.hcn(100);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdb(k1);
            super.aag.hdl();
        }
        if(j2 == 2300)
        {
            eml(i1, j1, k1);
            super.aag.hcn(121);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdb(k1);
            super.aag.hdl();
        }
        if(j2 == 3300)
            fdj(e.ahj[k1], 3);
        if(j2 == 400)
        {
            fah(i1, j1, k1, l1);
            super.aag.hcn(237);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdj(i2);
            super.aag.hdl();
            dil = -1;
        }
        if(j2 == 410)
        {
            fah(i1, j1, k1, l1);
            super.aag.hcn(127);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdj(i2);
            super.aag.hdl();
            edi = -1;
        }
        if(j2 == 420)
        {
            fah(i1, j1, k1, l1);
            super.aag.hcn(38);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdl();
        }
        if(j2 == 2400)
        {
            fah(i1, j1, k1, l1);
            super.aag.hcn(172);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdl();
        }
        if(j2 == 3400)
            fdj(e.ajn[k1], 3);
        if(j2 == 600)
        {
            super.aag.hcn(166);
            super.aag.hdj(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            dil = -1;
        }
        if(j2 == 610)
        {
            super.aag.hcn(235);
            super.aag.hdj(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            edi = -1;
        }
        if(j2 == 620)
        {
            super.aag.hcn(40);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 630)
        {
            super.aag.hcn(199);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 640)
        {
            super.aag.hcn(24);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 650)
        {
            edi = k1;
            egf = 0;
            edj = e.aib[edf[edi]];
            System.out.println((new StringBuilder()).append("useitem: ").append(k1).toString());
        }
        if(j2 == 660)
        {
            super.aag.hcn(123);
            super.aag.hdj(k1);
            super.aag.hdl();
            edi = -1;
            egf = 0;
            fdj((new StringBuilder()).append("Dropping ").append(e.aib[edf[k1]]).toString(), 4);
            System.out.println((new StringBuilder()).append("dropitem: ").append(k1).toString());
        }
        if(j2 == 3600)
            fdj(e.aic[k1], 3);
        if(j2 == 700)
        {
            int k2 = (i1 - 64) / ehd;
            int k4 = (j1 - 64) / ehd;
            fbk(djd, dje, k2, k4, true);
            super.aag.hcn(10);
            super.aag.hdj(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            dil = -1;
        }
        if(j2 == 710)
        {
            int l2 = (i1 - 64) / ehd;
            int l4 = (j1 - 64) / ehd;
            fbk(djd, dje, l2, l4, true);
            super.aag.hcn(143);
            super.aag.hdj(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            edi = -1;
        }
        if(j2 == 720)
        {
            int i3 = (i1 - 64) / ehd;
            int i5 = (j1 - 64) / ehd;
            fbk(djd, dje, i3, i5, true);
            super.aag.hcn(159);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 725)
        {
            int j3 = (i1 - 64) / ehd;
            int j5 = (j1 - 64) / ehd;
            fbk(djd, dje, j3, j5, true);
            super.aag.hcn(89);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 715 || j2 == 2715)
        {
            int k3 = (i1 - 64) / ehd;
            int k5 = (j1 - 64) / ehd;
            fbk(djd, dje, k3, k5, true);
            super.aag.hcn(118);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 3700)
            fdj(e.ahe[k1], 3);
        if(j2 == 800)
        {
            int l3 = (i1 - 64) / ehd;
            int l5 = (j1 - 64) / ehd;
            fbk(djd, dje, l3, l5, true);
            super.aag.hcn(56);
            super.aag.hdj(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            dil = -1;
        }
        if(j2 == 810)
        {
            int i4 = (i1 - 64) / ehd;
            int i6 = (j1 - 64) / ehd;
            fbk(djd, dje, i4, i6, true);
            super.aag.hcn(11);
            super.aag.hdj(k1);
            super.aag.hdj(l1);
            super.aag.hdl();
            edi = -1;
        }
        if(j2 == 805 || j2 == 2805)
        {
            int j4 = (i1 - 64) / ehd;
            int j6 = (j1 - 64) / ehd;
            fbk(djd, dje, j4, j6, true);
            super.aag.hcn(124);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 2806)
        {
            super.aag.hcn(217);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 2810)
        {
            super.aag.hcn(62);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 2820)
        {
            super.aag.hcn(91);
            super.aag.hdj(k1);
            super.aag.hdl();
        }
        if(j2 == 900)
        {
            fbk(djd, dje, i1, j1, true);
            super.aag.hcn(201);
            super.aag.hdj(i1 + dni);
            super.aag.hdj(j1 + dnj);
            super.aag.hdj(k1);
            super.aag.hdl();
            dil = -1;
        }
        if(j2 == 920)
        {
            fbk(djd, dje, i1, j1, false);
            if(emb == -24)
                emb = 24;
        }
        if(j2 == 1000)
        {
            super.aag.hcn(44);
            super.aag.hdj(k1);
            super.aag.hdl();
            dil = -1;
        }
        if(j2 == 4000)
        {
            edi = -1;
            dil = -1;
        }
    }

    protected final void add()
    {
        deg = 0;
        ecf = 0;
        ehe = 0;
        ehb = 0;
    }

    private final void emh()
    {
        elc = 0;
        int l = 135;
        for(int i1 = 0; i1 < 12; i1++)
        {
            if(super.fke > 66 && super.fke < 446 && super.fkf >= l - 12 && super.fkf < l + 3)
                elc = i1 + 1;
            l += 14;
        }

        if(dnl != 0 && elc != 0)
        {
            dnl = 0;
            dmh = 2;
            super.fkl = "";
            super.fkm = "";
            return;
        }
        l += 15;
        if(dnl != 0)
        {
            dnl = 0;
            if(super.fke < 56 || super.fkf < 35 || super.fke > 456 || super.fkf > 325)
            {
                dmh = 0;
                return;
            }
            if(super.fke > 66 && super.fke < 446 && super.fkf >= l - 15 && super.fkf < l + 5)
            {
                dmh = 0;
                return;
            }
        }
        dnb.cba(56, 35, 400, 290, 0);
        dnb.cbb(56, 35, 400, 290, 0xffffff);
        l = 50;
        dnb.cdl("This form is for reporting players who are breaking our rules", 256, l, 1, 0xffffff);
        l += 15;
        dnb.cdl("Using it sends a snapshot of the last 60 secs of activity to us", 256, l, 1, 0xffffff);
        l += 15;
        dnb.cdl("If you misuse this form, you will be banned.", 256, l, 1, 0xff8000);
        l += 15;
        l += 10;
        dnb.cdl("First indicate which of our 12 rules is being broken. For a detailed", 256, l, 1, 0xffff00);
        l += 15;
        dnb.cdl("explanation of each rule please read the manual on our website.", 256, l, 1, 0xffff00);
        l += 15;
        int j1;
        if(elc == 1)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("1: Offensive language", 256, l, 1, j1);
        l += 14;
        if(elc == 2)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("2: Item scamming", 256, l, 1, j1);
        l += 14;
        if(elc == 3)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("3: Password scamming", 256, l, 1, j1);
        l += 14;
        if(elc == 4)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("4: Bug abuse", 256, l, 1, j1);
        l += 14;
        if(elc == 5)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("5: Jagex Staff impersonation", 256, l, 1, j1);
        l += 14;
        if(elc == 6)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("6: Account sharing/trading", 256, l, 1, j1);
        l += 14;
        if(elc == 7)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("7: Macroing", 256, l, 1, j1);
        l += 14;
        if(elc == 8)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("8: Mutiple logging in", 256, l, 1, j1);
        l += 14;
        if(elc == 9)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("9: Encouraging others to break rules", 256, l, 1, j1);
        l += 14;
        if(elc == 10)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("10: Misuse of customer support", 256, l, 1, j1);
        l += 14;
        if(elc == 11)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("11: Advertising / website", 256, l, 1, j1);
        l += 14;
        if(elc == 12)
        {
            dnb.cbb(66, l - 12, 380, 15, 0xffffff);
            j1 = 0xff8000;
        } else
        {
            j1 = 0xffffff;
        }
        dnb.cdl("12: Real world item trading", 256, l, 1, j1);
        l += 14;
        l += 15;
        j1 = 0xffffff;
        if(super.fke > 196 && super.fke < 316 && super.fkf > l - 15 && super.fkf < l + 5)
            j1 = 0xffff00;
        dnb.cdl("Click here to cancel", 256, l, 1, j1);
    }

    private final void emi()
    {
        dnh.gif = fcb((new StringBuilder()).append("maps").append(w.cfa).append(".jag").toString(), "map", 70);
        if(egi)
            dnh.gil = fcb((new StringBuilder()).append("maps").append(w.cfa).append(".mem").toString(), "members map", 75);
        dnh.gie = fcb((new StringBuilder()).append("land").append(w.cfa).append(".jag").toString(), "landscape", 80);
        if(egi)
            dnh.gik = fcb((new StringBuilder()).append("land").append(w.cfa).append(".mem").toString(), "members landscape", 85);
    }

    private final void emj(int l, String s1)
    {
        int i1 = ekm[l];
        int j1 = ekn[l];
        int k1 = i1 - djc.gmh / 128;
        int l1 = j1 - djc.gmi / 128;
        byte byte0 = 7;
        if(i1 >= 0 && j1 >= 0 && i1 < 96 && j1 < 96 && k1 > -byte0 && k1 < byte0 && l1 > -byte0 && l1 < byte0)
        {
            ejg.bgn(dik[l]);
            int i2 = e.anj(s1);
            i j2 = edb[i2].cnj();
            ejg.bgm(j2);
            j2.cme(true, 48, 48, -50, -10, -50);
            j2.cnl(dik[l]);
            j2.chk = l;
            dik[l] = j2;
        }
    }

    final void emk(int l, int i1, int j1, int k1, int l1, int i2, int j2)
    {
        f f1 = deh[l1];
        if(f1.hab == 255)
            return;
        int k2 = f1.gml + (dkg + 16) / 32 & 7;
        boolean flag = false;
        int l2 = k2;
        if(l2 == 5)
        {
            l2 = 3;
            flag = true;
        } else
        if(l2 == 6)
        {
            l2 = 2;
            flag = true;
        } else
        if(l2 == 7)
        {
            l2 = 1;
            flag = true;
        }
        int i3 = l2 * 3 + dhn[(f1.gmk / 6) % 4];
        if(f1.gml == 8)
        {
            l2 = 5;
            k2 = 2;
            flag = false;
            l -= (5 * j2) / 100;
            i3 = l2 * 3 + eme[(dng / 5) % 8];
        } else
        if(f1.gml == 9)
        {
            l2 = 5;
            k2 = 2;
            flag = true;
            l += (5 * j2) / 100;
            i3 = l2 * 3 + eab[(dng / 6) % 8];
        }
        for(int j3 = 0; j3 < 12; j3++)
        {
            int j4 = dgl[k2][j3];
            int i5 = f1.gnd[j4] - 1;
            if(i5 < 0)
                continue;
            int k5 = 0;
            int l5 = 0;
            int i6 = i3;
            if(flag && l2 >= 1 && l2 <= 3)
                if(e.alk[i5] == 1)
                    i6 += 15;
                else
                if(j4 == 4 && l2 == 1)
                {
                    k5 = -22;
                    l5 = -3;
                    i6 = l2 * 3 + dhn[(2 + f1.gmk / 6) % 4];
                } else
                if(j4 == 4 && l2 == 2)
                {
                    k5 = 0;
                    l5 = -8;
                    i6 = l2 * 3 + dhn[(2 + f1.gmk / 6) % 4];
                } else
                if(j4 == 4 && l2 == 3)
                {
                    k5 = 26;
                    l5 = -5;
                    i6 = l2 * 3 + dhn[(2 + f1.gmk / 6) % 4];
                } else
                if(j4 == 3 && l2 == 1)
                {
                    k5 = 22;
                    l5 = 3;
                    i6 = l2 * 3 + dhn[(2 + f1.gmk / 6) % 4];
                } else
                if(j4 == 3 && l2 == 2)
                {
                    k5 = 0;
                    l5 = 8;
                    i6 = l2 * 3 + dhn[(2 + f1.gmk / 6) % 4];
                } else
                if(j4 == 3 && l2 == 3)
                {
                    k5 = -26;
                    l5 = 5;
                    i6 = l2 * 3 + dhn[(2 + f1.gmk / 6) % 4];
                }
            if(l2 == 5 && e.alj[i5] != 1)
                continue;
            int j6 = i6 + e.all[i5];
            k5 = (k5 * j1) / ((j) (dnb)).bmj[j6];
            l5 = (l5 * k1) / ((j) (dnb)).bmk[j6];
            int k6 = (j1 * ((j) (dnb)).bmj[j6]) / ((j) (dnb)).bmj[e.all[i5]];
            k5 -= (k6 - j1) / 2;
            int l6 = e.alh[i5];
            int i7 = dki[f1.hac];
            if(l6 == 1)
                l6 = eii[f1.gnn];
            else
            if(l6 == 2)
                l6 = eid[f1.haa];
            else
            if(l6 == 3)
                l6 = eid[f1.hab];
            dnb.cdd(l + k5, i1 + l5, k6, k1, j6, l6, i7, i2, flag);
        }

        if(f1.gnf > 0)
        {
            eaf[egg] = dnb.cef(f1.gne, 1) / 2;
            if(eaf[egg] > 150)
                eaf[egg] = 150;
            eag[egg] = (dnb.cef(f1.gne, 1) / 300) * dnb.ced(1);
            ead[egg] = l + j1 / 2;
            eae[egg] = i1;
            egh[egg++] = f1.gne;
        }
        if(f1.gnh > 0)
        {
            ebk[dib] = l + j1 / 2;
            ebl[dib] = i1;
            dfi[dib] = j2;
            dfj[dib++] = f1.gng;
        }
        if(f1.gml == 8 || f1.gml == 9 || f1.gnl != 0)
        {
            if(f1.gnl > 0)
            {
                int k3 = l;
                if(f1.gml == 8)
                    k3 -= (20 * j2) / 100;
                else
                if(f1.gml == 9)
                    k3 += (20 * j2) / 100;
                int k4 = (f1.gnj * 30) / f1.gnk;
                ekj[ejl] = k3 + j1 / 2;
                ekk[ejl] = i1;
                ekl[ejl++] = k4;
            }
            if(f1.gnl > 150)
            {
                int l3 = l;
                if(f1.gml == 8)
                    l3 -= (10 * j2) / 100;
                else
                if(f1.gml == 9)
                    l3 += (10 * j2) / 100;
                dnb.ccb((l3 + j1 / 2) - 12, (i1 + k1 / 2) - 12, efh + 11);
                dnb.cdl(String.valueOf(f1.gni), (l3 + j1 / 2) - 1, i1 + k1 / 2 + 5, 3, 0xffffff);
            }
        }
        if(f1.haj == 1 && f1.gnh == 0)
        {
            int i4 = i2 + l + j1 / 2;
            if(f1.gml == 8)
                i4 -= (20 * j2) / 100;
            else
            if(f1.gml == 9)
                i4 += (20 * j2) / 100;
            int l4 = (16 * j2) / 100;
            int j5 = (16 * j2) / 100;
            dnb.ccc(i4 - l4 / 2, i1 - j5 / 2 - (10 * j2) / 100, l4, j5, efh + 13);
        }
    }

    private final void eml(int l, int i1, int j1)
    {
        if(j1 == 0)
        {
            fae(djd, dje, l, i1 - 1, l, i1, false, true);
            return;
        }
        if(j1 == 1)
        {
            fae(djd, dje, l - 1, i1, l, i1, false, true);
            return;
        } else
        {
            fae(djd, dje, l, i1, l, i1, true, true);
            return;
        }
    }

    private final void emm()
    {
        byte byte0 = 22;
        byte byte1 = 36;
        dnb.cba(byte0, byte1, 468, 16, 192);
        int l = 0x989898;
        dnb.cam(byte0, byte1 + 16, 468, 246, l, 160);
        dnb.cdl((new StringBuilder()).append("Please confirm your duel with @yel@").append(t.fnd(dif)).toString(), byte0 + 234, byte1 + 12, 1, 0xffffff);
        dnb.cdl("Your stake:", byte0 + 117, byte1 + 30, 1, 0xffff00);
        for(int i1 = 0; i1 < eim; i1++)
        {
            String s1 = e.aib[ein[i1]];
            if(e.aig[ein[i1]] == 0)
                s1 = (new StringBuilder()).append(s1).append(" x ").append(fdh(eja[i1])).toString();
            dnb.cdl(s1, byte0 + 117, byte1 + 42 + i1 * 12, 1, 0xffffff);
        }

        if(eim == 0)
            dnb.cdl("Nothing!", byte0 + 117, byte1 + 42, 1, 0xffffff);
        dnb.cdl("Your opponent's stake:", byte0 + 351, byte1 + 30, 1, 0xffff00);
        for(int j1 = 0; j1 < efe; j1++)
        {
            String s2 = e.aib[eff[j1]];
            if(e.aig[eff[j1]] == 0)
                s2 = (new StringBuilder()).append(s2).append(" x ").append(fdh(efg[j1])).toString();
            dnb.cdl(s2, byte0 + 351, byte1 + 42 + j1 * 12, 1, 0xffffff);
        }

        if(efe == 0)
            dnb.cdl("Nothing!", byte0 + 351, byte1 + 42, 1, 0xffffff);
        if(ebm == 0)
            dnb.cdl("You can retreat from this duel", byte0 + 234, byte1 + 180, 1, 65280);
        else
            dnb.cdl("No retreat is possible!", byte0 + 234, byte1 + 180, 1, 0xff0000);
        if(ebn == 0)
            dnb.cdl("Magic may be used", byte0 + 234, byte1 + 192, 1, 65280);
        else
            dnb.cdl("Magic cannot be used", byte0 + 234, byte1 + 192, 1, 0xff0000);
        if(eca == 0)
            dnb.cdl("Prayer may be used", byte0 + 234, byte1 + 204, 1, 65280);
        else
            dnb.cdl("Prayer cannot be used", byte0 + 234, byte1 + 204, 1, 0xff0000);
        if(ecb == 0)
            dnb.cdl("Weapons may be used", byte0 + 234, byte1 + 216, 1, 65280);
        else
            dnb.cdl("Weapons cannot be used", byte0 + 234, byte1 + 216, 1, 0xff0000);
        dnb.cdl("If you are sure click 'Accept' to begin the duel", byte0 + 234, byte1 + 230, 1, 0xffffff);
        if(!ecm)
        {
            dnb.ccb((byte0 + 118) - 35, byte1 + 238, efh + 25);
            dnb.ccb((byte0 + 352) - 35, byte1 + 238, efh + 26);
        } else
        {
            dnb.cdl("Waiting for other player...", byte0 + 234, byte1 + 250, 1, 0xffff00);
        }
        if(dnl == 1)
        {
            if(super.fke < byte0 || super.fkf < byte1 || super.fke > byte0 + 468 || super.fkf > byte1 + 262)
            {
                ecl = false;
                super.aag.hcn(27);
                super.aag.hdl();
            }
            if(super.fke >= (byte0 + 118) - 35 && super.fke <= byte0 + 118 + 70 && super.fkf >= byte1 + 238 && super.fkf <= byte1 + 238 + 21)
            {
                ecm = true;
                super.aag.hcn(175);
                super.aag.hdl();
            }
            if(super.fke >= (byte0 + 352) - 35 && super.fke <= byte0 + 353 + 70 && super.fkf >= byte1 + 238 && super.fkf <= byte1 + 238 + 21)
            {
                ecl = false;
                super.aag.hcn(43);
                super.aag.hdl();
            }
            dnl = 0;
        }
    }

    private final void emn()
    {
        ehe = 0;
        ecf = 0;
        ekc = "cristalskull";
        ekd = "pacbell";
        dja = "Please enter a username:";
        djb = (new StringBuilder()).append("*").append(ekc).append("*").toString();
        dgm = 0;
        ebb = 0;
    }

    protected final void ena()
    {
        aca();
        fbe();
        if(dic != null)
            dic.ggl();
    }

    protected final Socket enb(String s1, int l)
        throws IOException
    {
        if(link.fni != null)
        {
            Socket socket = link.gag(l);
            if(socket == null)
                throw new IOException();
            else
                return socket;
        }
        Socket socket1;
        if(fld())
            socket1 = new Socket(InetAddress.getByName(getCodeBase().getHost()), l);
        else
            socket1 = new Socket(InetAddress.getByName(s1), l);
        socket1.setSoTimeout(30000);
        socket1.setTcpNoDelay(true);
        return socket1;
    }

    private final void enc(boolean flag)
    {
        int l = ((j) (dnb)).blg - 248;
        dnb.ccb(l, 3, efh + 1);
        for(int i1 = 0; i1 < ebe; i1++)
        {
            int i2 = l + (i1 % 5) * 49;
            int k2 = 36 + (i1 / 5) * 34;
            if(i1 < ede && edh[i1] == 1)
                dnb.cam(i2, k2, 49, 34, 0xff0000, 128);
            else
                dnb.cam(i2, k2, 49, 34, j.cbh(181, 181, 181), 128);
            if(i1 >= ede)
                continue;
            dnb.cdd(i2, k2, 48, 32, efj + e.aie[edf[i1]], e.aij[edf[i1]], 0, 0, false);
            if(e.aig[edf[i1]] == 0)
                dnb.cdn(String.valueOf(edg[i1]), i2 + 1, k2 + 10, 1, 0xffff00);
        }

        for(int j1 = 1; j1 <= 4; j1++)
            dnb.cbd(l + j1 * 49, 36, (ebe / 5) * 34, 0);

        for(int k1 = 1; k1 <= ebe / 5 - 1; k1++)
            dnb.cbc(l, 36 + k1 * 34, 245, 0);

        if(!flag)
            return;
        l = super.fke - (((j) (dnb)).blg - 248);
        int l1 = super.fkf - 36;
        if(l >= 0 && l1 >= 0 && l < 248 && l1 < (ebe / 5) * 34)
        {
            int j2 = l / 49 + (l1 / 34) * 5;
            if(j2 < ede)
            {
                int l2 = edf[j2];
                if(dil >= 0)
                {
                    if(e.amd[dil] == 3)
                    {
                        dem[ejf] = (new StringBuilder()).append("Cast ").append(e.akj[dil]).append(" on").toString();
                        ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[l2]).toString();
                        dga[ejf] = 600;
                        djk[ejf] = j2;
                        djl[ejf] = dil;
                        ejf++;
                        return;
                    }
                } else
                {
                    if(edi >= 0)
                    {
                        dem[ejf] = (new StringBuilder()).append("Use ").append(edj).append(" with").toString();
                        ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[l2]).toString();
                        dga[ejf] = 610;
                        djk[ejf] = j2;
                        djl[ejf] = edi;
                        ejf++;
                        return;
                    }
                    if(edh[j2] == 1)
                    {
                        dem[ejf] = "Remove";
                        ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[l2]).toString();
                        dga[ejf] = 620;
                        djk[ejf] = j2;
                        ejf++;
                    } else
                    if(e.aii[l2] != 0)
                    {
                        if((e.aii[l2] & 0x18) != 0)
                            dem[ejf] = "Wield";
                        else
                            dem[ejf] = "Wear";
                        ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[l2]).toString();
                        dga[ejf] = 630;
                        djk[ejf] = j2;
                        ejf++;
                    }
                    if(!e.aid[l2].equals(""))
                    {
                        dem[ejf] = e.aid[l2];
                        ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[l2]).toString();
                        dga[ejf] = 640;
                        djk[ejf] = j2;
                        ejf++;
                    }
                    dem[ejf] = "Use";
                    ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[l2]).toString();
                    dga[ejf] = 650;
                    djk[ejf] = j2;
                    ejf++;
                    dem[ejf] = "Drop";
                    ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[l2]).toString();
                    dga[ejf] = 660;
                    djk[ejf] = j2;
                    ejf++;
                    dem[ejf] = "Examine";
                    ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[l2]).toString();
                    dga[ejf] = 3600;
                    djk[ejf] = l2;
                    ejf++;
                }
            }
        }
    }

    private final void end()
    {
        int l = 0;
        byte byte0 = 50;
        byte byte1 = 50;
        dnh.gjj(byte0 * 48 + 23, byte1 * 48 + 23, l);
        dnh.glg(edb);
        char c1 = '\u2600';
        char c2 = '\u1900';
        char c3 = '\u044C';
        char c4 = '\u0378';
        ejg.bbg = 4100;
        ejg.bbh = 4100;
        ejg.bbi = 1;
        ejg.bbj = 4000;
        ejg.bin(c1, -dnh.gjf(c1, c2), c2, 912, c4, 0, c3 * 2);
        ejg.bib();
        dnb.cbf();
        dnb.cbf();
        dnb.cba(0, 0, 512, 6, 0);
        for(int i1 = 6; i1 >= 1; i1--)
            dnb.cbg(0, i1, 0, i1, 512, 8);

        dnb.cba(0, 194, 512, 20, 0);
        for(int j1 = 6; j1 >= 1; j1--)
            dnb.cbg(0, j1, 0, 194 - j1, 512, 8);

        dnb.ccb(15, 15, efh + 10);
        dnb.cca(efn, 0, 0, 512, 200);
        dnb.cbl(efn);
        c1 = '\u2400';
        c2 = '\u2400';
        c3 = '\u044C';
        c4 = '\u0378';
        ejg.bbg = 4100;
        ejg.bbh = 4100;
        ejg.bbi = 1;
        ejg.bbj = 4000;
        ejg.bin(c1, -dnh.gjf(c1, c2), c2, 912, c4, 0, c3 * 2);
        ejg.bib();
        dnb.cbf();
        dnb.cbf();
        dnb.cba(0, 0, 512, 6, 0);
        for(int k1 = 6; k1 >= 1; k1--)
            dnb.cbg(0, k1, 0, k1, 512, 8);

        dnb.cba(0, 194, 512, 20, 0);
        for(int l1 = 6; l1 >= 1; l1--)
            dnb.cbg(0, l1, 0, 194 - l1, 512, 8);

        dnb.ccb(15, 15, efh + 10);
        dnb.cca(efn + 1, 0, 0, 512, 200);
        dnb.cbl(efn + 1);
        for(int i2 = 0; i2 < 64; i2++)
        {
            ejg.bgn(dnh.gih[0][i2]);
            ejg.bgn(dnh.gim[1][i2]);
            ejg.bgn(dnh.gih[1][i2]);
            ejg.bgn(dnh.gim[2][i2]);
            ejg.bgn(dnh.gih[2][i2]);
        }

        c1 = '\u2B80';
        c2 = '\u2880';
        c3 = '\u01F4';
        c4 = '\u0178';
        ejg.bbg = 4100;
        ejg.bbh = 4100;
        ejg.bbi = 1;
        ejg.bbj = 4000;
        ejg.bin(c1, -dnh.gjf(c1, c2), c2, 912, c4, 0, c3 * 2);
        ejg.bib();
        dnb.cbf();
        dnb.cbf();
        dnb.cba(0, 0, 512, 6, 0);
        for(int j2 = 6; j2 >= 1; j2--)
            dnb.cbg(0, j2, 0, j2, 512, 8);

        dnb.cba(0, 194, 512, 20, 0);
        for(int k2 = 6; k2 >= 1; k2--)
            dnb.cbg(0, k2, 0, 194, 512, 8);

        dnb.ccb(15, 15, efh + 10);
        dnb.cca(efh + 10, 0, 0, 512, 200);
        dnb.cbl(efh + 10);
    }

    protected final void adf(int l, int i1, byte abyte0[])
    {
        if(l == 141)
        {
            dgn = dgm;
            for(int j1 = 0; j1 < dgn; j1++)
                edk[j1] = deh[j1];

            int k1 = 8;
            djd = t.fmn(abyte0, k1, 11);
            k1 += 11;
            dje = t.fmn(abyte0, k1, 13);
            k1 += 13;
            int k5 = t.fmn(abyte0, k1, 4);
            k1 += 4;
            boolean flag1 = fdg(djd, dje);
            djd -= dni;
            dje -= dnj;
            int l13 = djd * ehd + 64;
            int i17 = dje * ehd + 64;
            if(flag1)
            {
                djc.gna = 0;
                djc.gmn = 0;
                djc.gmh = djc.gnb[0] = l13;
                djc.gmi = djc.gnc[0] = i17;
            }
            dgm = 0;
            djc = fbj(djf, l13, i17, k5);
            int l19 = t.fmn(abyte0, k1, 8);
            k1 += 8;
            for(int j23 = 0; j23 < l19; j23++)
            {
                f f4 = edk[j23 + 1];
                int k32 = t.fmn(abyte0, k1, 1);
                k1++;
                if(k32 != 0)
                {
                    int j34 = t.fmn(abyte0, k1, 1);
                    k1++;
                    if(j34 == 0)
                    {
                        int k35 = t.fmn(abyte0, k1, 3);
                        k1 += 3;
                        int k36 = f4.gna;
                        int j37 = f4.gnb[k36];
                        int l37 = f4.gnc[k36];
                        if(k35 == 2 || k35 == 1 || k35 == 3)
                            j37 += ehd;
                        if(k35 == 6 || k35 == 5 || k35 == 7)
                            j37 -= ehd;
                        if(k35 == 4 || k35 == 3 || k35 == 5)
                            l37 += ehd;
                        if(k35 == 0 || k35 == 1 || k35 == 7)
                            l37 -= ehd;
                        f4.gmm = k35;
                        f4.gna = k36 = (k36 + 1) % 10;
                        f4.gnb[k36] = j37;
                        f4.gnc[k36] = l37;
                    } else
                    {
                        int l35 = t.fmn(abyte0, k1, 4);
                        if((l35 & 0xc) == 12)
                        {
                            k1 += 2;
                            continue;
                        }
                        f4.gmm = t.fmn(abyte0, k1, 4);
                        k1 += 4;
                    }
                }
                deh[dgm++] = f4;
            }

            int k23 = 0;
            do
            {
                if(k1 + 24 >= i1 * 8)
                    break;
                int i29 = t.fmn(abyte0, k1, 11);
                k1 += 11;
                int l32 = t.fmn(abyte0, k1, 5);
                k1 += 5;
                if(l32 > 15)
                    l32 -= 32;
                int k34 = t.fmn(abyte0, k1, 5);
                k1 += 5;
                if(k34 > 15)
                    k34 -= 32;
                int i36 = t.fmn(abyte0, k1, 4);
                k1 += 4;
                int l36 = t.fmn(abyte0, k1, 1);
                k1++;
                int k37 = (djd + l32) * ehd + 64;
                int i38 = (dje + k34) * ehd + 64;
                fbj(i29, k37, i38, i36);
                if(l36 == 0)
                    ece[k23++] = i29;
            } while(true);
            if(k23 > 0)
            {
                super.aag.hcn(241);
                super.aag.hdj(k23);
                for(int j29 = 0; j29 < k23; j29++)
                {
                    f f5 = dhb[ece[j29]];
                    super.aag.hdj(f5.gmf);
                    super.aag.hdj(f5.gmg);
                }

                super.aag.hdl();
                k23 = 0;
            }
            return;
        }
        if(l == 172)
        {
            for(int l1 = 1; l1 < i1;)
                if(t.fmh(abyte0[l1]) == 255)
                {
                    int l5 = 0;
                    int i10 = djd + abyte0[l1 + 1] >> 3;
                    int i14 = dje + abyte0[l1 + 2] >> 3;
                    l1 += 3;
                    for(int j17 = 0; j17 < dhd; j17++)
                    {
                        int i20 = (dml[j17] >> 3) - i10;
                        int l23 = (dmm[j17] >> 3) - i14;
                        if(i20 == 0 && l23 == 0)
                            continue;
                        if(j17 != l5)
                        {
                            dml[l5] = dml[j17];
                            dmm[l5] = dmm[j17];
                            dmn[l5] = dmn[j17];
                            dna[l5] = dna[j17];
                        }
                        l5++;
                    }

                    dhd = l5;
                } else
                {
                    int i6 = t.fmi(abyte0, l1);
                    l1 += 2;
                    int j10 = djd + abyte0[l1++];
                    int j14 = dje + abyte0[l1++];
                    if((i6 & 0x8000) == 0)
                    {
                        dml[dhd] = j10;
                        dmm[dhd] = j14;
                        dmn[dhd] = i6;
                        dna[dhd] = 0;
                        int k17 = 0;
                        do
                        {
                            if(k17 >= efd)
                                break;
                            if(ekm[k17] == j10 && ekn[k17] == j14)
                            {
                                dna[dhd] = e.amk[ela[k17]];
                                break;
                            }
                            k17++;
                        } while(true);
                        dhd++;
                    } else
                    {
                        i6 &= 0x7fff;
                        int l17 = 0;
                        for(int j20 = 0; j20 < dhd; j20++)
                            if(dml[j20] != j10 || dmm[j20] != j14 || dmn[j20] != i6)
                            {
                                if(j20 != l17)
                                {
                                    dml[l17] = dml[j20];
                                    dmm[l17] = dmm[j20];
                                    dmn[l17] = dmn[j20];
                                    dna[l17] = dna[j20];
                                }
                                l17++;
                            } else
                            {
                                i6 = -123;
                            }

                        dhd = l17;
                    }
                }

            return;
        }
        if(l == 158)
        {
            int i2 = 1;
            do
            {
                if(i2 >= i1)
                    break;
                if(t.fmh(abyte0[i2]) == 255)
                {
                    int j6 = 0;
                    int k10 = djd + abyte0[i2 + 1] >> 3;
                    int k14 = dje + abyte0[i2 + 2] >> 3;
                    i2 += 3;
                    for(int i18 = 0; i18 < efd; i18++)
                    {
                        int k20 = (ekm[i18] >> 3) - k10;
                        int i24 = (ekn[i18] >> 3) - k14;
                        if(k20 != 0 || i24 != 0)
                        {
                            if(i18 != j6)
                            {
                                dik[j6] = dik[i18];
                                dik[j6].chk = j6;
                                ekm[j6] = ekm[i18];
                                ekn[j6] = ekn[i18];
                                ela[j6] = ela[i18];
                                elb[j6] = elb[i18];
                            }
                            j6++;
                        } else
                        {
                            ejg.bgn(dik[i18]);
                            dnh.gkf(ekm[i18], ekn[i18], ela[i18]);
                        }
                    }

                    efd = j6;
                } else
                {
                    int k6 = t.fmi(abyte0, i2);
                    i2 += 2;
                    int l10 = djd + abyte0[i2++];
                    int l14 = dje + abyte0[i2++];
                    int j18 = 0;
                    for(int l20 = 0; l20 < efd; l20++)
                        if(ekm[l20] != l10 || ekn[l20] != l14)
                        {
                            if(l20 != j18)
                            {
                                dik[j18] = dik[l20];
                                dik[j18].chk = j18;
                                ekm[j18] = ekm[l20];
                                ekn[j18] = ekn[l20];
                                ela[j18] = ela[l20];
                                elb[j18] = elb[l20];
                            }
                            j18++;
                        } else
                        {
                            ejg.bgn(dik[l20]);
                            dnh.gkf(ekm[l20], ekn[l20], ela[l20]);
                        }

                    efd = j18;
                    if(k6 != 60000)
                    {
                        int i21 = dnh.gke(l10, l14);
                        int j24;
                        int k29;
                        if(i21 == 0 || i21 == 4)
                        {
                            j24 = e.amh[k6];
                            k29 = e.ami[k6];
                        } else
                        {
                            k29 = e.amh[k6];
                            j24 = e.ami[k6];
                        }
                        int i33 = ((l10 + l10 + j24) * ehd) / 2;
                        int l34 = ((l14 + l14 + k29) * ehd) / 2;
                        int j36 = e.amg[k6];
                        i i37 = edb[j36].cnj();
                        ejg.bgm(i37);
                        i37.chk = efd;
                        i37.cmi(0, i21 * 32, 0);
                        i37.cmk(i33, -dnh.gjf(i33, l34), l34);
                        i37.cme(true, 48, 48, -50, -10, -50);
                        dnh.gla(l10, l14, k6);
                        if(k6 == 74)
                            i37.cmk(0, -480, 0);
                        ekm[efd] = l10;
                        ekn[efd] = l14;
                        ela[efd] = k6;
                        elb[efd] = i21;
                        dik[efd++] = i37;
                    }
                }
            } while(true);
            return;
        }
        if(l == 37)
        {
            int j2 = 1;
            ede = abyte0[j2++] & 0xff;
            for(int l6 = 0; l6 < ede; l6++)
            {
                int i11 = t.fmi(abyte0, j2);
                j2 += 2;
                edf[l6] = i11 & 0x7fff;
                edh[l6] = i11 / 32768;
                if(e.aig[i11 & 0x7fff] == 0)
                {
                    edg[l6] = t.fmm(abyte0, j2);
                    if(edg[l6] >= 128)
                        j2 += 4;
                    else
                        j2++;
                } else
                {
                    edg[l6] = 1;
                }
            }

            return;
        }
        if(l == 183)
        {
            int k2 = t.fmi(abyte0, 1);
            int i7 = 3;
            for(int j11 = 0; j11 < k2; j11++)
            {
                int i15 = t.fmi(abyte0, i7);
                i7 += 2;
                f f2 = dhb[i15];
                byte byte2 = abyte0[i7];
                i7++;
                if(byte2 == 0)
                {
                    int k24 = t.fmi(abyte0, i7);
                    i7 += 2;
                    if(f2 != null)
                    {
                        f2.gnh = 150;
                        f2.gng = k24;
                    }
                    continue;
                }
                if(byte2 == 1)
                {
                    byte byte3 = abyte0[i7];
                    i7++;
                    if(f2 != null)
                    {
                        String s3 = u.fgd(v.cej(abyte0, i7, byte3));
                        boolean flag3 = false;
                        for(int i35 = 0; i35 < super.aan; i35++)
                            if(super.aba[i35] == f2.gmd)
                                flag3 = true;

                        if(!flag3)
                        {
                            f2.gnf = 150;
                            f2.gne = s3;
                            fdj((new StringBuilder()).append(f2.gme).append(": ").append(f2.gne).toString(), 2);
                        }
                    }
                    i7 += byte3;
                    continue;
                }
                if(byte2 == 2)
                {
                    int l24 = t.fmh(abyte0[i7]);
                    i7++;
                    int l29 = t.fmh(abyte0[i7]);
                    i7++;
                    int j33 = t.fmh(abyte0[i7]);
                    i7++;
                    if(f2 == null)
                        continue;
                    f2.gni = l24;
                    f2.gnj = l29;
                    f2.gnk = j33;
                    f2.gnl = 200;
                    if(f2 == djc)
                    {
                        dfk[3] = l29;
                        dmf[3] = j33;
                        djj = false;
                        ecc = false;
                    }
                    continue;
                }
                if(byte2 == 3)
                {
                    int i25 = t.fmi(abyte0, i7);
                    i7 += 2;
                    int i30 = t.fmi(abyte0, i7);
                    i7 += 2;
                    if(f2 != null)
                    {
                        f2.had = i25;
                        f2.haf = i30;
                        f2.hae = -1;
                        f2.hag = eic;
                    }
                    continue;
                }
                if(byte2 == 4)
                {
                    int j25 = t.fmi(abyte0, i7);
                    i7 += 2;
                    int j30 = t.fmi(abyte0, i7);
                    i7 += 2;
                    if(f2 != null)
                    {
                        f2.had = j25;
                        f2.hae = j30;
                        f2.haf = -1;
                        f2.hag = eic;
                    }
                    continue;
                }
                if(byte2 == 5)
                {
                    if(f2 != null)
                    {
                        f2.gmg = t.fmi(abyte0, i7);
                        i7 += 2;
                        f2.gmd = t.fmk(abyte0, i7);
                        i7 += 8;
                        f2.gme = t.fnd(f2.gmd);
                        int k25 = t.fmh(abyte0[i7]);
                        i7++;
                        for(int k30 = 0; k30 < k25; k30++)
                        {
                            f2.gnd[k30] = t.fmh(abyte0[i7]);
                            i7++;
                        }

                        for(int l30 = k25; l30 < 12; l30++)
                            f2.gnd[l30] = 0;

                        f2.gnn = abyte0[i7++] & 0xff;
                        f2.haa = abyte0[i7++] & 0xff;
                        f2.hab = abyte0[i7++] & 0xff;
                        f2.hac = abyte0[i7++] & 0xff;
                        f2.gnm = abyte0[i7++] & 0xff;
                        f2.haj = abyte0[i7++] & 0xff;
                    } else
                    {
                        i7 += 14;
                        int l25 = t.fmh(abyte0[i7]);
                        i7 += l25 + 1;
                    }
                    continue;
                }
                if(byte2 != 6)
                    continue;
                byte byte4 = abyte0[i7];
                i7++;
                if(f2 != null)
                {
                    String s4 = v.cej(abyte0, i7, byte4);
                    f2.gnf = 150;
                    f2.gne = s4;
                    if(f2 == djc)
                        fdj((new StringBuilder()).append(f2.gme).append(": ").append(f2.gne).toString(), 5);
                }
                i7 += byte4;
            }

            return;
        }
        if(l == 29)
        {
            int l2 = 1;
            do
            {
                if(l2 >= i1)
                    break;
                if(t.fmh(abyte0[l2]) == 255)
                {
                    int j7 = 0;
                    int k11 = djd + abyte0[l2 + 1] >> 3;
                    int j15 = dje + abyte0[l2 + 2] >> 3;
                    l2 += 3;
                    for(int k18 = 0; k18 < ehc; k18++)
                    {
                        int j21 = (dhg[k18] >> 3) - k11;
                        int i26 = (dhh[k18] >> 3) - j15;
                        if(j21 != 0 || i26 != 0)
                        {
                            if(k18 != j7)
                            {
                                did[j7] = did[k18];
                                did[j7].chk = j7 + 10000;
                                dhg[j7] = dhg[k18];
                                dhh[j7] = dhh[k18];
                                ecn[j7] = ecn[k18];
                                eda[j7] = eda[k18];
                            }
                            j7++;
                        } else
                        {
                            ejg.bgn(did[k18]);
                            dnh.gkb(dhg[k18], dhh[k18], ecn[k18], eda[k18]);
                        }
                    }

                    ehc = j7;
                } else
                {
                    int k7 = t.fmi(abyte0, l2);
                    l2 += 2;
                    int l11 = djd + abyte0[l2++];
                    int k15 = dje + abyte0[l2++];
                    byte byte1 = abyte0[l2++];
                    int k21 = 0;
                    for(int j26 = 0; j26 < ehc; j26++)
                        if(dhg[j26] != l11 || dhh[j26] != k15 || ecn[j26] != byte1)
                        {
                            if(j26 != k21)
                            {
                                did[k21] = did[j26];
                                did[k21].chk = k21 + 10000;
                                dhg[k21] = dhg[j26];
                                dhh[k21] = dhh[j26];
                                ecn[k21] = ecn[j26];
                                eda[k21] = eda[j26];
                            }
                            k21++;
                        } else
                        {
                            ejg.bgn(did[j26]);
                            dnh.gkb(dhg[j26], dhh[j26], ecn[j26], eda[j26]);
                        }

                    ehc = k21;
                    if(k7 != 65535)
                    {
                        dnh.gkc(l11, k15, byte1, k7);
                        i k26 = fdm(l11, k15, byte1, k7, ehc);
                        did[ehc] = k26;
                        dhg[ehc] = l11;
                        dhh[ehc] = k15;
                        eda[ehc] = k7;
                        ecn[ehc++] = byte1;
                    }
                }
            } while(true);
            return;
        }
        if(l == 41)
        {
            ebc = ebb;
            ebb = 0;
            for(int i3 = 0; i3 < ebc; i3++)
                edc[i3] = dgf[i3];

            int j3 = 8;
            int l7 = t.fmn(abyte0, j3, 8);
            j3 += 8;
            for(int i12 = 0; i12 < l7; i12++)
            {
                f f1 = edc[i12];
                int l18 = t.fmn(abyte0, j3, 1);
                j3++;
                if(l18 != 0)
                {
                    int l21 = t.fmn(abyte0, j3, 1);
                    j3++;
                    if(l21 == 0)
                    {
                        int l26 = t.fmn(abyte0, j3, 3);
                        j3 += 3;
                        int i31 = f1.gna;
                        int k33 = f1.gnb[i31];
                        int j35 = f1.gnc[i31];
                        if(l26 == 2 || l26 == 1 || l26 == 3)
                            k33 += ehd;
                        if(l26 == 6 || l26 == 5 || l26 == 7)
                            k33 -= ehd;
                        if(l26 == 4 || l26 == 3 || l26 == 5)
                            j35 += ehd;
                        if(l26 == 0 || l26 == 1 || l26 == 7)
                            j35 -= ehd;
                        f1.gmm = l26;
                        f1.gna = i31 = (i31 + 1) % 10;
                        f1.gnb[i31] = k33;
                        f1.gnc[i31] = j35;
                    } else
                    {
                        int i27 = t.fmn(abyte0, j3, 4);
                        if((i27 & 0xc) == 12)
                        {
                            j3 += 2;
                            continue;
                        }
                        f1.gmm = t.fmn(abyte0, j3, 4);
                        j3 += 4;
                    }
                }
                dgf[ebb++] = f1;
            }

            while(j3 + 34 < i1 * 8) 
            {
                int j12 = t.fmn(abyte0, j3, 12);
                j3 += 12;
                int l15 = t.fmn(abyte0, j3, 5);
                j3 += 5;
                if(l15 > 15)
                    l15 -= 32;
                int i19 = t.fmn(abyte0, j3, 5);
                j3 += 5;
                if(i19 > 15)
                    i19 -= 32;
                int i22 = t.fmn(abyte0, j3, 4);
                j3 += 4;
                int j27 = (djd + l15) * ehd + 64;
                int j31 = (dje + i19) * ehd + 64;
                int l33 = t.fmn(abyte0, j3, 10);
                j3 += 10;
                if(l33 >= e.alg)
                    l33 = 24;
                fea(j12, j27, j31, i22, l33);
            }
            return;
        }
        if(l == 47)
        {
            int k3 = t.fmi(abyte0, 1);
            int i8 = 3;
            for(int k12 = 0; k12 < k3; k12++)
            {
                int i16 = t.fmi(abyte0, i8);
                i8 += 2;
                f f3 = ele[i16];
                int j22 = t.fmh(abyte0[i8]);
                i8++;
                if(j22 == 1)
                {
                    int k27 = t.fmi(abyte0, i8);
                    i8 += 2;
                    byte byte5 = abyte0[i8];
                    i8++;
                    if(f3 != null)
                    {
                        String s5 = v.cej(abyte0, i8, byte5);
                        f3.gnf = 150;
                        f3.gne = s5;
                        if(k27 == djc.gmf)
                            fdj((new StringBuilder()).append("@yel@").append(e.ahd[f3.gmj]).append(": ").append(f3.gne).toString(), 5);
                    }
                    i8 += byte5;
                    continue;
                }
                if(j22 != 2)
                    continue;
                int l27 = t.fmh(abyte0[i8]);
                i8++;
                int k31 = t.fmh(abyte0[i8]);
                i8++;
                int i34 = t.fmh(abyte0[i8]);
                i8++;
                if(f3 != null)
                {
                    f3.gni = l27;
                    f3.gnj = k31;
                    f3.gnk = i34;
                    f3.gnl = 200;
                }
            }

            return;
        }
        if(l == 117)
        {
            dck = true;
            int l3 = t.fmh(abyte0[1]);
            egk = l3;
            int j8 = 2;
            for(int l12 = 0; l12 < l3; l12++)
            {
                int j16 = t.fmh(abyte0[j8]);
                j8++;
                dda[l12] = new String(abyte0, j8, j16);
                j8 += j16;
            }

            return;
        }
        if(l == 208)
        {
            dck = false;
            return;
        }
        if(l == 249)
        {
            elk = true;
            djf = t.fmi(abyte0, 1);
            eai = t.fmi(abyte0, 3);
            eaj = t.fmi(abyte0, 5);
            dnk = t.fmi(abyte0, 7);
            eak = t.fmi(abyte0, 9);
            eaj -= dnk * eak;
            return;
        }
        if(l == 16)
        {
            int i4 = 1;
            for(int k8 = 0; k8 < 18; k8++)
                dfk[k8] = t.fmh(abyte0[i4++]);

            for(int l8 = 0; l8 < 18; l8++)
                dmf[l8] = t.fmh(abyte0[i4++]);

            for(int i9 = 0; i9 < 18; i9++)
            {
                edn[i9] = t.fmj(abyte0, i4);
                i4 += 4;
            }

            ema = t.fmh(abyte0[i4++]);
            return;
        }
        if(l == 33)
        {
            for(int j4 = 0; j4 < 5; j4++)
                ege[j4] = t.fmh(abyte0[1 + j4]);

            return;
        }
        if(l == 109)
        {
            dgb = 250;
            return;
        }
        if(l == 76)
        {
            int k4 = (i1 - 1) / 4;
            for(int j9 = 0; j9 < k4; j9++)
            {
                int i13 = djd + t.fml(abyte0, 1 + j9 * 4) >> 3;
                int k16 = dje + t.fml(abyte0, 3 + j9 * 4) >> 3;
                int j19 = 0;
                for(int k22 = 0; k22 < dhd; k22++)
                {
                    int i28 = (dml[k22] >> 3) - i13;
                    int l31 = (dmm[k22] >> 3) - k16;
                    if(i28 == 0 && l31 == 0)
                        continue;
                    if(k22 != j19)
                    {
                        dml[j19] = dml[k22];
                        dmm[j19] = dmm[k22];
                        dmn[j19] = dmn[k22];
                        dna[j19] = dna[k22];
                    }
                    j19++;
                }

                dhd = j19;
                j19 = 0;
                for(int l22 = 0; l22 < efd; l22++)
                {
                    int j28 = (ekm[l22] >> 3) - i13;
                    int i32 = (ekn[l22] >> 3) - k16;
                    if(j28 != 0 || i32 != 0)
                    {
                        if(l22 != j19)
                        {
                            dik[j19] = dik[l22];
                            dik[j19].chk = j19;
                            ekm[j19] = ekm[l22];
                            ekn[j19] = ekn[l22];
                            ela[j19] = ela[l22];
                            elb[j19] = elb[l22];
                        }
                        j19++;
                    } else
                    {
                        ejg.bgn(dik[l22]);
                        dnh.gkf(ekm[l22], ekn[l22], ela[l22]);
                    }
                }

                efd = j19;
                j19 = 0;
                for(int i23 = 0; i23 < ehc; i23++)
                {
                    int k28 = (dhg[i23] >> 3) - i13;
                    int j32 = (dhh[i23] >> 3) - k16;
                    if(k28 != 0 || j32 != 0)
                    {
                        if(i23 != j19)
                        {
                            did[j19] = did[i23];
                            did[j19].chk = j19 + 10000;
                            dhg[j19] = dhg[i23];
                            dhh[j19] = dhh[i23];
                            ecn[j19] = ecn[i23];
                            eda[j19] = eda[i23];
                        }
                        j19++;
                    } else
                    {
                        ejg.bgn(did[i23]);
                        dnh.gkb(dhg[i23], dhh[i23], ecn[i23], eda[i23]);
                    }
                }

                ehc = j19;
            }

            return;
        }
        if(l == 7)
        {
            eln = true;
            return;
        }
        if(l == 108)
        {
            int l4 = t.fmi(abyte0, 1);
            if(dhb[l4] != null)
                dcg = dhb[l4].gme;
            dge = true;
            dfg = false;
            dfh = false;
            djg = 0;
            dfd = 0;
            return;
        }
        if(l == 113)
        {
            dge = false;
            edl = false;
            return;
        }
        if(l == 155)
        {
            dfd = abyte0[1] & 0xff;
            int i5 = 2;
            for(int k9 = 0; k9 < dfd; k9++)
            {
                dfe[k9] = t.fmi(abyte0, i5);
                i5 += 2;
                dff[k9] = t.fmj(abyte0, i5);
                i5 += 4;
            }

            dfg = false;
            dfh = false;
            return;
        }
        if(l != 185)
            break MISSING_BLOCK_LABEL_5696;
        byte byte0 = abyte0[1];
        if(byte0 == 1)
        {
            dfg = true;
            return;
        }
        int j5;
        String s1;
        int l9;
        boolean flag;
        int j13;
        int l16;
        int k19;
        boolean flag2;
        int l28;
        try
        {
            dfg = false;
            return;
        }
        catch(RuntimeException runtimeexception)
        {
            if(deb < 3)
            {
                super.aag.hcn(7);
                super.aag.hdc(runtimeexception.toString());
                super.aag.hdl();
                super.aag.hcn(7);
                super.aag.hdc((new StringBuilder()).append("p-type:").append(l).append(" p-size:").append(i1).toString());
                super.aag.hdl();
                super.aag.hcn(7);
                super.aag.hdc((new StringBuilder()).append("rx:").append(djd).append(" ry:").append(dje).append(" num3l:").append(efd).toString());
                super.aag.hdl();
                String s2 = "";
                for(int k13 = 0; k13 < 80 && k13 < i1; k13++)
                    s2 = (new StringBuilder()).append(s2).append(abyte0[k13]).append(" ").toString();

                super.aag.hcn(7);
                super.aag.hdc(s2);
                super.aag.hdl();
                deb++;
            }
        }
        break MISSING_BLOCK_LABEL_8292;
        if(l == 24)
        {
            dmk = true;
            j5 = 1;
            l9 = abyte0[j5++] & 0xff;
            j13 = abyte0[j5++];
            dmc = abyte0[j5++] & 0xff;
            dmd = abyte0[j5++] & 0xff;
            for(l16 = 0; l16 < 40; l16++)
                efa[l16] = -1;

            for(l16 = 0; l16 < l9; l16++)
            {
                efa[l16] = t.fmi(abyte0, j5);
                j5 += 2;
                efb[l16] = t.fmi(abyte0, j5);
                j5 += 2;
                efc[l16] = abyte0[j5++];
            }

            if(j13 == 1)
            {
                l16 = 39;
                for(k19 = 0; k19 < ede && l16 >= l9; k19++)
                {
                    flag2 = false;
                    l28 = 0;
                    do
                    {
                        if(l28 >= 40)
                            break;
                        if(efa[l28] == edf[k19])
                        {
                            flag2 = true;
                            break;
                        }
                        l28++;
                    } while(true);
                    if(edf[k19] == 10)
                        flag2 = true;
                    if(!flag2)
                    {
                        efa[l16] = edf[k19] & 0x7fff;
                        efb[l16] = 0;
                        efc[l16] = 0;
                        l16--;
                    }
                }

            }
            if(dej >= 0 && dej < 40 && efa[dej] != dek)
            {
                dej = -1;
                dek = -2;
            }
            return;
        }
        if(l == 42)
        {
            dmk = false;
            return;
        }
        if(l != 170)
            break MISSING_BLOCK_LABEL_6074;
        j5 = abyte0[1];
        if(j5 == 1)
        {
            dfh = true;
            return;
        }
        dfh = false;
        return;
        if(l == 161)
        {
            dka = t.fmh(abyte0[1]) == 1;
            eef = t.fmh(abyte0[2]) == 1;
            dkj = t.fmh(abyte0[3]) == 1;
            return;
        }
        if(l == 222)
        {
            for(j5 = 0; j5 < i1 - 1; j5++)
            {
                flag = abyte0[j5 + 1] == 1;
                if(!eeh[j5] && flag)
                    fee("prayeron");
                if(eeh[j5] && !flag)
                    fee("prayeroff");
                eeh[j5] = flag;
            }

            return;
        }
        if(l == 26)
        {
            for(j5 = 0; j5 < 50; j5++)
                ehf[j5] = abyte0[j5 + 1] == 1;

            return;
        }
        if(l == 188)
        {
            dmb = true;
            j5 = 1;
            elg = abyte0[j5++] & 0xff;
            dnc = abyte0[j5++] & 0xff;
            for(flag = false; flag < elg; flag++)
            {
                dmi[flag] = t.fmi(abyte0, j5);
                j5 += 2;
                dmj[flag] = t.fmm(abyte0, j5);
                if(dmj[flag] >= 128)
                    j5 += 4;
                else
                    j5++;
            }

            feb();
            return;
        }
        if(l == 130)
        {
            dmb = false;
            return;
        }
        if(l == 69)
        {
            j5 = abyte0[1] & 0xff;
            edn[j5] = t.fmj(abyte0, 2);
            return;
        }
        if(l == 240)
        {
            j5 = t.fmi(abyte0, 1);
            if(dhb[j5] != null)
                eke = dhb[j5].gme;
            eld = true;
            ded = 0;
            dkl = 0;
            dhe = false;
            dhf = false;
            dgg = false;
            dgh = false;
            dgi = false;
            dgj = false;
            return;
        }
        if(l == 198)
        {
            eld = false;
            ecl = false;
            return;
        }
        if(l == 128)
        {
            edl = true;
            edm = false;
            dge = false;
            j5 = 1;
            dmg = t.fmk(abyte0, j5);
            j5 += 8;
            dnd = abyte0[j5++] & 0xff;
            for(flag = false; flag < dnd; flag++)
            {
                dne[flag] = t.fmi(abyte0, j5);
                j5 += 2;
                dnf[flag] = t.fmj(abyte0, j5);
                j5 += 4;
            }

            ecg = abyte0[j5++] & 0xff;
            for(flag = false; flag < ecg; flag++)
            {
                ech[flag] = t.fmi(abyte0, j5);
                j5 += 2;
                eci[flag] = t.fmj(abyte0, j5);
                j5 += 4;
            }

            return;
        }
        if(l == 229)
        {
            dkl = abyte0[1] & 0xff;
            j5 = 2;
            for(flag = false; flag < dkl; flag++)
            {
                dkm[flag] = t.fmi(abyte0, j5);
                j5 += 2;
                dkn[flag] = t.fmj(abyte0, j5);
                j5 += 4;
            }

            dhe = false;
            dhf = false;
            return;
        }
        if(l == 211)
        {
            if(abyte0[1] == 1)
                dgg = true;
            else
                dgg = false;
            if(abyte0[2] == 1)
                dgh = true;
            else
                dgh = false;
            if(abyte0[3] == 1)
                dgi = true;
            else
                dgi = false;
            if(abyte0[4] == 1)
                dgj = true;
            else
                dgj = false;
            dhe = false;
            dhf = false;
            return;
        }
        if(l == 81)
        {
            j5 = 1;
            flag = abyte0[j5++] & 0xff;
            j13 = t.fmi(abyte0, j5);
            j5 += 2;
            l16 = t.fmm(abyte0, j5);
            if(l16 >= 128)
                j5 += 4;
            else
                j5++;
            if(l16 == 0)
            {
                elg--;
                for(k19 = ((flag) ? 1 : 0); k19 < elg; k19++)
                {
                    dmi[k19] = dmi[k19 + 1];
                    dmj[k19] = dmj[k19 + 1];
                }

            } else
            {
                dmi[flag] = j13;
                dmj[flag] = l16;
                if(flag >= elg)
                    elg = flag + 1;
            }
            feb();
            return;
        }
        if(l == 210)
        {
            j5 = 1;
            flag = true;
            j13 = abyte0[j5++] & 0xff;
            l16 = t.fmi(abyte0, j5);
            j5 += 2;
            if(e.aig[l16 & 0x7fff] == 0)
            {
                flag = t.fmm(abyte0, j5);
                if(flag >= 128)
                    j5 += 4;
                else
                    j5++;
            }
            edf[j13] = l16 & 0x7fff;
            edh[j13] = l16 / 32768;
            edg[j13] = ((flag) ? 1 : 0);
            if(j13 >= ede)
                ede = j13 + 1;
            return;
        }
        if(l == 44)
        {
            j5 = abyte0[1] & 0xff;
            ede--;
            for(flag = j5; flag < ede; flag++)
            {
                edf[flag] = edf[flag + 1];
                edg[flag] = edg[flag + 1];
                edh[flag] = edh[flag + 1];
            }

            return;
        }
        if(l == 23)
        {
            j5 = 1;
            flag = abyte0[j5++] & 0xff;
            dfk[flag] = t.fmh(abyte0[j5++]);
            dmf[flag] = t.fmh(abyte0[j5++]);
            edn[flag] = t.fmj(abyte0, j5);
            j5 += 4;
            return;
        }
        if(l != 73)
            break MISSING_BLOCK_LABEL_7378;
        j5 = abyte0[1];
        if(j5 == 1)
        {
            dhe = true;
            return;
        }
        dhe = false;
        return;
        if(l != 131)
            break MISSING_BLOCK_LABEL_7408;
        j5 = abyte0[1];
        if(j5 == 1)
        {
            dhf = true;
            return;
        }
        dhf = false;
        return;
        if(l == 10)
        {
            ecl = true;
            ecm = false;
            eld = false;
            j5 = 1;
            dif = t.fmk(abyte0, j5);
            j5 += 8;
            efe = abyte0[j5++] & 0xff;
            for(flag = false; flag < efe; flag++)
            {
                eff[flag] = t.fmi(abyte0, j5);
                j5 += 2;
                efg[flag] = t.fmj(abyte0, j5);
                j5 += 4;
            }

            eim = abyte0[j5++] & 0xff;
            for(flag = false; flag < eim; flag++)
            {
                ein[flag] = t.fmi(abyte0, j5);
                j5 += 2;
                eja[flag] = t.fmj(abyte0, j5);
                j5 += 4;
            }

            ebm = abyte0[j5++] & 0xff;
            ebn = abyte0[j5++] & 0xff;
            eca = abyte0[j5++] & 0xff;
            ecb = abyte0[j5++] & 0xff;
            return;
        }
        if(l == 238)
        {
            s1 = new String(abyte0, 1, i1 - 1);
            fee(s1);
            return;
        }
        if(l == 253)
        {
            if(eig < 50)
            {
                s1 = abyte0[1] & 0xff;
                flag = abyte0[2] + djd;
                j13 = abyte0[3] + dje;
                ehg[eig] = s1;
                egn[eig] = 0;
                ell[eig] = ((flag) ? 1 : 0);
                elh[eig] = j13;
                eig++;
            }
            return;
        }
        if(l == 126)
        {
            if(!dcm)
            {
                elf = t.fmj(abyte0, 1);
                eei = t.fmi(abyte0, 5);
                ekg = abyte0[7] & 0xff;
                ecd = t.fmi(abyte0, 8);
                djj = true;
                dcm = true;
                din = null;
            }
            return;
        }
        if(l == 112)
        {
            dhc = new String(abyte0, 1, i1 - 1);
            ecc = true;
            dhi = false;
            return;
        }
        if(l == 49)
        {
            dhc = new String(abyte0, 1, i1 - 1);
            ecc = true;
            dhi = true;
            return;
        }
        if(l == 60)
        {
            dhj = t.fmi(abyte0, 1);
            return;
        }
        if(l == 15)
        {
            if(!den)
                dhk = dhj;
            den = true;
            super.fkl = "";
            super.fkm = "";
            dnb.cbk(efl + 1, abyte0);
            del = null;
            return;
        }
        if(l == 174)
        {
            dhk = t.fmi(abyte0, 1);
            return;
        }
        if(l == 206)
        {
            den = false;
            return;
        }
        if(l == 20)
        {
            del = "Incorrect - Please wait...";
            return;
        }
        if(l == 28)
        {
            deg = t.fmi(abyte0, 1) * 32;
            return;
        }
    }

    protected final void ene(Runnable runnable)
    {
        if(link.fni != null)
        {
            link.gah(runnable);
            return;
        } else
        {
            Thread thread = new Thread(runnable);
            thread.setDaemon(true);
            thread.start();
            return;
        }
    }

    protected final void adc()
    {
        deg = 0;
        dkh = 0;
        ehb = 0;
        ecf = 0;
        ehe = 1;
        fdn();
        dnb.cak();
        dnb.caj(ebf, 0, 0);
        for(int l = 0; l < efd; l++)
        {
            ejg.bgn(dik[l]);
            dnh.gkf(ekm[l], ekn[l], ela[l]);
        }

        for(int i1 = 0; i1 < ehc; i1++)
        {
            ejg.bgn(did[i1]);
            dnh.gkb(dhg[i1], dhh[i1], ecn[i1], eda[i1]);
        }

        efd = 0;
        ehc = 0;
        dhd = 0;
        dgm = 0;
        for(int j1 = 0; j1 < 4000; j1++)
            dhb[j1] = null;

        for(int k1 = 0; k1 < 500; k1++)
            deh[k1] = null;

        ebb = 0;
        for(int l1 = 0; l1 < 5000; l1++)
            ele[l1] = null;

        for(int i2 = 0; i2 < 500; i2++)
            dgf[i2] = null;

        for(int j2 = 0; j2 < 50; j2++)
            eeh[j2] = false;

        dnl = 0;
        super.fkh = 0;
        super.fkg = 0;
        dmk = false;
        dmb = false;
        den = false;
        super.aak = 0;
    }

    private final void enf(boolean flag)
    {
        int l = ((j) (dnb)).blg - 199;
        char c1 = '\234';
        char c2 = '\230';
        dnb.ccb(l - 49, 3, efh + 2);
        l += 40;
        dnb.cba(l, 36, c1, c2, 0);
        dnb.cah(l, 36, l + c1, 36 + c2);
        int i1 = 192 + maphax;
        int j1 = dkg + dkb & 0xff;
        int k1 = ((djc.gmh - 6040) * 3 * i1) / 2048;
        int l1 = ((djc.gmi - 6040) * 3 * i1) / 2048;
        int i2 = n.bbk[1024 - j1 * 4 & 0x3ff];
        int j2 = n.bbk[(1024 - j1 * 4 & 0x3ff) + 1024];
        int k2 = l1 * i2 + k1 * j2 >> 18;
        l1 = l1 * j2 - k1 * i2 >> 18;
        k1 = k2;
        dnb.ccn((l + c1 / 2) - k1, 36 + c2 / 2 + l1, efh - 1, j1 + 64 & 0xff, i1);
        for(int l2 = 0; l2 < efd; l2++)
        {
            int i4 = (((ekm[l2] * ehd + 64) - djc.gmh) * 3 * i1) / 2048;
            int k4 = (((ekn[l2] * ehd + 64) - djc.gmi) * 3 * i1) / 2048;
            int k5 = k4 * i2 + i4 * j2 >> 18;
            k4 = k4 * j2 - i4 * i2 >> 18;
            i4 = k5;
            fdk(l + c1 / 2 + i4, (36 + c2 / 2) - k4, 65535);
        }

        for(int i3 = 0; i3 < dhd; i3++)
        {
            int j4 = (((dml[i3] * ehd + 64) - djc.gmh) * 3 * i1) / 2048;
            int l4 = (((dmm[i3] * ehd + 64) - djc.gmi) * 3 * i1) / 2048;
            int l5 = l4 * i2 + j4 * j2 >> 18;
            l4 = l4 * j2 - j4 * i2 >> 18;
            j4 = l5;
            fdk(l + c1 / 2 + j4, (36 + c2 / 2) - l4, 0xff0000);
        }

        for(int j3 = 0; j3 < ebb; j3++)
        {
            f f1 = dgf[j3];
            int i5 = ((f1.gmh - djc.gmh) * 3 * i1) / 2048;
            int i6 = ((f1.gmi - djc.gmi) * 3 * i1) / 2048;
            int l6 = i6 * i2 + i5 * j2 >> 18;
            i6 = i6 * j2 - i5 * i2 >> 18;
            i5 = l6;
            fdk(l + c1 / 2 + i5, (36 + c2 / 2) - i6, 0xffff00);
        }

        for(int k3 = 0; k3 < dgm; k3++)
        {
            f f2 = deh[k3];
            int j5 = ((f2.gmh - djc.gmh) * 3 * i1) / 2048;
            int j6 = ((f2.gmi - djc.gmi) * 3 * i1) / 2048;
            int i7 = j6 * i2 + j5 * j2 >> 18;
            j6 = j6 * j2 - j5 * i2 >> 18;
            j5 = i7;
            int k7 = 0xffffff;
            int i8 = 0;
            do
            {
                if(i8 >= super.aak)
                    break;
                if(f2.gmd == super.aal[i8] && super.aam[i8] == 99)
                {
                    k7 = 65280;
                    break;
                }
                i8++;
            } while(true);
            fdk(l + c1 / 2 + j5, (36 + c2 / 2) - j6, k7);
        }

        dnb.cal(l + c1 / 2, 36 + c2 / 2, 2, 0xffffff, 255);
        dnb.ccn(l + 19, 55, efh + 24, dkg + 128 & 0xff, 128);
        dnb.cah(0, 0, dch, dci + 12);
        if(!flag)
            return;
        l = super.fke - (((j) (dnb)).blg - 199);
        int l3 = super.fkf - 36;
        if(l >= 40 && l3 >= 0 && l < 196 && l3 < 152)
        {
            char c3 = '\234';
            char c4 = '\230';
            int k6 = 192 + maphax;
            int j7 = dkg + dkb & 0xff;
            int l7 = ((j) (dnb)).blg - 199;
            l7 += 40;
            int j8 = ((super.fke - (l7 + c3 / 2)) * 16384) / (3 * k6);
            int k8 = ((super.fkf - (36 + c4 / 2)) * 16384) / (3 * k6);
            int l8 = n.bbk[1024 - j7 * 4 & 0x3ff];
            int i9 = n.bbk[(1024 - j7 * 4 & 0x3ff) + 1024];
            int j9 = k8 * l8 + j8 * i9 >> 15;
            k8 = k8 * i9 - j8 * l8 >> 15;
            j8 = j9;
            j8 += djc.gmh;
            k8 = djc.gmi - k8;
            if(dnl == 1)
                fbk(djd, dje, j8 / 128, k8 / 128, false);
            dnl = 0;
        }
    }

    private final boolean eng(int l)
    {
        int i1 = djc.gmh / 128;
        int j1 = djc.gmi / 128;
        for(int k1 = 2; k1 >= 1; k1--)
        {
            if(l == 1 && ((dnh.gij[i1][j1 - k1] & 0x80) == 128 || (dnh.gij[i1 - k1][j1] & 0x80) == 128 || (dnh.gij[i1 - k1][j1 - k1] & 0x80) == 128))
                return false;
            if(l == 3 && ((dnh.gij[i1][j1 + k1] & 0x80) == 128 || (dnh.gij[i1 - k1][j1] & 0x80) == 128 || (dnh.gij[i1 - k1][j1 + k1] & 0x80) == 128))
                return false;
            if(l == 5 && ((dnh.gij[i1][j1 + k1] & 0x80) == 128 || (dnh.gij[i1 + k1][j1] & 0x80) == 128 || (dnh.gij[i1 + k1][j1 + k1] & 0x80) == 128))
                return false;
            if(l == 7 && ((dnh.gij[i1][j1 - k1] & 0x80) == 128 || (dnh.gij[i1 + k1][j1] & 0x80) == 128 || (dnh.gij[i1 + k1][j1 - k1] & 0x80) == 128))
                return false;
            if(l == 0 && (dnh.gij[i1][j1 - k1] & 0x80) == 128)
                return false;
            if(l == 2 && (dnh.gij[i1 - k1][j1] & 0x80) == 128)
                return false;
            if(l == 4 && (dnh.gij[i1][j1 + k1] & 0x80) == 128)
                return false;
            if(l == 6 && (dnh.gij[i1 + k1][j1] & 0x80) == 128)
                return false;
        }

        return true;
    }

    private final String enh(int l)
    {
        if(link.fni != null)
            return link.gai(t.fnb(l));
        else
            return t.fnb(l);
    }

    private final void eni()
    {
        try
        {
            dma = fcb((new StringBuilder()).append("sounds").append(w.cff).append(".mem").toString(), "Sound effects", 90);
            dic = new d();
            return;
        }
        catch(Throwable throwable)
        {
            System.out.println((new StringBuilder()).append("Unable to init sounds:").append(throwable).toString());
        }
    }

    protected final void enj()
    {
        if(dcn)
        {
            String s1 = getDocumentBase().getHost().toLowerCase();
            if(!s1.endsWith("jagex.com") && !s1.endsWith("jagex.co.uk") && !s1.endsWith("runescape.com") && !s1.endsWith("runescape.co.uk") && !s1.endsWith("runescape.net") && !s1.endsWith("runescape.org") && !s1.endsWith("penguin") && !s1.endsWith("puffin"))
            {
                ekh = true;
                return;
            }
        }
        int l = 0;
        for(int i1 = 0; i1 < 99; i1++)
        {
            int k1 = i1 + 1;
            int j2 = (int)((double)k1 + 300D * Math.pow(2D, (double)k1 / 7D));
            l += j2;
            ehh[i1] = l & 0xffffffc;
        }

        try
        {
            String s2 = getParameter("referid");
            dkd = Integer.parseInt(s2);
        }
        catch(Exception exception) { }
        try
        {
            String s3 = getParameter("member");
            int l1 = Integer.parseInt(s3);
            if(l1 == 1)
                egi = true;
        }
        catch(Exception exception1) { }
        if(dcn)
            super.aad = 43594;
        super.fik = 0;
        b.aab = 1000;
        b.aaa = w.cem;
        try
        {
            String s4 = getParameter("poff");
            int i2 = Integer.parseInt(s4);
            super.aad += i2;
            System.out.println((new StringBuilder()).append("Offset: ").append(i2).toString());
        }
        catch(Exception exception2) { }
        fbl();
        if(ebh)
            return;
        efh = 2000;
        efi = efh + 100;
        efj = efi + 50;
        efn = efj + 1000;
        efk = efn + 10;
        efl = efk + 50;
        efm = efl + 10;
        ebf = getGraphics();
        fle(50);
        dnb = new k(dch, dci + 12, 4000, this);
        dnb.dai = this;
        dnb.cah(0, 0, dch, dci + 12);
        h.gdh = false;
        h.gdi = efi;
        eij = new h(dnb, 5);
        int j1 = ((j) (dnb)).blg - 199;
        byte byte0 = 36;
        eik = eij.gfk(j1, byte0 + 24, 196, 90, 1, 500, true);
        ejh = new h(dnb, 5);
        eji = ejh.gfk(j1, byte0 + 40, 196, 126, 1, 500, true);
        dig = new h(dnb, 5);
        dih = dig.gfk(j1, byte0 + 24, 196, 251, 1, 500, true);
        enl();
        if(ebh)
            return;
        enn();
        if(ebh)
            return;
        ejg = new n(dnb, 15000, 15000, 1000);
        ejg.bhk(dch / 2, dci / 2, dch / 2, dci / 2, dch, dcj);
        ejg.bbg = 2400;
        ejg.bbh = 2400;
        ejg.bbi = 1;
        ejg.bbj = 2300;
        ejg.bjk(-50, -10, -50);
        dnh = new x(ejg, dnb);
        dnh.gjc = efh;
        fci();
        if(ebh)
            return;
        fda();
        if(ebh)
            return;
        emi();
        if(ebh)
            return;
        if(egi)
            eni();
        if(ebh)
        {
            return;
        } else
        {
            flj(100, "Starting game...");
            fai();
            enk();
            fce();
            emn();
            flb();
            end();
            return;
        }
    }

    private final void enk()
    {
        eki = new h(dnb, 50);
        int l = 40;
        if(!egi)
        {
            eki.gfd(256, 200 + l, "Click on an option", 5, true);
            eki.gfe(156, 240 + l, 120, 35);
            eki.gfe(356, 240 + l, 120, 35);
            eki.gfd(156, 240 + l, "New User", 5, false);
            eki.gfd(356, 240 + l, "Existing User", 5, false);
            eea = eki.gfl(156, 240 + l, 120, 35);
            eeb = eki.gfl(356, 240 + l, 120, 35);
        } else
        {
            eki.gfd(256, 200 + l, "Welcome to RuneScape", 4, true);
            eki.gfd(256, 215 + l, "You need a member account to use this server", 4, true);
            eki.gfe(256, 250 + l, 200, 35);
            eki.gfd(256, 250 + l, "Click here to login", 5, false);
            eeb = eki.gfl(256, 250 + l, 200, 35);
        }
        dnm = new h(dnb, 50);
        l = 230;
        if(dkd == 0)
        {
            dnm.gfd(256, l + 8, "To create an account please go back to the", 4, true);
            l += 20;
            dnm.gfd(256, l + 8, "www.runescape.com front page, and choose 'create account'", 4, true);
        } else
        if(dkd == 1)
        {
            dnm.gfd(256, l + 8, "To create an account please click on the", 4, true);
            l += 20;
            dnm.gfd(256, l + 8, "'create account' link below the game window", 4, true);
        } else
        {
            dnm.gfd(256, l + 8, "To create an account please go back to the", 4, true);
            l += 20;
            dnm.gfd(256, l + 8, "runescape front webpage and choose 'create account'", 4, true);
        }
        l += 30;
        dnm.gfe(256, l + 17, 150, 34);
        dnm.gfd(256, l + 17, "Ok", 5, false);
        dkf = dnm.gfl(256, l + 17, 150, 34);
        dla = new h(dnb, 50);
        l = 230;
        eej = dla.gfd(256, l - 10, "Please enter your username and password", 4, true);
        l += 28;
        dla.gfe(140, l, 200, 40);
        dla.gfd(140, l - 10, "Username:", 4, false);
        eek = dla.gfj(140, l + 10, 200, 40, 4, 12, false, false);
        l += 47;
        dla.gfe(190, l, 200, 40);
        dla.gfd(190, l - 10, "Password:", 4, false);
        eel = dla.gfj(190, l + 10, 200, 40, 4, 20, true, false);
        l -= 55;
        dla.gfe(410, l, 120, 25);
        dla.gfd(410, l, "Ok", 4, false);
        eem = dla.gfl(410, l, 120, 25);
        l += 30;
        dla.gfe(410, l, 120, 25);
        dla.gfd(410, l, "Cancel", 4, false);
        een = dla.gfl(410, l, 120, 25);
        l += 30;
        dla.ggg(eek);
    }

    protected final void acb()
    {
        deg = 0;
        if(ehb != 0)
        {
            add();
            return;
        } else
        {
            super.acb();
            return;
        }
    }

    private final void enl()
    {
        byte abyte0[] = fcb((new StringBuilder()).append("media").append(w.cfb).append(".jag").toString(), "2d graphics", 20);
        if(abyte0 == null)
        {
            ebh = true;
            return;
        }
        byte abyte1[] = t.fng("index.dat", 0, abyte0);
        dnb.cbj(efh, t.fng("inv1.dat", 0, abyte0), abyte1, 1);
        dnb.cbj(efh + 1, t.fng("inv2.dat", 0, abyte0), abyte1, 6);
        dnb.cbj(efh + 9, t.fng("bubble.dat", 0, abyte0), abyte1, 1);
        dnb.cbj(efh + 10, t.fng("runescape.dat", 0, abyte0), abyte1, 1);
        dnb.cbj(efh + 11, t.fng("splat.dat", 0, abyte0), abyte1, 3);
        dnb.cbj(efh + 14, t.fng("icon.dat", 0, abyte0), abyte1, 8);
        dnb.cbj(efh + 22, t.fng("hbar.dat", 0, abyte0), abyte1, 1);
        dnb.cbj(efh + 23, t.fng("hbar2.dat", 0, abyte0), abyte1, 1);
        dnb.cbj(efh + 24, t.fng("compass.dat", 0, abyte0), abyte1, 1);
        dnb.cbj(efh + 25, t.fng("buttons.dat", 0, abyte0), abyte1, 2);
        dnb.cbj(efi, t.fng("scrollbar.dat", 0, abyte0), abyte1, 2);
        dnb.cbj(efi + 2, t.fng("corners.dat", 0, abyte0), abyte1, 4);
        dnb.cbj(efi + 6, t.fng("arrows.dat", 0, abyte0), abyte1, 2);
        dnb.cbj(efk, t.fng("projectile.dat", 0, abyte0), abyte1, e.ahg);
        int l = e.ahc;
        for(int i1 = 1; l > 0; i1++)
        {
            int i2 = l;
            l -= 30;
            if(i2 > 30)
                i2 = 30;
            dnb.cbj(efj + (i1 - 1) * 30, t.fng((new StringBuilder()).append("objects").append(i1).append(".dat").toString(), 0, abyte0), abyte1, i2);
        }

        dnb.cbm(efh);
        dnb.cbm(efh + 9);
        for(int j1 = 11; j1 <= 26; j1++)
            dnb.cbm(efh + j1);

        for(int k1 = 0; k1 < e.ahg; k1++)
            dnb.cbm(efk + k1);

        for(int l1 = 0; l1 < e.ahc; l1++)
            dnb.cbm(efj + l1);

    }

    protected final void enm()
    {
        if(ekh)
            return;
        if(eih)
            return;
        if(ebh)
            return;
        try
        {
            dng++;
            if(ehe == 0)
            {
                super.fil = 0;
                fbb();
            }
            if(ehe == 1)
            {
                super.fil++;
                fcd();
            }
            super.fkh = 0;
            super.fkj = 0;
            egj++;
            if(egj > 500)
            {
                egj = 0;
                int l = (int)(Math.random() * 4D);
                if((l & 1) == 1)
                    egl += egm;
                if((l & 2) == 2)
                    dhl += dhm;
            }
            if(egl < -50)
                egm = 2;
            if(egl > 50)
                egm = -2;
            if(dhl < -50)
                dhm = 2;
            if(dhl > 50)
                dhm = -2;
            if(ehl > 0)
                ehl--;
            if(ehm > 0)
                ehm--;
            if(ehn > 0)
                ehn--;
            if(eia > 0)
            {
                eia--;
                return;
            }
        }
        catch(OutOfMemoryError outofmemoryerror)
        {
            fbe();
            eih = true;
        }
    }

    private final void enn()
    {
        byte abyte0[] = null;
        byte abyte1[] = null;
        abyte0 = fcb((new StringBuilder()).append("entity").append(w.cfe).append(".jag").toString(), "people and monsters", 30);
        if(abyte0 == null)
        {
            ebh = true;
            return;
        }
        abyte1 = t.fng("index.dat", 0, abyte0);
        byte abyte2[] = null;
        byte abyte3[] = null;
        if(egi)
        {
            abyte2 = fcb((new StringBuilder()).append("entity").append(w.cfe).append(".mem").toString(), "member graphics", 45);
            if(abyte2 == null)
            {
                ebh = true;
                return;
            }
            abyte3 = t.fng("index.dat", 0, abyte2);
        }
        int l = 0;
        ebi = 0;
        ebj = ebi;
label0:
        for(int i1 = 0; i1 < e.aji; i1++)
        {
            String s1 = e.aja[i1];
            for(int j1 = 0; j1 < i1; j1++)
                if(e.aja[j1].equalsIgnoreCase(s1))
                {
                    e.all[i1] = e.all[j1];
                    continue label0;
                }

            byte abyte4[] = t.fng((new StringBuilder()).append(s1).append(".dat").toString(), 0, abyte0);
            byte abyte5[] = abyte1;
            if(abyte4 == null && egi)
            {
                abyte4 = t.fng((new StringBuilder()).append(s1).append(".dat").toString(), 0, abyte2);
                abyte5 = abyte3;
            }
            if(abyte4 != null)
            {
                dnb.cbj(ebj, abyte4, abyte5, 15);
                l += 15;
                if(e.alj[i1] == 1)
                {
                    byte abyte6[] = t.fng((new StringBuilder()).append(s1).append("a.dat").toString(), 0, abyte0);
                    byte abyte8[] = abyte1;
                    if(abyte6 == null && egi)
                    {
                        abyte6 = t.fng((new StringBuilder()).append(s1).append("a.dat").toString(), 0, abyte2);
                        abyte8 = abyte3;
                    }
                    dnb.cbj(ebj + 15, abyte6, abyte8, 3);
                    l += 3;
                }
                if(e.alk[i1] == 1)
                {
                    byte abyte7[] = t.fng((new StringBuilder()).append(s1).append("f.dat").toString(), 0, abyte0);
                    byte abyte9[] = abyte1;
                    if(abyte7 == null && egi)
                    {
                        abyte7 = t.fng((new StringBuilder()).append(s1).append("f.dat").toString(), 0, abyte2);
                        abyte9 = abyte3;
                    }
                    dnb.cbj(ebj + 18, abyte7, abyte9, 9);
                    l += 9;
                }
                if(e.ali[i1] != 0)
                {
                    for(int k1 = ebj; k1 < ebj + 27; k1++)
                        dnb.cbm(k1);

                }
            }
            e.all[i1] = ebj;
            ebj += 27;
        }

        System.out.println((new StringBuilder()).append("Loaded: ").append(l).append(" frames of animation").toString());
    }

    private final void faa()
    {
        dgk.gea(super.fke, super.fkf, super.fkh, super.fkg);
        if(dgk.geb(dlb))
            do
                ddb = ((ddb - 1) + e.aji) % e.aji;
            while((e.ali[ddb] & 3) != 1 || (e.ali[ddb] & 4 * ddi) == 0);
        if(dgk.geb(dlc))
            do
                ddb = (ddb + 1) % e.aji;
            while((e.ali[ddb] & 3) != 1 || (e.ali[ddb] & 4 * ddi) == 0);
        if(dgk.geb(dld))
            dde = ((dde - 1) + eii.length) % eii.length;
        if(dgk.geb(dle))
            dde = (dde + 1) % eii.length;
        if(dgk.geb(dlf) || dgk.geb(dlg))
        {
            for(ddi = 3 - ddi; (e.ali[ddb] & 3) != 1 || (e.ali[ddb] & 4 * ddi) == 0; ddb = (ddb + 1) % e.aji);
            for(; (e.ali[ddc] & 3) != 2 || (e.ali[ddc] & 4 * ddi) == 0; ddc = (ddc + 1) % e.aji);
        }
        if(dgk.geb(dlh))
            ddf = ((ddf - 1) + eid.length) % eid.length;
        if(dgk.geb(dli))
            ddf = (ddf + 1) % eid.length;
        if(dgk.geb(dlj))
            ddh = ((ddh - 1) + dki.length) % dki.length;
        if(dgk.geb(dlk))
            ddh = (ddh + 1) % dki.length;
        if(dgk.geb(dll))
            ddg = ((ddg - 1) + eid.length) % eid.length;
        if(dgk.geb(dlm))
            ddg = (ddg + 1) % eid.length;
        if(dgk.geb(dln))
        {
            super.aag.hcn(238);
            super.aag.hdb(ddi);
            super.aag.hdb(ddb);
            super.aag.hdb(ddc);
            super.aag.hdb(ddd);
            super.aag.hdb(dde);
            super.aag.hdb(ddf);
            super.aag.hdb(ddg);
            super.aag.hdb(ddh);
            super.aag.hdl();
            dnb.cak();
            eln = false;
        }
    }

    private final int fac(int l)
    {
        int i1 = 0;
        for(int j1 = 0; j1 < ede; j1++)
        {
            if(edf[j1] != l)
                continue;
            if(e.aig[l] == 1)
                i1++;
            else
                i1 += edg[j1];
        }

        return i1;
    }

    private final void fad()
    {
        if(ehe == 0)
            return;
        if(ebd > 450)
        {
            fdj("@cya@You can't logout during combat!", 3);
            return;
        }
        if(ebd > 0)
        {
            fdj("@cya@You can't logout for 10 seconds after combat", 3);
            return;
        } else
        {
            super.aag.hcn(3);
            super.aag.hdl();
            ehb = 1000;
            return;
        }
    }

    public final URL getCodeBase()
    {
        if(link.fni != null)
            return link.fni.getCodeBase();
        else
            return super.getCodeBase();
    }

    private final boolean fae(int l, int i1, int j1, int k1, int l1, int i2, boolean flag, 
            boolean flag1)
    {
        int j2 = dnh.gjl(l, i1, j1, k1, l1, i2, dnn, eaa, flag);
        if(j2 == -1)
            if(flag1)
            {
                j2 = 1;
                dnn[0] = j1;
                eaa[0] = k1;
            } else
            {
                return false;
            }
        j2--;
        l = dnn[j2];
        i1 = eaa[j2];
        j2--;
        if(flag1)
            super.aag.hcn(226);
        else
            super.aag.hcn(211);
        super.aag.hdj(l + dni);
        super.aag.hdj(i1 + dnj);
        if(flag1 && j2 == -1 && (l + dni) % 5 == 0)
            j2 = 0;
        for(int k2 = j2; k2 >= 0 && k2 > j2 - 25; k2--)
        {
            super.aag.hdb(dnn[k2] - l);
            super.aag.hdb(eaa[k2] - i1);
        }

        super.aag.hdl();
        emb = -24;
        emc = super.fke;
        emd = super.fkf;
        return true;
    }

    private final boolean faf(int l, int i1, int j1, int k1, int l1, int i2, boolean flag, 
            boolean flag1)
    {
        int j2 = dnh.gjl(l, i1, j1, k1, l1, i2, dnn, eaa, flag);
        if(j2 == -1)
            return false;
        j2--;
        l = dnn[j2];
        i1 = eaa[j2];
        j2--;
        if(flag1)
            super.aag.hcn(226);
        else
            super.aag.hcn(211);
        super.aag.hdj(l + dni);
        super.aag.hdj(i1 + dnj);
        if(flag1 && j2 == -1 && (l + dni) % 5 == 0)
            j2 = 0;
        for(int k2 = j2; k2 >= 0 && k2 > j2 - 25; k2--)
        {
            super.aag.hdb(dnn[k2] - l);
            super.aag.hdb(eaa[k2] - i1);
        }

        super.aag.hdl();
        emb = -24;
        emc = super.fke;
        emd = super.fkf;
        return true;
    }

    private final void fag(boolean flag)
    {
        int l = ((j) (dnb)).blg - 199;
        int i1 = 36;
        dnb.ccb(l - 49, 3, efh + 6);
        char c1 = '\304';
        dnb.cam(l, 36, c1, 65, j.cbh(181, 181, 181), 160);
        dnb.cam(l, 101, c1, 65, j.cbh(201, 201, 201), 160);
        dnb.cam(l, 166, c1, 95, j.cbh(181, 181, 181), 160);
        dnb.cam(l, 261, c1, 40, j.cbh(201, 201, 201), 160);
        int j1 = l + 3;
        int k1 = i1 + 15;
        dnb.cdn("Game options - click to toggle", j1, k1, 1, 0);
        k1 += 15;
        if(dka)
            dnb.cdn("Camera angle mode - @gre@Auto", j1, k1, 1, 0xffffff);
        else
            dnb.cdn("Camera angle mode - @red@Manual", j1, k1, 1, 0xffffff);
        k1 += 15;
        if(eef)
            dnb.cdn("Mouse buttons - @red@One", j1, k1, 1, 0xffffff);
        else
            dnb.cdn("Mouse buttons - @gre@Two", j1, k1, 1, 0xffffff);
        k1 += 15;
        if(egi)
            if(dkj)
                dnb.cdn("Sound effects - @red@off", j1, k1, 1, 0xffffff);
            else
                dnb.cdn("Sound effects - @gre@on", j1, k1, 1, 0xffffff);
        k1 += 15;
        dnb.cdn("To change your contact details,", j1, k1, 0, 0xffffff);
        k1 += 15;
        dnb.cdn("password, recovery questions, etc..", j1, k1, 0, 0xffffff);
        k1 += 15;
        dnb.cdn("please select 'account management'", j1, k1, 0, 0xffffff);
        k1 += 15;
        if(dkd == 0)
            dnb.cdn("from the runescape.com front page", j1, k1, 0, 0xffffff);
        else
        if(dkd == 1)
            dnb.cdn("from the link below the gamewindow", j1, k1, 0, 0xffffff);
        else
            dnb.cdn("from the runescape front webpage", j1, k1, 0, 0xffffff);
        k1 += 15;
        k1 += 5;
        dnb.cdn("Privacy settings. Will be applied to", l + 3, k1, 1, 0);
        k1 += 15;
        dnb.cdn("all people not on your friends list", l + 3, k1, 1, 0);
        k1 += 15;
        if(super.abb == 0)
            dnb.cdn("Block chat messages: @red@<off>", l + 3, k1, 1, 0xffffff);
        else
            dnb.cdn("Block chat messages: @gre@<on>", l + 3, k1, 1, 0xffffff);
        k1 += 15;
        if(super.abc == 0)
            dnb.cdn("Block private messages: @red@<off>", l + 3, k1, 1, 0xffffff);
        else
            dnb.cdn("Block private messages: @gre@<on>", l + 3, k1, 1, 0xffffff);
        k1 += 15;
        if(super.abd == 0)
            dnb.cdn("Block trade requests: @red@<off>", l + 3, k1, 1, 0xffffff);
        else
            dnb.cdn("Block trade requests: @gre@<on>", l + 3, k1, 1, 0xffffff);
        k1 += 15;
        if(egi)
            if(super.abe == 0)
                dnb.cdn("Block duel requests: @red@<off>", l + 3, k1, 1, 0xffffff);
            else
                dnb.cdn("Block duel requests: @gre@<on>", l + 3, k1, 1, 0xffffff);
        k1 += 15;
        k1 += 5;
        dnb.cdn("Always logout when you finish", j1, k1, 1, 0);
        k1 += 15;
        int l1 = 0xffffff;
        if(super.fke > j1 && super.fke < j1 + c1 && super.fkf > k1 - 12 && super.fkf < k1 + 4)
            l1 = 0xffff00;
        dnb.cdn("Click here to logout", l + 3, k1, 1, l1);
        if(!flag)
            return;
        l = super.fke - (((j) (dnb)).blg - 199);
        i1 = super.fkf - 36;
        if(l >= 0 && i1 >= 0 && l < 196 && i1 < 265)
        {
            int i2 = ((j) (dnb)).blg - 199;
            byte byte0 = 36;
            char c2 = '\304';
            int j2 = i2 + 3;
            int k2 = byte0 + 30;
            if(super.fke > j2 && super.fke < j2 + c2 && super.fkf > k2 - 12 && super.fkf < k2 + 4 && dnl == 1)
            {
                dka = !dka;
                super.aag.hcn(165);
                super.aag.hdb(0);
                super.aag.hdb(dka ? 1 : 0);
                super.aag.hdl();
            }
            k2 += 15;
            if(super.fke > j2 && super.fke < j2 + c2 && super.fkf > k2 - 12 && super.fkf < k2 + 4 && dnl == 1)
            {
                eef = !eef;
                super.aag.hcn(165);
                super.aag.hdb(2);
                super.aag.hdb(eef ? 1 : 0);
                super.aag.hdl();
            }
            k2 += 15;
            if(egi && super.fke > j2 && super.fke < j2 + c2 && super.fkf > k2 - 12 && super.fkf < k2 + 4 && dnl == 1)
            {
                dkj = !dkj;
                super.aag.hcn(165);
                super.aag.hdb(3);
                super.aag.hdb(dkj ? 1 : 0);
                super.aag.hdl();
            }
            k2 += 15;
            k2 += 15;
            k2 += 15;
            k2 += 15;
            k2 += 15;
            boolean flag1 = false;
            k2 += 35;
            if(super.fke > j2 && super.fke < j2 + c2 && super.fkf > k2 - 12 && super.fkf < k2 + 4 && dnl == 1)
            {
                super.abb = 1 - super.abb;
                flag1 = true;
            }
            k2 += 15;
            if(super.fke > j2 && super.fke < j2 + c2 && super.fkf > k2 - 12 && super.fkf < k2 + 4 && dnl == 1)
            {
                super.abc = 1 - super.abc;
                flag1 = true;
            }
            k2 += 15;
            if(super.fke > j2 && super.fke < j2 + c2 && super.fkf > k2 - 12 && super.fkf < k2 + 4 && dnl == 1)
            {
                super.abd = 1 - super.abd;
                flag1 = true;
            }
            k2 += 15;
            if(egi && super.fke > j2 && super.fke < j2 + c2 && super.fkf > k2 - 12 && super.fkf < k2 + 4 && dnl == 1)
            {
                super.abe = 1 - super.abe;
                flag1 = true;
            }
            k2 += 15;
            if(flag1)
                acg(super.abb, super.abc, super.abd, super.abe);
            k2 += 20;
            if(super.fke > j2 && super.fke < j2 + c2 && super.fkf > k2 - 12 && super.fkf < k2 + 4 && dnl == 1)
                fad();
            dnl = 0;
        }
    }

    private final void fah(int l, int i1, int j1, int k1)
    {
        int l1;
        int i2;
        if(j1 == 0 || j1 == 4)
        {
            l1 = e.amh[k1];
            i2 = e.ami[k1];
        } else
        {
            i2 = e.amh[k1];
            l1 = e.ami[k1];
        }
        if(e.amj[k1] == 2 || e.amj[k1] == 3)
        {
            if(j1 == 0)
            {
                l--;
                l1++;
            }
            if(j1 == 2)
                i2++;
            if(j1 == 4)
                l1++;
            if(j1 == 6)
            {
                i1--;
                i2++;
            }
            fae(djd, dje, l, i1, (l + l1) - 1, (i1 + i2) - 1, false, true);
            return;
        } else
        {
            fae(djd, dje, l, i1, (l + l1) - 1, (i1 + i2) - 1, true, true);
            return;
        }
    }

    private final void fai()
    {
        ddj = new h(dnb, 10);
        ddk = ddj.gfh(5, 269, 502, 56, 1, 20, true);
        ddl = ddj.gfi(7, 324, 498, 14, 1, 80, false, true);
        ddm = ddj.gfh(5, 269, 502, 56, 1, 20, true);
        ddn = ddj.gfh(5, 269, 502, 56, 1, 20, true);
        ddj.ggg(ddl);
    }

    private final void faj()
    {
        byte byte0 = 7;
        byte byte1 = 15;
        char c1 = '\257';
        if(dnl != 0)
        {
            int l = 0;
            do
            {
                if(l >= 5)
                    break;
                if(l > 0 && super.fke > byte0 && super.fke < byte0 + c1 && super.fkf > byte1 + l * 20 && super.fkf < byte1 + l * 20 + 20)
                {
                    dkh = l - 1;
                    dnl = 0;
                    super.aag.hcn(74);
                    super.aag.hdb(dkh);
                    super.aag.hdl();
                    break;
                }
                l++;
            } while(true);
        }
        for(int i1 = 0; i1 < 5; i1++)
        {
            if(i1 == dkh + 1)
                dnb.cam(byte0, byte1 + i1 * 20, c1, 20, j.cbh(255, 0, 0), 128);
            else
                dnb.cam(byte0, byte1 + i1 * 20, c1, 20, j.cbh(190, 190, 190), 128);
            dnb.cbc(byte0, byte1 + i1 * 20, c1, 0);
            dnb.cbc(byte0, byte1 + i1 * 20 + 20, c1, 0);
        }

        dnb.cdl("Select combat style", byte0 + c1 / 2, byte1 + 16, 3, 0xffffff);
        dnb.cdl("Controlled (+1 of each)", byte0 + c1 / 2, byte1 + 36, 3, 0);
        dnb.cdl("Aggressive (+3 strength)", byte0 + c1 / 2, byte1 + 56, 3, 0);
        dnb.cdl("Accurate   (+3 attack)", byte0 + c1 / 2, byte1 + 76, 3, 0);
        dnb.cdl("Defensive  (+3 defense)", byte0 + c1 / 2, byte1 + 96, 3, 0);
    }

    private final void fak()
    {
        if(dnl != 0 && ekb == 0)
            ekb = 1;
        if(ekb > 0)
        {
            int l = super.fke - 22;
            int i1 = super.fkf - 36;
            if(l >= 0 && i1 >= 0 && l < 468 && i1 < 262)
            {
                if(l > 216 && i1 > 30 && l < 462 && i1 < 235)
                {
                    int j1 = (l - 217) / 49 + ((i1 - 31) / 34) * 5;
                    if(j1 >= 0 && j1 < ede)
                    {
                        boolean flag = false;
                        int k2 = 0;
                        int i5 = edf[j1];
label0:
                        for(int j6 = 0; j6 < djg; j6++)
                        {
                            if(djh[j6] != i5)
                                continue;
                            if(e.aig[i5] == 0)
                            {
                                int k7 = 0;
                                do
                                {
                                    if(k7 >= ekb)
                                        continue label0;
                                    if(dji[j6] < edg[j1])
                                        dji[j6]++;
                                    flag = true;
                                    k7++;
                                } while(true);
                            }
                            k2++;
                        }

                        if(fac(i5) <= k2)
                            flag = true;
                        if(e.aik[i5] == 1)
                        {
                            fdj("This object cannot be traded with other players", 3);
                            flag = true;
                        }
                        if(!flag && djg < 12)
                        {
                            djh[djg] = i5;
                            dji[djg] = 1;
                            djg++;
                            flag = true;
                        }
                        if(flag)
                        {
                            super.aag.hcn(144);
                            super.aag.hdb(djg);
                            for(int k6 = 0; k6 < djg; k6++)
                            {
                                super.aag.hdj(djh[k6]);
                                super.aag.hdh(dji[k6]);
                            }

                            super.aag.hdl();
                            dfg = false;
                            dfh = false;
                        }
                    }
                }
                if(l > 8 && i1 > 30 && l < 205 && i1 < 133)
                {
                    int k1 = (l - 9) / 49 + ((i1 - 31) / 34) * 4;
                    if(k1 >= 0 && k1 < djg)
                    {
                        int i2 = djh[k1];
                        int l2 = 0;
                        do
                        {
                            if(l2 >= ekb)
                                break;
                            if(e.aig[i2] == 0 && dji[k1] > 1)
                            {
                                dji[k1]--;
                            } else
                            {
                                djg--;
                                eka = 0;
                                for(int j5 = k1; j5 < djg; j5++)
                                {
                                    djh[j5] = djh[j5 + 1];
                                    dji[j5] = dji[j5 + 1];
                                }

                                break;
                            }
                            l2++;
                        } while(true);
                        super.aag.hcn(144);
                        super.aag.hdb(djg);
                        for(int i3 = 0; i3 < djg; i3++)
                        {
                            super.aag.hdj(djh[i3]);
                            super.aag.hdh(dji[i3]);
                        }

                        super.aag.hdl();
                        dfg = false;
                        dfh = false;
                    }
                }
                if(l >= 217 && i1 >= 238 && l <= 286 && i1 <= 259)
                {
                    dfh = true;
                    super.aag.hcn(94);
                    super.aag.hdl();
                }
                if(l >= 394 && i1 >= 238 && l < 463 && i1 < 259)
                {
                    dge = false;
                    super.aag.hcn(27);
                    super.aag.hdl();
                }
            } else
            if(dnl != 0)
            {
                dge = false;
                super.aag.hcn(27);
                super.aag.hdl();
            }
            dnl = 0;
            ekb = 0;
        }
        if(!dge)
            return;
        byte byte0 = 22;
        byte byte1 = 36;
        dnb.cba(byte0, byte1, 468, 12, 192);
        int l1 = 0x989898;
        dnb.cam(byte0, byte1 + 12, 468, 18, l1, 160);
        dnb.cam(byte0, byte1 + 30, 8, 248, l1, 160);
        dnb.cam(byte0 + 205, byte1 + 30, 11, 248, l1, 160);
        dnb.cam(byte0 + 462, byte1 + 30, 6, 248, l1, 160);
        dnb.cam(byte0 + 8, byte1 + 133, 197, 22, l1, 160);
        dnb.cam(byte0 + 8, byte1 + 258, 197, 20, l1, 160);
        dnb.cam(byte0 + 216, byte1 + 235, 246, 43, l1, 160);
        int j2 = 0xd0d0d0;
        dnb.cam(byte0 + 8, byte1 + 30, 197, 103, j2, 160);
        dnb.cam(byte0 + 8, byte1 + 155, 197, 103, j2, 160);
        dnb.cam(byte0 + 216, byte1 + 30, 246, 205, j2, 160);
        for(int j3 = 0; j3 < 4; j3++)
            dnb.cbc(byte0 + 8, byte1 + 30 + j3 * 34, 197, 0);

        for(int k3 = 0; k3 < 4; k3++)
            dnb.cbc(byte0 + 8, byte1 + 155 + k3 * 34, 197, 0);

        for(int l3 = 0; l3 < 7; l3++)
            dnb.cbc(byte0 + 216, byte1 + 30 + l3 * 34, 246, 0);

        for(int i4 = 0; i4 < 6; i4++)
        {
            if(i4 < 5)
                dnb.cbd(byte0 + 8 + i4 * 49, byte1 + 30, 103, 0);
            if(i4 < 5)
                dnb.cbd(byte0 + 8 + i4 * 49, byte1 + 155, 103, 0);
            dnb.cbd(byte0 + 216 + i4 * 49, byte1 + 30, 205, 0);
        }

        dnb.cdn((new StringBuilder()).append("Trading with: ").append(dcg).toString(), byte0 + 1, byte1 + 10, 1, 0xffffff);
        dnb.cdn("Your Offer", byte0 + 9, byte1 + 27, 4, 0xffffff);
        dnb.cdn("Opponent's Offer", byte0 + 9, byte1 + 152, 4, 0xffffff);
        dnb.cdn("Your Inventory", byte0 + 216, byte1 + 27, 4, 0xffffff);
        if(!dfh)
            dnb.ccb(byte0 + 217, byte1 + 238, efh + 25);
        dnb.ccb(byte0 + 394, byte1 + 238, efh + 26);
        if(dfg)
        {
            dnb.cdl("Other player", byte0 + 341, byte1 + 246, 1, 0xffffff);
            dnb.cdl("has accepted", byte0 + 341, byte1 + 256, 1, 0xffffff);
        }
        if(dfh)
        {
            dnb.cdl("Waiting for", byte0 + 217 + 35, byte1 + 246, 1, 0xffffff);
            dnb.cdl("other player", byte0 + 217 + 35, byte1 + 256, 1, 0xffffff);
        }
        for(int j4 = 0; j4 < ede; j4++)
        {
            int k5 = 217 + byte0 + (j4 % 5) * 49;
            int l6 = 31 + byte1 + (j4 / 5) * 34;
            dnb.cdd(k5, l6, 48, 32, efj + e.aie[edf[j4]], e.aij[edf[j4]], 0, 0, false);
            if(e.aig[edf[j4]] == 0)
                dnb.cdn(String.valueOf(edg[j4]), k5 + 1, l6 + 10, 1, 0xffff00);
        }

        for(int k4 = 0; k4 < djg; k4++)
        {
            int l5 = 9 + byte0 + (k4 % 4) * 49;
            int i7 = 31 + byte1 + (k4 / 4) * 34;
            dnb.cdd(l5, i7, 48, 32, efj + e.aie[djh[k4]], e.aij[djh[k4]], 0, 0, false);
            if(e.aig[djh[k4]] == 0)
                dnb.cdn(String.valueOf(dji[k4]), l5 + 1, i7 + 10, 1, 0xffff00);
            if(super.fke > l5 && super.fke < l5 + 48 && super.fkf > i7 && super.fkf < i7 + 32)
                dnb.cdn((new StringBuilder()).append(e.aib[djh[k4]]).append(": @whi@").append(e.aic[djh[k4]]).toString(), byte0 + 8, byte1 + 273, 1, 0xffff00);
        }

        for(int l4 = 0; l4 < dfd; l4++)
        {
            int i6 = 9 + byte0 + (l4 % 4) * 49;
            int j7 = 156 + byte1 + (l4 / 4) * 34;
            dnb.cdd(i6, j7, 48, 32, efj + e.aie[dfe[l4]], e.aij[dfe[l4]], 0, 0, false);
            if(e.aig[dfe[l4]] == 0)
                dnb.cdn(String.valueOf(dff[l4]), i6 + 1, j7 + 10, 1, 0xffff00);
            if(super.fke > i6 && super.fke < i6 + 48 && super.fkf > j7 && super.fkf < j7 + 32)
                dnb.cdn((new StringBuilder()).append(e.aib[dfe[l4]]).append(": @whi@").append(e.aic[dfe[l4]]).toString(), byte0 + 8, byte1 + 273, 1, 0xffff00);
        }

    }

    private final void fal()
    {
        if((eli & 1) == 1 && eng(eli))
            return;
        if((eli & 1) == 0 && eng(eli))
        {
            if(eng(eli + 1 & 7))
            {
                eli = eli + 1 & 7;
                return;
            }
            if(eng(eli + 7 & 7))
                eli = eli + 7 & 7;
            return;
        }
        int ai[] = {
            1, -1, 2, -2, 3, -3, 4
        };
        int l = 0;
        do
        {
            if(l >= 7)
                break;
            if(eng(eli + ai[l] + 8 & 7))
            {
                eli = eli + ai[l] + 8 & 7;
                break;
            }
            l++;
        } while(true);
        if((eli & 1) == 0 && eng(eli))
        {
            if(eng(eli + 1 & 7))
            {
                eli = eli + 1 & 7;
                return;
            }
            if(eng(eli + 7 & 7))
                eli = eli + 7 & 7;
            return;
        } else
        {
            return;
        }
    }

    public final String getParameter(String s1)
    {
        if(link.fni != null)
            return link.fni.getParameter(s1);
        else
            return super.getParameter(s1);
    }

    private final void fam()
    {
        dnb.cba(126, 137, 260, 60, 0);
        dnb.cbb(126, 137, 260, 60, 0xffffff);
        dnb.cdl("Logging out...", 256, 173, 5, 0xffffff);
    }

    private final void fan(int l, int i1, int j1, int k1, boolean flag)
    {
        if(faf(l, i1, j1, k1, j1, k1, false, flag))
        {
            return;
        } else
        {
            fae(l, i1, j1, k1, j1, k1, true, flag);
            return;
        }
    }

    protected final void ada(String s1, String s2)
    {
        if(ecf == 1)
            dnm.ggc(dke, (new StringBuilder()).append(s1).append(" ").append(s2).toString());
        if(ecf == 2)
            dla.ggc(eej, (new StringBuilder()).append(s1).append(" ").append(s2).toString());
        djb = s2;
        fbh();
        flf();
    }

    final void fba(int l, int i1, int j1, int k1, int l1, int i2, int j2)
    {
        int k2 = ehg[l1];
        int l2 = egn[l1];
        if(k2 == 0)
        {
            int i3 = 255 + l2 * 5 * 256;
            dnb.cal(l + j1 / 2, i1 + k1 / 2, 20 + l2 * 2, i3, 255 - l2 * 5);
        }
        if(k2 == 1)
        {
            int j3 = 0xff0000 + l2 * 5 * 256;
            dnb.cal(l + j1 / 2, i1 + k1 / 2, 10 + l2, j3, 255 - l2 * 5);
        }
    }

    private final void fbb()
    {
        if(super.abi > 0)
            super.abi--;
        if(ecf == 0)
        {
            eki.gea(super.fke, super.fkf, super.fkh, super.fkg);
            if(eki.geb(eea))
                ecf = 1;
            if(eki.geb(eeb))
            {
                ecf = 2;
                dla.ggc(eej, "Please enter your username and password");
                dla.ggc(eek, "");
                dla.ggc(eel, "");
                dla.ggg(eek);
                return;
            }
        } else
        if(ecf == 1)
        {
            dnm.gea(super.fke, super.fkf, super.fkh, super.fkg);
            if(dnm.geb(dkf))
            {
                ecf = 0;
                return;
            }
        } else
        if(ecf == 2)
        {
            dla.gea(super.fke, super.fkf, super.fkh, super.fkg);
            if(dla.geb(een))
                ecf = 0;
            if(dla.geb(eek))
                dla.ggg(eel);
            if(dla.geb(eel) || dla.geb(eem))
            {
                ekc = dla.ggd(eek);
                ekd = dla.ggd(eel);
                abn(ekc, ekd, false);
            }
        }
    }

    private final boolean fbc(int l)
    {
        for(int i1 = 0; i1 < ede; i1++)
            if(edf[i1] == l && edh[i1] == 1)
                return true;

        return false;
    }

    protected final void fbd()
    {
        if(ebh)
        {
            Graphics g1 = getGraphics();
            g1.setColor(Color.black);
            g1.fillRect(0, 0, 512, 356);
            g1.setFont(new Font("Helvetica", 1, 16));
            g1.setColor(Color.yellow);
            int l = 35;
            g1.drawString("Sorry, an error has occured whilst loading RuneScape", 30, l);
            l += 50;
            g1.setColor(Color.white);
            g1.drawString("To fix this try the following (in order):", 30, l);
            l += 50;
            g1.setColor(Color.white);
            g1.setFont(new Font("Helvetica", 1, 12));
            g1.drawString("1: Try closing ALL open web-browser windows, and reloading", 30, l);
            l += 30;
            g1.drawString("2: Try clearing your web-browsers cache from tools->internet options", 30, l);
            l += 30;
            g1.drawString("3: Try using a different game-world", 30, l);
            l += 30;
            g1.drawString("4: Try rebooting your computer", 30, l);
            l += 30;
            g1.drawString("5: Try selecting a different version of Java from the play-game menu", 30, l);
            fle(1);
            return;
        }
        if(ekh)
        {
            Graphics g2 = getGraphics();
            g2.setColor(Color.black);
            g2.fillRect(0, 0, 512, 356);
            g2.setFont(new Font("Helvetica", 1, 20));
            g2.setColor(Color.white);
            g2.drawString("Error - unable to load game!", 50, 50);
            g2.drawString("To play RuneScape make sure you play from", 50, 100);
            g2.drawString("http://www.runescape.com", 50, 150);
            fle(1);
            return;
        }
        if(eih)
        {
            Graphics g3 = getGraphics();
            g3.setColor(Color.black);
            g3.fillRect(0, 0, 512, 356);
            g3.setFont(new Font("Helvetica", 1, 20));
            g3.setColor(Color.white);
            g3.drawString("Error - out of memory!", 50, 50);
            g3.drawString("Close ALL unnecessary programs", 50, 100);
            g3.drawString("and windows before loading the game", 50, 150);
            g3.drawString("RuneScape needs about 48meg of spare RAM", 50, 200);
            fle(1);
            return;
        }
        try
        {
            if(ehe == 0)
            {
                dnb.bnf = false;
                fbh();
            }
            if(ehe == 1)
            {
                dnb.bnf = true;
                fcl();
                return;
            }
        }
        catch(OutOfMemoryError outofmemoryerror)
        {
            fbe();
            eih = true;
        }
    }

    private final void fbe()
    {
        try
        {
            if(dnb != null)
            {
                dnb.cbi();
                dnb.blm = null;
                dnb = null;
            }
            if(ejg != null)
            {
                ejg.bha();
                ejg = null;
            }
            edb = null;
            dik = null;
            did = null;
            dhb = null;
            deh = null;
            ele = null;
            dgf = null;
            djc = null;
            if(dnh != null)
            {
                dnh.ghn = null;
                dnh.gim = (i[][])null;
                dnh.gih = (i[][])null;
                dnh.gia = null;
                dnh = null;
            }
            System.gc();
            return;
        }
        catch(Exception exception)
        {
            return;
        }
    }

    private final void fbf()
    {
        if(dnl != 0)
        {
            int l = 0;
            do
            {
                if(l >= egk)
                    break;
                if(super.fke < dnb.cef(dda[l], 1) && super.fkf > l * 12 && super.fkf < 12 + l * 12)
                {
                    super.aag.hcn(189);
                    super.aag.hdb(l);
                    super.aag.hdl();
                    break;
                }
                l++;
            } while(true);
            dnl = 0;
            dck = false;
            return;
        }
        for(int i1 = 0; i1 < egk; i1++)
        {
            int j1 = 65535;
            if(super.fke < dnb.cef(dda[i1], 1) && super.fkf > i1 * 12 && super.fkf < 12 + i1 * 12)
                j1 = 0xff0000;
            dnb.cdn(dda[i1], 6, 12 + i1 * 12, 1, j1);
        }

    }

    private final void fbg()
    {
        byte byte0 = 22;
        byte byte1 = 36;
        dnb.cba(byte0, byte1, 468, 16, 192);
        int l = 0x989898;
        dnb.cam(byte0, byte1 + 16, 468, 246, l, 160);
        dnb.cdl((new StringBuilder()).append("Please confirm your trade with @yel@").append(t.fnd(dmg)).toString(), byte0 + 234, byte1 + 12, 1, 0xffffff);
        dnb.cdl("You are about to give:", byte0 + 117, byte1 + 30, 1, 0xffff00);
        for(int i1 = 0; i1 < ecg; i1++)
        {
            String s1 = e.aib[ech[i1]];
            if(e.aig[ech[i1]] == 0)
                s1 = (new StringBuilder()).append(s1).append(" x ").append(fdh(eci[i1])).toString();
            dnb.cdl(s1, byte0 + 117, byte1 + 42 + i1 * 12, 1, 0xffffff);
        }

        if(ecg == 0)
            dnb.cdl("Nothing!", byte0 + 117, byte1 + 42, 1, 0xffffff);
        dnb.cdl("In return you will receive:", byte0 + 351, byte1 + 30, 1, 0xffff00);
        for(int j1 = 0; j1 < dnd; j1++)
        {
            String s2 = e.aib[dne[j1]];
            if(e.aig[dne[j1]] == 0)
                s2 = (new StringBuilder()).append(s2).append(" x ").append(fdh(dnf[j1])).toString();
            dnb.cdl(s2, byte0 + 351, byte1 + 42 + j1 * 12, 1, 0xffffff);
        }

        if(dnd == 0)
            dnb.cdl("Nothing!", byte0 + 351, byte1 + 42, 1, 0xffffff);
        dnb.cdl("Are you sure you want to do this?", byte0 + 234, byte1 + 200, 4, 65535);
        dnb.cdl("There is NO WAY to reverse a trade if you change your mind.", byte0 + 234, byte1 + 215, 1, 0xffffff);
        dnb.cdl("Remember that not all players are trustworthy", byte0 + 234, byte1 + 230, 1, 0xffffff);
        if(!edm)
        {
            dnb.ccb((byte0 + 118) - 35, byte1 + 238, efh + 25);
            dnb.ccb((byte0 + 352) - 35, byte1 + 238, efh + 26);
        } else
        {
            dnb.cdl("Waiting for other player...", byte0 + 234, byte1 + 250, 1, 0xffff00);
        }
        if(dnl == 1)
        {
            if(super.fke < byte0 || super.fkf < byte1 || super.fke > byte0 + 468 || super.fkf > byte1 + 262)
            {
                edl = false;
                super.aag.hcn(27);
                super.aag.hdl();
            }
            if(super.fke >= (byte0 + 118) - 35 && super.fke <= byte0 + 118 + 70 && super.fkf >= byte1 + 238 && super.fkf <= byte1 + 238 + 21)
            {
                edm = true;
                super.aag.hcn(102);
                super.aag.hdl();
            }
            if(super.fke >= (byte0 + 352) - 35 && super.fke <= byte0 + 353 + 70 && super.fkf >= byte1 + 238 && super.fkf <= byte1 + 238 + 21)
            {
                edl = false;
                super.aag.hcn(27);
                super.aag.hdl();
            }
            dnl = 0;
        }
    }

    private final void fbh()
    {
        dcm = false;
        dnb.bnc = false;
        dnb.cak();
        if(ecf == 0 || ecf == 1 || ecf == 2 || ecf == 3)
        {
            int l = (dng * 2) % 3072;
            if(l < 1024)
            {
                dnb.ccb(0, 10, efn);
                if(l > 768)
                    dnb.ccd(0, 10, efn + 1, l - 768);
            } else
            if(l < 2048)
            {
                dnb.ccb(0, 10, efn + 1);
                if(l > 1792)
                    dnb.ccd(0, 10, efh + 10, l - 1792);
            } else
            {
                dnb.ccb(0, 10, efh + 10);
                if(l > 2816)
                    dnb.ccd(0, 10, efn, l - 2816);
            }
        }
        if(ecf == 0)
            eki.ged();
        if(ecf == 1)
            dnm.ged();
        if(ecf == 2)
            dla.ged();
        dnb.ccb(0, dci, efh + 22);
        dnb.caj(ebf, 0, 0);
    }

    final void fbi(int l, int i1, int j1, int k1, int l1, int i2, int j2)
    {
        int k2 = e.aie[l1] + efj;
        int l2 = e.aij[l1];
        dnb.cdd(l, i1, j1, k1, k2, l2, 0, 0, false);
    }

    private final f fbj(int l, int i1, int j1, int k1)
    {
        if(dhb[l] == null)
        {
            dhb[l] = new f();
            dhb[l].gmf = l;
            dhb[l].gmg = 0;
        }
        f f1 = dhb[l];
        boolean flag = false;
        int l1 = 0;
        do
        {
            if(l1 >= dgn)
                break;
            if(edk[l1].gmf == l)
            {
                flag = true;
                break;
            }
            l1++;
        } while(true);
        if(flag)
        {
            f1.gmm = k1;
            int i2 = f1.gna;
            if(i1 != f1.gnb[i2] || j1 != f1.gnc[i2])
            {
                f1.gna = i2 = (i2 + 1) % 10;
                f1.gnb[i2] = i1;
                f1.gnc[i2] = j1;
            }
        } else
        {
            f1.gmf = l;
            f1.gmn = 0;
            f1.gna = 0;
            f1.gnb[0] = f1.gmh = i1;
            f1.gnc[0] = f1.gmi = j1;
            f1.gmm = f1.gml = k1;
            f1.gmk = 0;
        }
        deh[dgm++] = f1;
        return f1;
    }

    private final void fbk(int l, int i1, int j1, int k1, boolean flag)
    {
        fae(l, i1, j1, k1, j1, k1, false, flag);
    }

    private final void fbl()
    {
        byte abyte0[] = fcb((new StringBuilder()).append("config").append(w.cen).append(".jag").toString(), "Configuration", 10);
        if(abyte0 == null)
        {
            ebh = true;
            return;
        }
        e.baa(abyte0, egi);
        byte abyte1[] = fcb((new StringBuilder()).append("filter").append(w.cfg).append(".jag").toString(), "Chat system", 15);
        if(abyte1 == null)
        {
            ebh = true;
            return;
        } else
        {
            byte abyte2[] = t.fng("fragmentsenc.txt", 0, abyte1);
            byte abyte3[] = t.fng("badenc.txt", 0, abyte1);
            byte abyte4[] = t.fng("hostenc.txt", 0, abyte1);
            byte abyte5[] = t.fng("tldlist.txt", 0, abyte1);
            u.ffl(new q(abyte2), new q(abyte3), new q(abyte4), new q(abyte5));
            return;
        }
    }

    protected final void fbm(int l, int i1, int j1)
    {
        eed[eec] = i1;
        eee[eec] = j1;
        eec = eec + 1 & 0x1fff;
label0:
        for(int k1 = 10; k1 < 4000; k1++)
        {
            int l1 = eec - k1 & 0x1fff;
            if(eed[l1] != i1 || eee[l1] != j1)
                continue;
            boolean flag = false;
            int i2 = 1;
            do
            {
                if(i2 >= k1)
                    continue label0;
                int j2 = eec - i2 & 0x1fff;
                int k2 = l1 - i2 & 0x1fff;
                if(eed[k2] != i1 || eee[k2] != j1)
                    flag = true;
                if(eed[j2] != eed[k2] || eee[j2] != eee[k2])
                    continue label0;
                if(i2 == k1 - 1 && flag && ebd == 0 && ehb == 0)
                {
                    fad();
                    return;
                }
                i2++;
            } while(true);
        }

    }

    private final void fbn(boolean flag)
    {
        int l = ((j) (dnb)).blg - 199;
        int i1 = 36;
        dnb.ccb(l - 49, 3, efh + 5);
        char c1 = '\304';
        char c2 = '\266';
        int j1;
        int k1 = j1 = j.cbh(160, 160, 160);
        if(ejj == 0)
            k1 = j.cbh(220, 220, 220);
        else
            j1 = j.cbh(220, 220, 220);
        dnb.cam(l, i1, c1 / 2, 24, k1, 128);
        dnb.cam(l + c1 / 2, i1, c1 / 2, 24, j1, 128);
        dnb.cam(l, i1 + 24, c1, c2 - 24, j.cbh(220, 220, 220), 128);
        dnb.cbc(l, i1 + 24, c1, 0);
        dnb.cbd(l + c1 / 2, i1, 24, 0);
        dnb.cbc(l, (i1 + c2) - 16, c1, 0);
        dnb.cdl("Friends", l + c1 / 4, i1 + 16, 4, 0);
        dnb.cdl("Ignore", l + c1 / 4 + c1 / 2, i1 + 16, 4, 0);
        ejh.gfm(eji);
        if(ejj == 0)
        {
            for(int l1 = 0; l1 < super.aak; l1++)
            {
                String s1;
                if(super.aam[l1] == 99)
                    s1 = "@gre@";
                else
                if(super.aam[l1] > 0)
                    s1 = "@yel@";
                else
                    s1 = "@red@";
                ejh.gga(eji, l1, (new StringBuilder()).append(s1).append(t.fnd(super.aal[l1])).append("~439~@whi@Remove         WWWWWWWWWW").toString());
            }

        }
        if(ejj == 1)
        {
            for(int i2 = 0; i2 < super.aan; i2++)
                ejh.gga(eji, i2, (new StringBuilder()).append("@yel@").append(t.fnd(super.aba[i2])).append("~439~@whi@Remove         WWWWWWWWWW").toString());

        }
        ejh.ged();
        if(ejj == 0)
        {
            int j2 = ejh.ggh(eji);
            if(j2 >= 0 && super.fke < 489)
            {
                if(super.fke > 429)
                    dnb.cdl((new StringBuilder()).append("Click to remove ").append(t.fnd(super.aal[j2])).toString(), l + c1 / 2, i1 + 35, 1, 0xffffff);
                else
                if(super.aam[j2] == 99)
                    dnb.cdl((new StringBuilder()).append("Click to message ").append(t.fnd(super.aal[j2])).toString(), l + c1 / 2, i1 + 35, 1, 0xffffff);
                else
                if(super.aam[j2] > 0)
                    dnb.cdl((new StringBuilder()).append(t.fnd(super.aal[j2])).append(" is on world ").append(super.aam[j2]).toString(), l + c1 / 2, i1 + 35, 1, 0xffffff);
                else
                    dnb.cdl((new StringBuilder()).append(t.fnd(super.aal[j2])).append(" is offline").toString(), l + c1 / 2, i1 + 35, 1, 0xffffff);
            } else
            {
                dnb.cdl("Click a name to send a message", l + c1 / 2, i1 + 35, 1, 0xffffff);
            }
            int j3;
            if(super.fke > l && super.fke < l + c1 && super.fkf > (i1 + c2) - 16 && super.fkf < i1 + c2)
                j3 = 0xffff00;
            else
                j3 = 0xffffff;
            dnb.cdl("Click here to add a friend", l + c1 / 2, (i1 + c2) - 3, 1, j3);
        }
        if(ejj == 1)
        {
            int k2 = ejh.ggh(eji);
            if(k2 >= 0 && super.fke < 489 && super.fke > 429)
            {
                if(super.fke > 429)
                    dnb.cdl((new StringBuilder()).append("Click to remove ").append(t.fnd(super.aba[k2])).toString(), l + c1 / 2, i1 + 35, 1, 0xffffff);
            } else
            {
                dnb.cdl("Blocking messages from:", l + c1 / 2, i1 + 35, 1, 0xffffff);
            }
            int k3;
            if(super.fke > l && super.fke < l + c1 && super.fkf > (i1 + c2) - 16 && super.fkf < i1 + c2)
                k3 = 0xffff00;
            else
                k3 = 0xffffff;
            dnb.cdl("Click here to add a name", l + c1 / 2, (i1 + c2) - 3, 1, k3);
        }
        if(!flag)
            return;
        l = super.fke - (((j) (dnb)).blg - 199);
        i1 = super.fkf - 36;
        if(l >= 0 && i1 >= 0 && l < 196 && i1 < 182)
        {
            ejh.gea(l + (((j) (dnb)).blg - 199), i1 + 36, super.fkh, super.fkg);
            if(i1 <= 24 && dnl == 1)
                if(l < 98 && ejj == 1)
                {
                    ejj = 0;
                    ejh.gfn(eji);
                } else
                if(l > 98 && ejj == 0)
                {
                    ejj = 1;
                    ejh.gfn(eji);
                }
            if(dnl == 1 && ejj == 0)
            {
                int l2 = ejh.ggh(eji);
                if(l2 >= 0 && super.fke < 489)
                    if(super.fke > 429)
                        ack(super.aal[l2]);
                    else
                    if(super.aam[l2] != 0)
                    {
                        eie = 2;
                        ejk = super.aal[l2];
                        super.fkn = "";
                        super.fla = "";
                    }
            }
            if(dnl == 1 && ejj == 1)
            {
                int i3 = ejh.ggh(eji);
                if(i3 >= 0 && super.fke < 489 && super.fke > 429)
                    aci(super.aba[i3]);
            }
            if(i1 > 166 && dnl == 1 && ejj == 0)
            {
                eie = 1;
                super.fkl = "";
                super.fkm = "";
            }
            if(i1 > 166 && dnl == 1 && ejj == 1)
            {
                eie = 3;
                super.fkl = "";
                super.fkm = "";
            }
            dnl = 0;
        }
    }

    private final void fca(boolean flag)
    {
        int l = ((j) (dnb)).blg - 199;
        int i1 = 36;
        dnb.ccb(l - 49, 3, efh + 4);
        char c1 = '\304';
        char c2 = '\266';
        int j1;
        int k1 = j1 = j.cbh(160, 160, 160);
        if(eil == 0)
            k1 = j.cbh(220, 220, 220);
        else
            j1 = j.cbh(220, 220, 220);
        dnb.cam(l, i1, c1 / 2, 24, k1, 128);
        dnb.cam(l + c1 / 2, i1, c1 / 2, 24, j1, 128);
        dnb.cam(l, i1 + 24, c1, 90, j.cbh(220, 220, 220), 128);
        dnb.cam(l, i1 + 24 + 90, c1, c2 - 90 - 24, j.cbh(160, 160, 160), 128);
        dnb.cbc(l, i1 + 24, c1, 0);
        dnb.cbd(l + c1 / 2, i1, 24, 0);
        dnb.cbc(l, i1 + 113, c1, 0);
        dnb.cdl("Magic", l + c1 / 4, i1 + 16, 4, 0);
        dnb.cdl("Prayers", l + c1 / 4 + c1 / 2, i1 + 16, 4, 0);
        if(eil == 0)
        {
            eij.gfm(eik);
            int l1 = 0;
            for(int l2 = 0; l2 < e.ahm; l2++)
            {
                String s1 = "@yel@";
                int l4 = 0;
                do
                {
                    if(l4 >= e.amc[l2])
                        break;
                    int k5 = e.ame[l2][l4];
                    if(!fdi(k5, e.amf[l2][l4]))
                    {
                        s1 = "@whi@";
                        break;
                    }
                    l4++;
                } while(true);
                l4 = dfk[6];
                if(e.amb[l2] > l4)
                    s1 = "@bla@";
                eij.gga(eik, l1++, (new StringBuilder()).append(s1).append("Level ").append(e.amb[l2]).append(": ").append(e.akj[l2]).toString());
            }

            eij.ged();
            int i3 = eij.ggh(eik);
            if(i3 != -1)
            {
                dnb.cdn((new StringBuilder()).append("Level ").append(e.amb[i3]).append(": ").append(e.akj[i3]).toString(), l + 2, i1 + 124, 1, 0xffff00);
                dnb.cdn(e.akk[i3], l + 2, i1 + 136, 0, 0xffffff);
                for(int j4 = 0; j4 < e.amc[i3]; j4++)
                {
                    int i5 = e.ame[i3][j4];
                    dnb.ccb(l + 2 + j4 * 44, i1 + 150, efj + e.aie[i5]);
                    int l5 = fac(i5);
                    int i6 = e.amf[i3][j4];
                    String s3 = "@red@";
                    if(fdi(i5, i6))
                        s3 = "@gre@";
                    dnb.cdn((new StringBuilder()).append(s3).append(l5).append("/").append(i6).toString(), l + 2 + j4 * 44, i1 + 150, 1, 0xffffff);
                }

            } else
            {
                dnb.cdn("Point at a spell for a description", l + 2, i1 + 124, 1, 0);
            }
        }
        if(eil == 1)
        {
            eij.gfm(eik);
            int i2 = 0;
            for(int j3 = 0; j3 < e.ajb; j3++)
            {
                String s2 = "@whi@";
                if(e.ake[j3] > dmf[5])
                    s2 = "@bla@";
                if(eeh[j3])
                    s2 = "@gre@";
                eij.gga(eik, i2++, (new StringBuilder()).append(s2).append("Level ").append(e.ake[j3]).append(": ").append(e.aim[j3]).toString());
            }

            eij.ged();
            int k3 = eij.ggh(eik);
            if(k3 != -1)
            {
                dnb.cdl((new StringBuilder()).append("Level ").append(e.ake[k3]).append(": ").append(e.aim[k3]).toString(), l + c1 / 2, i1 + 130, 1, 0xffff00);
                dnb.cdl(e.ain[k3], l + c1 / 2, i1 + 145, 0, 0xffffff);
                dnb.cdl((new StringBuilder()).append("Drain rate: ").append(e.akf[k3]).toString(), l + c1 / 2, i1 + 160, 1, 0);
            } else
            {
                dnb.cdn("Point at a prayer for a description", l + 2, i1 + 124, 1, 0);
            }
        }
        if(!flag)
            return;
        l = super.fke - (((j) (dnb)).blg - 199);
        i1 = super.fkf - 36;
        if(l >= 0 && i1 >= 0 && l < 196 && i1 < 182)
        {
            eij.gea(l + (((j) (dnb)).blg - 199), i1 + 36, super.fkh, super.fkg);
            if(i1 <= 24 && dnl == 1)
                if(l < 98 && eil == 1)
                {
                    eil = 0;
                    eij.gfn(eik);
                } else
                if(l > 98 && eil == 0)
                {
                    eil = 1;
                    eij.gfn(eik);
                }
            if(dnl == 1 && eil == 0)
            {
                int j2 = eij.ggh(eik);
                if(j2 != -1)
                {
                    int l3 = dfk[6];
                    if(e.amb[j2] > l3)
                    {
                        fdj("Your magic ability is not high enough for this spell", 3);
                    } else
                    {
                        int k4 = 0;
                        do
                        {
                            if(k4 >= e.amc[j2])
                                break;
                            int j5 = e.ame[j2][k4];
                            if(!fdi(j5, e.amf[j2][k4]))
                            {
                                fdj("You don't have all the reagents you need for this spell", 3);
                                k4 = -1;
                                break;
                            }
                            k4++;
                        } while(true);
                        if(k4 == e.amc[j2])
                        {
                            dil = j2;
                            edi = -1;
                        }
                    }
                }
            }
            if(dnl == 1 && eil == 1)
            {
                int k2 = eij.ggh(eik);
                if(k2 != -1)
                {
                    int i4 = dmf[5];
                    if(e.ake[k2] > i4)
                        fdj("Your prayer ability is not high enough for this prayer", 3);
                    else
                    if(dfk[5] == 0)
                        fdj("You have run out of prayer points. Return to a church to recharge", 3);
                    else
                    if(eeh[k2])
                    {
                        super.aag.hcn(162);
                        super.aag.hdb(k2);
                        super.aag.hdl();
                        eeh[k2] = false;
                        fee("prayeroff");
                    } else
                    {
                        super.aag.hcn(202);
                        super.aag.hdb(k2);
                        super.aag.hdl();
                        eeh[k2] = true;
                        fee("prayeron");
                    }
                }
            }
            dnl = 0;
        }
    }

    protected final byte[] fcb(String s1, String s2, int l)
    {
        if(!dcn)
            s1 = (new StringBuilder()).append("Data/").append(s1).toString();
        byte abyte0[] = link.gaf(s1);
        if(abyte0 != null)
        {
            int i1 = ((abyte0[0] & 0xff) << 16) + ((abyte0[1] & 0xff) << 8) + (abyte0[2] & 0xff);
            int j1 = ((abyte0[3] & 0xff) << 16) + ((abyte0[4] & 0xff) << 8) + (abyte0[5] & 0xff);
            byte abyte1[] = new byte[abyte0.length - 6];
            for(int k1 = 0; k1 < abyte0.length - 6; k1++)
                abyte1[k1] = abyte0[k1 + 6];

            flj(l, (new StringBuilder()).append("Unpacking ").append(s2).toString());
            if(j1 != i1)
            {
                byte abyte2[] = new byte[i1];
                g.glj(abyte2, i1, abyte1, j1, 0);
                return abyte2;
            } else
            {
                return abyte1;
            }
        } else
        {
            return super.fcb(s1, s2, l);
        }
    }

    private final void fcc()
    {
        dnb.ccb(0, dci - 4, efh + 23);
        int l = j.cbh(200, 200, 255);
        if(dea == 0)
            l = j.cbh(255, 200, 50);
        if(ehl % 30 > 15)
            l = j.cbh(255, 50, 50);
        dnb.cdl("All messages", 54, dci + 6, 0, l);
        l = j.cbh(200, 200, 255);
        if(dea == 1)
            l = j.cbh(255, 200, 50);
        if(ehm % 30 > 15)
            l = j.cbh(255, 50, 50);
        dnb.cdl("Chat history", 155, dci + 6, 0, l);
        l = j.cbh(200, 200, 255);
        if(dea == 2)
            l = j.cbh(255, 200, 50);
        if(ehn % 30 > 15)
            l = j.cbh(255, 50, 50);
        dnb.cdl("Quest history", 255, dci + 6, 0, l);
        l = j.cbh(200, 200, 255);
        if(dea == 3)
            l = j.cbh(255, 200, 50);
        if(eia % 30 > 15)
            l = j.cbh(255, 50, 50);
        dnb.cdl("Private history", 355, dci + 6, 0, l);
        dnb.cdl("Report abuse", 457, dci + 6, 0, 0xffffff);
    }

    public final URL getDocumentBase()
    {
        if(link.fni != null)
            return link.fni.getDocumentBase();
        else
            return super.getDocumentBase();
    }

    private final void fcd()
    {
        if(deg > 1)
            deg--;
        acd();
        if(ehb > 0)
            ehb--;
        if(super.fil > 4500 && ebd == 0 && ehb == 0)
        {
            super.fil -= 500;
            fad();
            return;
        }
        if(djc.gml == 8 || djc.gml == 9)
            ebd = 500;
        if(ebd > 0)
            ebd--;
        if(eln)
        {
            faa();
            return;
        }
        for(int l = 0; l < dgm; l++)
        {
            f f1 = deh[l];
            int i4 = (f1.gna + 1) % 10;
            if(f1.gmn != i4)
            {
                int l4 = -1;
                int j5 = f1.gmn;
                int l5;
                if(j5 < i4)
                    l5 = i4 - j5;
                else
                    l5 = (10 + i4) - j5;
                int j6 = 4;
                if(l5 > 2)
                    j6 = (l5 - 1) * 4;
                if(f1.gnb[j5] - f1.gmh > ehd * 3 || f1.gnc[j5] - f1.gmi > ehd * 3 || f1.gnb[j5] - f1.gmh < -ehd * 3 || f1.gnc[j5] - f1.gmi < -ehd * 3 || l5 > 8)
                {
                    f1.gmh = f1.gnb[j5];
                    f1.gmi = f1.gnc[j5];
                } else
                {
                    if(f1.gmh < f1.gnb[j5])
                    {
                        f1.gmh += j6;
                        f1.gmk++;
                        l4 = 2;
                    } else
                    if(f1.gmh > f1.gnb[j5])
                    {
                        f1.gmh -= j6;
                        f1.gmk++;
                        l4 = 6;
                    }
                    if(f1.gmh - f1.gnb[j5] < j6 && f1.gmh - f1.gnb[j5] > -j6)
                        f1.gmh = f1.gnb[j5];
                    if(f1.gmi < f1.gnc[j5])
                    {
                        f1.gmi += j6;
                        f1.gmk++;
                        if(l4 == -1)
                            l4 = 4;
                        else
                        if(l4 == 2)
                            l4 = 3;
                        else
                            l4 = 5;
                    } else
                    if(f1.gmi > f1.gnc[j5])
                    {
                        f1.gmi -= j6;
                        f1.gmk++;
                        if(l4 == -1)
                            l4 = 0;
                        else
                        if(l4 == 2)
                            l4 = 1;
                        else
                            l4 = 7;
                    }
                    if(f1.gmi - f1.gnc[j5] < j6 && f1.gmi - f1.gnc[j5] > -j6)
                        f1.gmi = f1.gnc[j5];
                }
                if(l4 != -1)
                    f1.gml = l4;
                if(f1.gmh == f1.gnb[j5] && f1.gmi == f1.gnc[j5])
                    f1.gmn = (j5 + 1) % 10;
            } else
            {
                f1.gml = f1.gmm;
            }
            if(f1.gnf > 0)
                f1.gnf--;
            if(f1.gnh > 0)
                f1.gnh--;
            if(f1.gnl > 0)
                f1.gnl--;
            if(dgb <= 0)
                continue;
            dgb--;
            if(dgb == 0)
                fdj("You have been granted another life. Be more careful this time!", 3);
            if(dgb == 0)
                fdj("You retain your skills. Your objects land where you died", 3);
        }

        for(int i1 = 0; i1 < ebb; i1++)
        {
            f f2 = dgf[i1];
            int j4 = (f2.gna + 1) % 10;
            if(f2.gmn != j4)
            {
                int i5 = -1;
                int k5 = f2.gmn;
                int i6;
                if(k5 < j4)
                    i6 = j4 - k5;
                else
                    i6 = (10 + j4) - k5;
                int k6 = 4;
                if(i6 > 2)
                    k6 = (i6 - 1) * 4;
                if(f2.gnb[k5] - f2.gmh > ehd * 3 || f2.gnc[k5] - f2.gmi > ehd * 3 || f2.gnb[k5] - f2.gmh < -ehd * 3 || f2.gnc[k5] - f2.gmi < -ehd * 3 || i6 > 8)
                {
                    f2.gmh = f2.gnb[k5];
                    f2.gmi = f2.gnc[k5];
                } else
                {
                    if(f2.gmh < f2.gnb[k5])
                    {
                        f2.gmh += k6;
                        f2.gmk++;
                        i5 = 2;
                    } else
                    if(f2.gmh > f2.gnb[k5])
                    {
                        f2.gmh -= k6;
                        f2.gmk++;
                        i5 = 6;
                    }
                    if(f2.gmh - f2.gnb[k5] < k6 && f2.gmh - f2.gnb[k5] > -k6)
                        f2.gmh = f2.gnb[k5];
                    if(f2.gmi < f2.gnc[k5])
                    {
                        f2.gmi += k6;
                        f2.gmk++;
                        if(i5 == -1)
                            i5 = 4;
                        else
                        if(i5 == 2)
                            i5 = 3;
                        else
                            i5 = 5;
                    } else
                    if(f2.gmi > f2.gnc[k5])
                    {
                        f2.gmi -= k6;
                        f2.gmk++;
                        if(i5 == -1)
                            i5 = 0;
                        else
                        if(i5 == 2)
                            i5 = 1;
                        else
                            i5 = 7;
                    }
                    if(f2.gmi - f2.gnc[k5] < k6 && f2.gmi - f2.gnc[k5] > -k6)
                        f2.gmi = f2.gnc[k5];
                }
                if(i5 != -1)
                    f2.gml = i5;
                if(f2.gmh == f2.gnb[k5] && f2.gmi == f2.gnc[k5])
                    f2.gmn = (k5 + 1) % 10;
            } else
            {
                f2.gml = f2.gmm;
                if(f2.gmj == 43)
                    f2.gmk++;
            }
            if(f2.gnf > 0)
                f2.gnf--;
            if(f2.gnh > 0)
                f2.gnh--;
            if(f2.gnl > 0)
                f2.gnl--;
        }

        if(egf != 2)
        {
            if(j.bnn > 0)
                ejn++;
            if(j.caa > 0)
                ejn = 0;
            j.bnn = 0;
            j.caa = 0;
        }
        for(int j1 = 0; j1 < dgm; j1++)
        {
            f f3 = deh[j1];
            if(f3.hag > 0)
                f3.hag--;
        }

        if(dim)
        {
            if(dgc - djc.gmh < -500 || dgc - djc.gmh > 500 || dgd - djc.gmi < -500 || dgd - djc.gmi > 500)
            {
                dgc = djc.gmh;
                dgd = djc.gmi;
            }
        } else
        {
            if(dgc - djc.gmh < -500 || dgc - djc.gmh > 500 || dgd - djc.gmi < -500 || dgd - djc.gmi > 500)
            {
                dgc = djc.gmh;
                dgd = djc.gmi;
            }
            if(dgc != djc.gmh)
                dgc += (djc.gmh - dgc) / (16 + (eac - 500) / 15);
            if(dgd != djc.gmi)
                dgd += (djc.gmi - dgd) / (16 + (eac - 500) / 15);
            if(dka)
            {
                int k1 = eli * 32;
                int i3 = k1 - dkg;
                byte byte0 = 1;
                if(i3 != 0)
                {
                    elj++;
                    if(i3 > 128)
                    {
                        byte0 = -1;
                        i3 = 256 - i3;
                    } else
                    if(i3 > 0)
                        byte0 = 1;
                    else
                    if(i3 < -128)
                    {
                        byte0 = 1;
                        i3 = 256 + i3;
                    } else
                    if(i3 < 0)
                    {
                        byte0 = -1;
                        i3 = -i3;
                    }
                    dkg += ((elj * i3 + 255) / 256) * byte0;
                    dkg &= 0xff;
                } else
                {
                    elj = 0;
                }
            }
        }
        if(ejn > 20)
        {
            djn = false;
            ejn = 0;
        }
        if(den)
        {
            if(super.fkm.length() > 0)
                if(super.fkm.equalsIgnoreCase("::lostcon") && !dcn)
                    super.aag.baj();
                else
                if(super.fkm.equalsIgnoreCase("::closecon") && !dcn)
                {
                    aca();
                } else
                {
                    super.aag.hcn(142);
                    super.aag.hdc(super.fkm);
                    if(!djn)
                    {
                        super.aag.hdb(0);
                        djn = true;
                    }
                    super.aag.hdl();
                    super.fkl = "";
                    super.fkm = "";
                    del = "Please wait...";
                }
            if(super.fkh == 1 && super.fkf > 275 && super.fkf < 310 && super.fke > 56 && super.fke < 456)
            {
                super.aag.hcn(142);
                super.aag.hdc("-null-");
                if(!djn)
                {
                    super.aag.hdb(0);
                    djn = true;
                }
                super.aag.hdl();
                super.fkl = "";
                super.fkm = "";
                del = "Please wait...";
            }
            super.fkh = 0;
            return;
        }
        if(super.fkf > dci - 4)
        {
            if(super.fke > 15 && super.fke < 96 && super.fkh == 1)
                dea = 0;
            if(super.fke > 110 && super.fke < 194 && super.fkh == 1)
            {
                dea = 1;
                ddj.gbc[ddk] = 0xf423f;
            }
            if(super.fke > 215 && super.fke < 295 && super.fkh == 1)
            {
                dea = 2;
                ddj.gbc[ddm] = 0xf423f;
            }
            if(super.fke > 315 && super.fke < 395 && super.fkh == 1)
            {
                dea = 3;
                ddj.gbc[ddn] = 0xf423f;
            }
            if(super.fke > 417 && super.fke < 497 && super.fkh == 1)
            {
                dmh = 1;
                elc = 0;
                super.fkl = "";
                super.fkm = "";
            }
            super.fkh = 0;
            super.fkg = 0;
        }
        ddj.gea(super.fke, super.fkf, super.fkh, super.fkg);
        if(dea > 0 && super.fke >= 494 && super.fkf >= dci - 66)
            super.fkh = 0;
        if(ddj.geb(ddl))
        {
            String s1 = ddj.ggd(ddl);
            ddj.ggc(ddl, "");
            if(s1.startsWith("/"))
            {
                s1 = s1.trim().toLowerCase().substring(1);
                if(s1.startsWith("run("))
                {
                    String s2 = s1.substring(s1.indexOf('(') + 1, s1.indexOf(')') + 1);
                    loadscript((new StringBuilder()).append(path).append("Scripts/").append(arg(s2, 1)).append(".txt").toString());
                    if(scriptno > 0)
                        smacro = new script();
                    else
                        fdj("No script loaded", 3);
                } else
                if(s1.startsWith("stop()"))
                {
                    fdj((new StringBuilder()).append("Script stopped on line ").append(counter).toString(), 3);
                    counter = 9999;
                } else
                {
                    int j3 = v.cek(s1);
                    acm(v.ceg, j3);
                    s1 = v.cej(v.ceg, 0, j3);
                    s1 = u.fgd(s1);
                    djc.gnf = 150;
                    djc.gne = s1;
                    fdj((new StringBuilder()).append(djc.gme).append(": ").append(s1).toString(), 2);
                }
            }
        }
        if(dea == 0)
        {
            for(int l1 = 0; l1 < 5; l1++)
                if(eib[l1] > 0)
                    eib[l1]--;

        }
        if(dgb != 0)
            super.fkh = 0;
        if(dge || eld)
        {
            if(super.fkg != 0)
                eka++;
            else
                eka = 0;
            if(eka > 600)
                ekb += 5000;
            else
            if(eka > 450)
                ekb += 500;
            else
            if(eka > 300)
                ekb += 50;
            else
            if(eka > 150)
                ekb += 5;
            else
            if(eka > 50)
                ekb++;
            else
            if(eka > 20 && (eka & 5) == 0)
                ekb++;
        } else
        {
            eka = 0;
            ekb = 0;
        }
        if(super.fkh == 1)
            dnl = 1;
        else
        if(super.fkh == 2)
            dnl = 2;
        ejg.bhg(super.fke, super.fkf);
        super.fkh = 0;
        if(dka)
        {
            if(elj == 0 || dim)
            {
                if(super.fjl)
                {
                    eli = eli + 1 & 7;
                    super.fjl = false;
                    if(!ebg)
                    {
                        if((eli & 1) == 0)
                            eli = eli + 1 & 7;
                        for(int i2 = 0; i2 < 8 && !eng(eli); i2++)
                            eli = eli + 1 & 7;

                    }
                }
                if(super.fjm)
                {
                    eli = eli + 7 & 7;
                    super.fjm = false;
                    if(!ebg)
                    {
                        if((eli & 1) == 0)
                            eli = eli + 7 & 7;
                        for(int j2 = 0; j2 < 8 && !eng(eli); j2++)
                            eli = eli + 7 & 7;

                    }
                }
            }
        } else
        if(super.fjl)
            dkg = dkg + 2 & 0xff;
        else
        if(super.fjm)
            dkg = dkg - 2 & 0xff;
        if(ebg && eac > 550)
            eac -= 4;
        else
        if(!ebg && eac < 750)
            eac += 4;
        if(emb > 0)
            emb--;
        else
        if(emb < 0)
            emb++;
        ejg.bji(17);
        edd++;
        if(edd > 5)
        {
            edd = 0;
            dfa = (dfa + 1) % 3;
            dfb = (dfb + 1) % 4;
            dfc = (dfc + 1) % 5;
        }
        for(int k2 = 0; k2 < efd; k2++)
        {
            int k3 = ekm[k2];
            int k4 = ekn[k2];
            if(k3 >= 0 && k4 >= 0 && k3 < 96 && k4 < 96 && ela[k2] == 74)
                dik[k2].cmi(1, 0, 0);
        }

        for(int l2 = 0; l2 < eig; l2++)
        {
            egn[l2]++;
            if(egn[l2] <= 50)
                continue;
            eig--;
            for(int l3 = l2; l3 < eig; l3++)
            {
                ell[l3] = ell[l3 + 1];
                elh[l3] = elh[l3 + 1];
                egn[l3] = egn[l3 + 1];
                ehg[l3] = ehg[l3 + 1];
            }

        }

    }

    private final void fce()
    {
        dgk = new h(dnb, 100);
        dgk.gfd(256, 10, "Please design Your Character", 4, true);
        int l = 140;
        int i1 = 34;
        l += 116;
        i1 -= 10;
        dgk.gfd(l - 55, i1 + 110, "Front", 3, true);
        dgk.gfd(l, i1 + 110, "Side", 3, true);
        dgk.gfd(l + 55, i1 + 110, "Back", 3, true);
        byte byte0 = 54;
        i1 += 145;
        dgk.gff(l - byte0, i1, 53, 41);
        dgk.gfd(l - byte0, i1 - 8, "Head", 1, true);
        dgk.gfd(l - byte0, i1 + 8, "Type", 1, true);
        dgk.gfg(l - byte0 - 40, i1, h.gdi + 7);
        dlb = dgk.gfl(l - byte0 - 40, i1, 20, 20);
        dgk.gfg((l - byte0) + 40, i1, h.gdi + 6);
        dlc = dgk.gfl((l - byte0) + 40, i1, 20, 20);
        dgk.gff(l + byte0, i1, 53, 41);
        dgk.gfd(l + byte0, i1 - 8, "Hair", 1, true);
        dgk.gfd(l + byte0, i1 + 8, "Color", 1, true);
        dgk.gfg((l + byte0) - 40, i1, h.gdi + 7);
        dld = dgk.gfl((l + byte0) - 40, i1, 20, 20);
        dgk.gfg(l + byte0 + 40, i1, h.gdi + 6);
        dle = dgk.gfl(l + byte0 + 40, i1, 20, 20);
        i1 += 50;
        dgk.gff(l - byte0, i1, 53, 41);
        dgk.gfd(l - byte0, i1, "Gender", 1, true);
        dgk.gfg(l - byte0 - 40, i1, h.gdi + 7);
        dlf = dgk.gfl(l - byte0 - 40, i1, 20, 20);
        dgk.gfg((l - byte0) + 40, i1, h.gdi + 6);
        dlg = dgk.gfl((l - byte0) + 40, i1, 20, 20);
        dgk.gff(l + byte0, i1, 53, 41);
        dgk.gfd(l + byte0, i1 - 8, "Top", 1, true);
        dgk.gfd(l + byte0, i1 + 8, "Color", 1, true);
        dgk.gfg((l + byte0) - 40, i1, h.gdi + 7);
        dlh = dgk.gfl((l + byte0) - 40, i1, 20, 20);
        dgk.gfg(l + byte0 + 40, i1, h.gdi + 6);
        dli = dgk.gfl(l + byte0 + 40, i1, 20, 20);
        i1 += 50;
        dgk.gff(l - byte0, i1, 53, 41);
        dgk.gfd(l - byte0, i1 - 8, "Skin", 1, true);
        dgk.gfd(l - byte0, i1 + 8, "Color", 1, true);
        dgk.gfg(l - byte0 - 40, i1, h.gdi + 7);
        dlj = dgk.gfl(l - byte0 - 40, i1, 20, 20);
        dgk.gfg((l - byte0) + 40, i1, h.gdi + 6);
        dlk = dgk.gfl((l - byte0) + 40, i1, 20, 20);
        dgk.gff(l + byte0, i1, 53, 41);
        dgk.gfd(l + byte0, i1 - 8, "Bottom", 1, true);
        dgk.gfd(l + byte0, i1 + 8, "Color", 1, true);
        dgk.gfg((l + byte0) - 40, i1, h.gdi + 7);
        dll = dgk.gfl((l + byte0) - 40, i1, 20, 20);
        dgk.gfg(l + byte0 + 40, i1, h.gdi + 6);
        dlm = dgk.gfl(l + byte0 + 40, i1, 20, 20);
        i1 += 82;
        i1 -= 35;
        dgk.gfe(l, i1, 200, 30);
        dgk.gfd(l, i1, "Accept", 4, false);
        dln = dgk.gfl(l, i1, 200, 30);
    }

    protected final void fcf(int l)
    {
        if(l == 1019)
        {
            autologin = !autologin;
            if(autologin)
                fdj((new StringBuilder()).append("TRune : Autologin enabled for ").append(ekc).append("").toString(), 3);
            else
                fdj("TRune : Autologin disabled", 3);
        }
        if(l == 1018)
        {
            statmenu = !statmenu;
            if(statmenu)
                fdj((new StringBuilder()).append("TRune : Statmenu enabled for ").append(ekc).append("").toString(), 3);
            else
                fdj("TRune : Statmenu disabled", 3);
        }
        if(l == 27)
        {
            System.out.println((new StringBuilder()).append("Goodbye ").append(ekc).toString());
            aca();
            wait(10);
            System.exit(0);
        }
        if(ehe == 0)
        {
            if(ecf == 0)
                eki.gec(l);
            if(ecf == 1)
                dnm.gec(l);
            if(ecf == 2)
                dla.gec(l);
        }
        if(ehe == 1)
        {
            if(eln)
            {
                dgk.gec(l);
                return;
            }
            if(eie == 0 && dmh == 0 && !den)
                ddj.gec(l);
        }
    }

    private final void fcg()
    {
        int l = 2203 - (dje + eaj + dnj);
        if(djd + eai + dni >= 2640)
            l = -50;
        int i1 = -1;
        for(int j1 = 0; j1 < efd; j1++)
            dij[j1] = false;

        for(int k1 = 0; k1 < ehc; k1++)
            eah[k1] = false;

        int l1 = ejg.bhh();
        i ai[] = ejg.bhj();
        int ai1[] = ejg.bhi();
        for(int i2 = 0; i2 < l1 && ejf <= 200; i2++)
        {
            int k2 = ai1[i2];
            i l2 = ai[i2];
            if(l2.chl[k2] > 65535 && (l2.chl[k2] < 0x30d40 || l2.chl[k2] > 0x493e0))
                continue;
            if(l2 == ejg.beh)
            {
                int i3 = l2.chl[k2] % 10000;
                int l3 = l2.chl[k2] / 10000;
                if(l3 == 1)
                {
                    String s1 = "";
                    int k4 = 0;
                    if(djc.gnm > 0 && deh[i3].gnm > 0)
                        k4 = djc.gnm - deh[i3].gnm;
                    if(k4 < 0)
                        s1 = "@or1@";
                    if(k4 < -3)
                        s1 = "@or2@";
                    if(k4 < -6)
                        s1 = "@or3@";
                    if(k4 < -9)
                        s1 = "@red@";
                    if(k4 > 0)
                        s1 = "@gr1@";
                    if(k4 > 3)
                        s1 = "@gr2@";
                    if(k4 > 6)
                        s1 = "@gr3@";
                    if(k4 > 9)
                        s1 = "@gre@";
                    s1 = (new StringBuilder()).append(" ").append(s1).append("(level-").append(deh[i3].gnm).append(")").toString();
                    if(dil >= 0)
                    {
                        if(e.amd[dil] == 1 || e.amd[dil] == 2)
                        {
                            dem[ejf] = (new StringBuilder()).append("Cast ").append(e.akj[dil]).append(" on").toString();
                            ejm[ejf] = (new StringBuilder()).append("@whi@").append(deh[i3].gme).append(s1).toString();
                            dga[ejf] = 800;
                            dfl[ejf] = deh[i3].gmh;
                            dfm[ejf] = deh[i3].gmi;
                            djk[ejf] = deh[i3].gmf;
                            djl[ejf] = dil;
                            ejf++;
                        }
                        continue;
                    }
                    if(edi >= 0)
                    {
                        dem[ejf] = (new StringBuilder()).append("Use ").append(edj).append(" with").toString();
                        ejm[ejf] = (new StringBuilder()).append("@whi@").append(deh[i3].gme).append(s1).toString();
                        dga[ejf] = 810;
                        dfl[ejf] = deh[i3].gmh;
                        dfm[ejf] = deh[i3].gmi;
                        djk[ejf] = deh[i3].gmf;
                        djl[ejf] = edi;
                        ejf++;
                        continue;
                    }
                    if(l > 0 && (deh[i3].gmi - 64) / ehd + eaj + dnj < 2203)
                    {
                        dem[ejf] = "Attack";
                        ejm[ejf] = (new StringBuilder()).append("@whi@").append(deh[i3].gme).append(s1).toString();
                        if(k4 >= 0 && k4 < 5)
                            dga[ejf] = 805;
                        else
                            dga[ejf] = 2805;
                        dfl[ejf] = deh[i3].gmh;
                        dfm[ejf] = deh[i3].gmi;
                        djk[ejf] = deh[i3].gmf;
                        ejf++;
                    } else
                    if(egi)
                    {
                        dem[ejf] = "Duel with";
                        ejm[ejf] = (new StringBuilder()).append("@whi@").append(deh[i3].gme).append(s1).toString();
                        dfl[ejf] = deh[i3].gmh;
                        dfm[ejf] = deh[i3].gmi;
                        dga[ejf] = 2806;
                        djk[ejf] = deh[i3].gmf;
                        ejf++;
                    }
                    dem[ejf] = "Trade with";
                    ejm[ejf] = (new StringBuilder()).append("@whi@").append(deh[i3].gme).append(s1).toString();
                    dga[ejf] = 2810;
                    djk[ejf] = deh[i3].gmf;
                    ejf++;
                    dem[ejf] = "Follow";
                    ejm[ejf] = (new StringBuilder()).append("@whi@").append(deh[i3].gme).append(s1).toString();
                    dga[ejf] = 2820;
                    djk[ejf] = deh[i3].gmf;
                    ejf++;
                    continue;
                }
                if(l3 == 2)
                {
                    if(dil >= 0)
                    {
                        if(e.amd[dil] == 3)
                        {
                            dem[ejf] = (new StringBuilder()).append("Cast ").append(e.akj[dil]).append(" on").toString();
                            ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[dmn[i3]]).toString();
                            dga[ejf] = 200;
                            dfl[ejf] = dml[i3];
                            dfm[ejf] = dmm[i3];
                            djk[ejf] = dmn[i3];
                            djl[ejf] = dil;
                            ejf++;
                        }
                        continue;
                    }
                    if(edi >= 0)
                    {
                        dem[ejf] = (new StringBuilder()).append("Use ").append(edj).append(" with").toString();
                        ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[dmn[i3]]).toString();
                        dga[ejf] = 210;
                        dfl[ejf] = dml[i3];
                        dfm[ejf] = dmm[i3];
                        djk[ejf] = dmn[i3];
                        djl[ejf] = edi;
                        ejf++;
                    } else
                    {
                        dem[ejf] = "Take";
                        ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[dmn[i3]]).toString();
                        dga[ejf] = 220;
                        dfl[ejf] = dml[i3];
                        dfm[ejf] = dmm[i3];
                        djk[ejf] = dmn[i3];
                        ejf++;
                        dem[ejf] = "Examine";
                        ejm[ejf] = (new StringBuilder()).append("@lre@").append(e.aib[dmn[i3]]).toString();
                        dga[ejf] = 3200;
                        djk[ejf] = dmn[i3];
                        ejf++;
                    }
                    continue;
                }
                if(l3 != 3)
                    continue;
                String s2 = "";
                int l4 = -1;
                int i5 = dgf[i3].gmj;
                if(e.alf[i5] > 0)
                {
                    int j5 = (e.alb[i5] + e.ale[i5] + e.alc[i5] + e.ald[i5]) / 4;
                    int k5 = (dmf[0] + dmf[1] + dmf[2] + dmf[3] + 27) / 4;
                    l4 = k5 - j5;
                    s2 = "@yel@";
                    if(l4 < 0)
                        s2 = "@or1@";
                    if(l4 < -3)
                        s2 = "@or2@";
                    if(l4 < -6)
                        s2 = "@or3@";
                    if(l4 < -9)
                        s2 = "@red@";
                    if(l4 > 0)
                        s2 = "@gr1@";
                    if(l4 > 3)
                        s2 = "@gr2@";
                    if(l4 > 6)
                        s2 = "@gr3@";
                    if(l4 > 9)
                        s2 = "@gre@";
                    s2 = (new StringBuilder()).append(" ").append(s2).append("(level-").append(j5).append(")").toString();
                }
                if(dil >= 0)
                {
                    if(e.amd[dil] == 2)
                    {
                        dem[ejf] = (new StringBuilder()).append("Cast ").append(e.akj[dil]).append(" on").toString();
                        ejm[ejf] = (new StringBuilder()).append("@yel@").append(e.ahd[dgf[i3].gmj]).toString();
                        dga[ejf] = 700;
                        dfl[ejf] = dgf[i3].gmh;
                        dfm[ejf] = dgf[i3].gmi;
                        djk[ejf] = dgf[i3].gmf;
                        djl[ejf] = dil;
                        ejf++;
                    }
                    continue;
                }
                if(edi >= 0)
                {
                    dem[ejf] = (new StringBuilder()).append("Use ").append(edj).append(" with").toString();
                    ejm[ejf] = (new StringBuilder()).append("@yel@").append(e.ahd[dgf[i3].gmj]).toString();
                    dga[ejf] = 710;
                    dfl[ejf] = dgf[i3].gmh;
                    dfm[ejf] = dgf[i3].gmi;
                    djk[ejf] = dgf[i3].gmf;
                    djl[ejf] = edi;
                    ejf++;
                    continue;
                }
                if(e.alf[i5] > 0)
                {
                    dem[ejf] = "Attack";
                    ejm[ejf] = (new StringBuilder()).append("@yel@").append(e.ahd[dgf[i3].gmj]).append(s2).toString();
                    if(l4 >= 0)
                        dga[ejf] = 715;
                    else
                        dga[ejf] = 2715;
                    dfl[ejf] = dgf[i3].gmh;
                    dfm[ejf] = dgf[i3].gmi;
                    djk[ejf] = dgf[i3].gmf;
                    ejf++;
                }
                dem[ejf] = "Talk-to";
                ejm[ejf] = (new StringBuilder()).append("@yel@").append(e.ahd[dgf[i3].gmj]).toString();
                dga[ejf] = 720;
                dfl[ejf] = dgf[i3].gmh;
                dfm[ejf] = dgf[i3].gmi;
                djk[ejf] = dgf[i3].gmf;
                ejf++;
                if(!e.ahf[i5].equals(""))
                {
                    dem[ejf] = e.ahf[i5];
                    ejm[ejf] = (new StringBuilder()).append("@yel@").append(e.ahd[dgf[i3].gmj]).toString();
                    dga[ejf] = 725;
                    dfl[ejf] = dgf[i3].gmh;
                    dfm[ejf] = dgf[i3].gmi;
                    djk[ejf] = dgf[i3].gmf;
                    ejf++;
                }
                dem[ejf] = "Examine";
                ejm[ejf] = (new StringBuilder()).append("@yel@").append(e.ahd[dgf[i3].gmj]).toString();
                dga[ejf] = 3700;
                djk[ejf] = dgf[i3].gmj;
                ejf++;
                continue;
            }
            if(l2 != null && l2.chk >= 10000)
            {
                int j3 = l2.chk - 10000;
                int i4 = eda[j3];
                if(eah[j3])
                    continue;
                if(dil >= 0)
                {
                    if(e.amd[dil] == 4)
                    {
                        dem[ejf] = (new StringBuilder()).append("Cast ").append(e.akj[dil]).append(" on").toString();
                        ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ahi[i4]).toString();
                        dga[ejf] = 300;
                        dfl[ejf] = dhg[j3];
                        dfm[ejf] = dhh[j3];
                        djk[ejf] = ecn[j3];
                        djl[ejf] = dil;
                        ejf++;
                    }
                } else
                if(edi >= 0)
                {
                    dem[ejf] = (new StringBuilder()).append("Use ").append(edj).append(" with").toString();
                    ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ahi[i4]).toString();
                    dga[ejf] = 310;
                    dfl[ejf] = dhg[j3];
                    dfm[ejf] = dhh[j3];
                    djk[ejf] = ecn[j3];
                    djl[ejf] = edi;
                    ejf++;
                } else
                {
                    if(!e.ahk[i4].equalsIgnoreCase("WalkTo"))
                    {
                        dem[ejf] = e.ahk[i4];
                        ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ahi[i4]).toString();
                        dga[ejf] = 320;
                        dfl[ejf] = dhg[j3];
                        dfm[ejf] = dhh[j3];
                        djk[ejf] = ecn[j3];
                        ejf++;
                    }
                    if(!e.ahl[i4].equalsIgnoreCase("Examine"))
                    {
                        dem[ejf] = e.ahl[i4];
                        ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ahi[i4]).toString();
                        dga[ejf] = 2300;
                        dfl[ejf] = dhg[j3];
                        dfm[ejf] = dhh[j3];
                        djk[ejf] = ecn[j3];
                        ejf++;
                    }
                    dem[ejf] = "Examine";
                    ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ahi[i4]).toString();
                    dga[ejf] = 3300;
                    djk[ejf] = i4;
                    ejf++;
                }
                eah[j3] = true;
                continue;
            }
            if(l2 != null && l2.chk >= 0)
            {
                int k3 = l2.chk;
                int j4 = ela[k3];
                if(dij[k3])
                    continue;
                if(dil >= 0)
                {
                    if(e.amd[dil] == 5)
                    {
                        dem[ejf] = (new StringBuilder()).append("Cast ").append(e.akj[dil]).append(" on").toString();
                        ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ajm[j4]).toString();
                        dga[ejf] = 400;
                        dfl[ejf] = ekm[k3];
                        dfm[ejf] = ekn[k3];
                        djk[ejf] = elb[k3];
                        djl[ejf] = ela[k3];
                        djm[ejf] = dil;
                        ejf++;
                    }
                } else
                if(edi >= 0)
                {
                    dem[ejf] = (new StringBuilder()).append("Use ").append(edj).append(" with").toString();
                    ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ajm[j4]).toString();
                    dga[ejf] = 410;
                    dfl[ejf] = ekm[k3];
                    dfm[ejf] = ekn[k3];
                    djk[ejf] = elb[k3];
                    djl[ejf] = ela[k3];
                    djm[ejf] = edi;
                    ejf++;
                } else
                {
                    if(!e.aka[j4].equalsIgnoreCase("WalkTo"))
                    {
                        dem[ejf] = e.aka[j4];
                        ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ajm[j4]).toString();
                        dga[ejf] = 420;
                        dfl[ejf] = ekm[k3];
                        dfm[ejf] = ekn[k3];
                        djk[ejf] = elb[k3];
                        djl[ejf] = ela[k3];
                        ejf++;
                    }
                    if(!e.akb[j4].equalsIgnoreCase("Examine"))
                    {
                        dem[ejf] = e.akb[j4];
                        ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ajm[j4]).toString();
                        dga[ejf] = 2400;
                        dfl[ejf] = ekm[k3];
                        dfm[ejf] = ekn[k3];
                        djk[ejf] = elb[k3];
                        djl[ejf] = ela[k3];
                        ejf++;
                    }
                    dem[ejf] = "Examine";
                    ejm[ejf] = (new StringBuilder()).append("@cya@").append(e.ajm[j4]).toString();
                    dga[ejf] = 3400;
                    djk[ejf] = j4;
                    ejf++;
                }
                dij[k3] = true;
                continue;
            }
            if(k2 >= 0)
                k2 = l2.chl[k2] - 0x30d40;
            if(k2 >= 0)
                i1 = k2;
        }

        if(dil >= 0 && e.amd[dil] <= 1)
        {
            dem[ejf] = (new StringBuilder()).append("Cast ").append(e.akj[dil]).append(" on self").toString();
            ejm[ejf] = "";
            dga[ejf] = 1000;
            djk[ejf] = dil;
            ejf++;
        }
        if(i1 != -1)
        {
            int j2 = i1;
            if(dil >= 0)
            {
                if(e.amd[dil] == 6)
                {
                    dem[ejf] = (new StringBuilder()).append("Cast ").append(e.akj[dil]).append(" on ground").toString();
                    ejm[ejf] = "";
                    dga[ejf] = 900;
                    dfl[ejf] = dnh.gin[j2];
                    dfm[ejf] = dnh.ghk[j2];
                    djk[ejf] = dil;
                    ejf++;
                    return;
                }
            } else
            if(edi < 0)
            {
                dem[ejf] = "Walk here";
                ejm[ejf] = "";
                dga[ejf] = 920;
                dfl[ejf] = dnh.gin[j2];
                dfm[ejf] = dnh.ghk[j2];
                ejf++;
            }
        }
    }

    private final void fch()
    {
        if(dnl != 0)
        {
            dnl = 0;
            int l = super.fke - 52;
            int i1 = super.fkf - 44;
            if(l >= 0 && i1 >= 12 && l < 408 && i1 < 246)
            {
                int j1 = 0;
                for(int l1 = 0; l1 < 5; l1++)
                {
                    for(int k2 = 0; k2 < 8; k2++)
                    {
                        int k3 = 7 + k2 * 49;
                        int k4 = 28 + l1 * 34;
                        if(l > k3 && l < k3 + 49 && i1 > k4 && i1 < k4 + 34 && efa[j1] != -1)
                        {
                            dej = j1;
                            dek = efa[j1];
                        }
                        j1++;
                    }

                }

                if(dej >= 0)
                {
                    int i2 = efa[dej];
                    if(i2 != -1)
                    {
                        if(efb[dej] > 0 && l > 298 && i1 >= 204 && l < 408 && i1 <= 215)
                        {
                            int l2 = dmd + efc[dej];
                            if(l2 < 10)
                                l2 = 10;
                            int l3 = (l2 * e.aif[i2]) / 100;
                            super.aag.hcn(67);
                            super.aag.hdj(efa[dej]);
                            super.aag.hdh(l3);
                            super.aag.hdl();
                        }
                        if(fac(i2) > 0 && l > 2 && i1 >= 229 && l < 112 && i1 <= 240)
                        {
                            int i3 = dmc + efc[dej];
                            if(i3 < 10)
                                i3 = 10;
                            int i4 = (i3 * e.aif[i2]) / 100;
                            super.aag.hcn(177);
                            super.aag.hdj(efa[dej]);
                            super.aag.hdh(i4);
                            super.aag.hdl();
                        }
                    }
                }
            } else
            {
                super.aag.hcn(92);
                super.aag.hdl();
                dmk = false;
                return;
            }
        }
        byte byte0 = 52;
        byte byte1 = 44;
        dnb.cba(byte0, byte1, 408, 12, 192);
        int k1 = 0x989898;
        dnb.cam(byte0, byte1 + 12, 408, 17, k1, 160);
        dnb.cam(byte0, byte1 + 29, 8, 170, k1, 160);
        dnb.cam(byte0 + 399, byte1 + 29, 9, 170, k1, 160);
        dnb.cam(byte0, byte1 + 199, 408, 47, k1, 160);
        dnb.cdn("Buying and selling items", byte0 + 1, byte1 + 10, 1, 0xffffff);
        int j2 = 0xffffff;
        if(super.fke > byte0 + 320 && super.fkf >= byte1 && super.fke < byte0 + 408 && super.fkf < byte1 + 12)
            j2 = 0xff0000;
        dnb.cdk("Close window", byte0 + 406, byte1 + 10, 1, j2);
        dnb.cdn("Shops stock in green", byte0 + 2, byte1 + 24, 1, 65280);
        dnb.cdn("Number you own in blue", byte0 + 135, byte1 + 24, 1, 65535);
        dnb.cdn((new StringBuilder()).append("Your money: ").append(fac(10)).append("gp").toString(), byte0 + 280, byte1 + 24, 1, 0xffff00);
        int j3 = 0xd0d0d0;
        int j4 = 0;
        for(int l4 = 0; l4 < 5; l4++)
        {
            for(int j5 = 0; j5 < 8; j5++)
            {
                int i6 = byte0 + 7 + j5 * 49;
                int l6 = byte1 + 28 + l4 * 34;
                if(dej == j4)
                    dnb.cam(i6, l6, 49, 34, 0xff0000, 160);
                else
                    dnb.cam(i6, l6, 49, 34, j3, 160);
                dnb.cbb(i6, l6, 50, 35, 0);
                if(efa[j4] != -1)
                {
                    dnb.cdd(i6, l6, 48, 32, efj + e.aie[efa[j4]], e.aij[efa[j4]], 0, 0, false);
                    dnb.cdn(String.valueOf(efb[j4]), i6 + 1, l6 + 10, 1, 65280);
                    dnb.cdk(String.valueOf(fac(efa[j4])), i6 + 47, l6 + 10, 1, 65535);
                }
                j4++;
            }

        }

        dnb.cbc(byte0 + 5, byte1 + 222, 398, 0);
        if(dej == -1)
        {
            dnb.cdl("Select an object to buy or sell", byte0 + 204, byte1 + 214, 3, 0xffff00);
            return;
        }
        int i5 = efa[dej];
        if(i5 != -1)
        {
            if(efb[dej] > 0)
            {
                int k5 = dmd + efc[dej];
                if(k5 < 10)
                    k5 = 10;
                int j6 = (k5 * e.aif[i5]) / 100;
                dnb.cdn((new StringBuilder()).append("Buy a new ").append(e.aib[i5]).append(" for ").append(j6).append("gp").toString(), byte0 + 2, byte1 + 214, 1, 0xffff00);
                int i7 = 0xffffff;
                if(super.fke > byte0 + 298 && super.fkf >= byte1 + 204 && super.fke < byte0 + 408 && super.fkf <= byte1 + 215)
                    i7 = 0xff0000;
                dnb.cdk("Click here to buy", byte0 + 405, byte1 + 214, 3, i7);
            } else
            {
                dnb.cdl("This item is not currently available to buy", byte0 + 204, byte1 + 214, 3, 0xffff00);
            }
            if(fac(i5) > 0)
            {
                int l5 = dmc + efc[dej];
                if(l5 < 10)
                    l5 = 10;
                int k6 = (l5 * e.aif[i5]) / 100;
                dnb.cdk((new StringBuilder()).append("Sell your ").append(e.aib[i5]).append(" for ").append(k6).append("gp").toString(), byte0 + 405, byte1 + 239, 1, 0xffff00);
                int j7 = 0xffffff;
                if(super.fke > byte0 + 2 && super.fkf >= byte1 + 229 && super.fke < byte0 + 112 && super.fkf <= byte1 + 240)
                    j7 = 0xff0000;
                dnb.cdn("Click here to sell", byte0 + 2, byte1 + 239, 3, j7);
                return;
            }
            dnb.cdl("You do not have any of this item to sell", byte0 + 204, byte1 + 239, 3, 0xffff00);
        }
    }

    private final void fci()
    {
        byte abyte0[] = fcb((new StringBuilder()).append("textures").append(w.cfd).append(".jag").toString(), "Textures", 50);
        if(abyte0 == null)
        {
            ebh = true;
            return;
        }
        byte abyte1[] = t.fng("index.dat", 0, abyte0);
        ejg.bje(e.akc, 7, 11);
        for(int l = 0; l < e.akc; l++)
        {
            String s1 = e.ajk[l];
            byte abyte2[] = t.fng((new StringBuilder()).append(s1).append(".dat").toString(), 0, abyte0);
            dnb.cbj(efl, abyte2, abyte1, 1);
            dnb.cba(0, 0, 128, 128, 0xff00ff);
            dnb.ccb(0, 0, efl);
            int i1 = ((j) (dnb)).bmj[efl];
            String s2 = e.ajl[l];
            if(s2 != null && s2.length() > 0)
            {
                byte abyte3[] = t.fng((new StringBuilder()).append(s2).append(".dat").toString(), 0, abyte0);
                dnb.cbj(efl, abyte3, abyte1, 1);
                dnb.ccb(0, 0, efl);
            }
            dnb.cca(efm + l, 0, 0, i1, i1);
            int j1 = i1 * i1;
            for(int k1 = 0; k1 < j1; k1++)
                if(((j) (dnb)).bmc[efm + l][k1] == 65280)
                    ((j) (dnb)).bmc[efm + l][k1] = 0xff00ff;

            dnb.cbl(efm + l);
            ejg.bjf(l, ((j) (dnb)).bmd[efm + l], ((j) (dnb)).bme[efm + l], i1 / 64 - 1);
        }

    }

    private final void fcj()
    {
        dnb.bnc = false;
        dnb.cak();
        dgk.ged();
        int l = 140;
        int i1 = 50;
        l += 116;
        i1 -= 25;
        dnb.ccf(l - 32 - 55, i1, 64, 102, e.all[ddd], eid[ddg]);
        dnb.cdd(l - 32 - 55, i1, 64, 102, e.all[ddc], eid[ddf], dki[ddh], 0, false);
        dnb.cdd(l - 32 - 55, i1, 64, 102, e.all[ddb], eii[dde], dki[ddh], 0, false);
        dnb.ccf(l - 32, i1, 64, 102, e.all[ddd] + 6, eid[ddg]);
        dnb.cdd(l - 32, i1, 64, 102, e.all[ddc] + 6, eid[ddf], dki[ddh], 0, false);
        dnb.cdd(l - 32, i1, 64, 102, e.all[ddb] + 6, eii[dde], dki[ddh], 0, false);
        dnb.ccf((l - 32) + 55, i1, 64, 102, e.all[ddd] + 12, eid[ddg]);
        dnb.cdd((l - 32) + 55, i1, 64, 102, e.all[ddc] + 12, eid[ddf], dki[ddh], 0, false);
        dnb.cdd((l - 32) + 55, i1, 64, 102, e.all[ddb] + 12, eii[dde], dki[ddh], 0, false);
        dnb.ccb(0, dci, efh + 22);
        dnb.caj(ebf, 0, 0);
    }

    private final void fck()
    {
        if(dil >= 0 || edi >= 0)
        {
            dem[ejf] = "Cancel";
            ejm[ejf] = "";
            dga[ejf] = 4000;
            ejf++;
        }
        for(int l = 0; l < ejf; l++)
            dec[l] = l;

        boolean flag = false;
        while(!flag) 
        {
            flag = true;
            int j1 = 0;
            while(j1 < ejf - 1) 
            {
                int l1 = dec[j1];
                int j2 = dec[j1 + 1];
                if(dga[l1] > dga[j2])
                {
                    dec[j1] = j2;
                    dec[j1 + 1] = l1;
                    flag = false;
                }
                j1++;
            }
        }
        if(ejf > 20)
            ejf = 20;
        if(ejf > 0)
        {
            int i1 = -1;
            int k1 = 0;
            do
            {
                if(k1 >= ejf)
                    break;
                if(ejm[dec[k1]] != null && ejm[dec[k1]].length() > 0)
                {
                    i1 = k1;
                    break;
                }
                k1++;
            } while(true);
            String s1 = null;
            if((edi >= 0 || dil >= 0) && ejf == 1)
                s1 = "Choose a target";
            else
            if((edi >= 0 || dil >= 0) && ejf > 1)
                s1 = (new StringBuilder()).append("@whi@").append(dem[dec[0]]).append(" ").append(ejm[dec[0]]).toString();
            else
            if(i1 != -1)
                s1 = (new StringBuilder()).append(ejm[dec[i1]]).append(": @whi@").append(dem[dec[0]]).toString();
            if(ejf == 2 && s1 != null)
                s1 = (new StringBuilder()).append(s1).append("@whi@ / 1 more option").toString();
            if(ejf > 2 && s1 != null)
                s1 = (new StringBuilder()).append(s1).append("@whi@ / ").append(ejf - 1).append(" more options").toString();
            if(s1 != null)
                dnb.cdn(s1, 6, 14, 1, 0xffff00);
            if(!eef && dnl == 1 || eef && dnl == 1 && ejf == 1)
            {
                emg(dec[0]);
                dnl = 0;
                return;
            }
            if(!eef && dnl == 2 || eef && dnl == 1)
            {
                eje = (ejf + 1) * 15;
                ejd = dnb.cef("Choose option", 1) + 5;
                for(int i2 = 0; i2 < ejf; i2++)
                {
                    int k2 = dnb.cef((new StringBuilder()).append(dem[i2]).append(" ").append(ejm[i2]).toString(), 1) + 5;
                    if(k2 > ejd)
                        ejd = k2;
                }

                ejb = super.fke - ejd / 2;
                ejc = super.fkf - 7;
                dkk = true;
                if(ejb < 0)
                    ejb = 0;
                if(ejc < 0)
                    ejc = 0;
                if(ejb + ejd > 510)
                    ejb = 510 - ejd;
                if(ejc + eje > 315)
                    ejc = 315 - eje;
                dnl = 0;
            }
        }
    }

    private final void fcl()
    {
        if(dgb != 0)
        {
            dnb.cbf();
            dnb.cdl("Oh dear! You are dead...", dch / 2, dci / 2, 7, 0xff0000);
            fcc();
            dnb.caj(ebf, 0, 0);
            return;
        }
        if(eln)
        {
            fcj();
            return;
        }
        if(den)
        {
            dnb.cbf();
            if(Math.random() < 0.14999999999999999D)
                dnb.cdl("ZZZ", (int)(Math.random() * 80D), (int)(Math.random() * 334D), 5, (int)(Math.random() * 16777215D));
            if(Math.random() < 0.14999999999999999D)
                dnb.cdl("ZZZ", 512 - (int)(Math.random() * 80D), (int)(Math.random() * 334D), 5, (int)(Math.random() * 16777215D));
            dnb.cba(dch / 2 - 100, 160, 200, 40, 0);
            dnb.cdl("You are sleeping", dch / 2, 50, 7, 0xffff00);
            dnb.cdl((new StringBuilder()).append("Fatigue: ").append((dhk * 100) / 750).append("%").toString(), dch / 2, 90, 7, 0xffff00);
            dnb.cdl("When you want to wake up just use your", dch / 2, 140, 5, 0xffffff);
            dnb.cdl("keyboard to type the word in the box below", dch / 2, 160, 5, 0xffffff);
            dnb.cdl((new StringBuilder()).append(super.fkl).append("*").toString(), dch / 2, 180, 5, 65535);
            if(del == null)
                dnb.ccb(dch / 2 - 127, 230, efl + 1);
            else
                dnb.cdl(del, dch / 2, 260, 5, 0xff0000);
            dnb.cbb(dch / 2 - 128, 229, 257, 42, 0xffffff);
            fcc();
            dnb.cdl("If you can't read the word", dch / 2, 290, 1, 0xffffff);
            dnb.cdl("@yel@click here@whi@ to get a different one", dch / 2, 305, 1, 0xffffff);
            dnb.caj(ebf, 0, 0);
            return;
        }
        if(!dnh.gii)
            return;
        for(int l = 0; l < 64; l++)
        {
            ejg.bgn(dnh.gih[eal][l]);
            if(eal == 0)
            {
                ejg.bgn(dnh.gim[1][l]);
                ejg.bgn(dnh.gih[1][l]);
                ejg.bgn(dnh.gim[2][l]);
                ejg.bgn(dnh.gih[2][l]);
            }
            ebg = true;
            if(eal != 0 || (dnh.gij[djc.gmh / 128][djc.gmi / 128] & 0x80) != 0)
                continue;
            ejg.bgm(dnh.gih[eal][l]);
            if(eal == 0)
            {
                ejg.bgm(dnh.gim[1][l]);
                ejg.bgm(dnh.gih[1][l]);
                ejg.bgm(dnh.gim[2][l]);
                ejg.bgm(dnh.gih[2][l]);
            }
            ebg = false;
        }

        if(dfa != ehi)
        {
            ehi = dfa;
            for(int i1 = 0; i1 < efd; i1++)
            {
                if(ela[i1] == 97)
                    emj(i1, (new StringBuilder()).append("firea").append(dfa + 1).toString());
                if(ela[i1] == 274)
                    emj(i1, (new StringBuilder()).append("fireplacea").append(dfa + 1).toString());
                if(ela[i1] == 1031)
                    emj(i1, (new StringBuilder()).append("lightning").append(dfa + 1).toString());
                if(ela[i1] == 1036)
                    emj(i1, (new StringBuilder()).append("firespell").append(dfa + 1).toString());
                if(ela[i1] == 1147)
                    emj(i1, (new StringBuilder()).append("spellcharge").append(dfa + 1).toString());
            }

        }
        if(dfb != ehj)
        {
            ehj = dfb;
            for(int j1 = 0; j1 < efd; j1++)
            {
                if(ela[j1] == 51)
                    emj(j1, (new StringBuilder()).append("torcha").append(dfb + 1).toString());
                if(ela[j1] == 143)
                    emj(j1, (new StringBuilder()).append("skulltorcha").append(dfb + 1).toString());
            }

        }
        if(dfc != ehk)
        {
            ehk = dfc;
            for(int k1 = 0; k1 < efd; k1++)
                if(ela[k1] == 1142)
                    emj(k1, (new StringBuilder()).append("clawspell").append(dfc + 1).toString());

        }
        ejg.bhc(dha);
        dha = 0;
        for(int l1 = 0; l1 < dgm; l1++)
        {
            f f1 = deh[l1];
            if(f1.hab == 255)
                continue;
            int k6 = f1.gmh;
            int k7 = f1.gmi;
            int k8 = -dnh.gjf(k6, k7);
            int j9 = ejg.bhd(5000 + l1, k6, k8, k7, 145, 220, l1 + 10000);
            dha++;
            if(f1 == djc)
                ejg.bhe(j9);
            if(f1.gml == 8)
                ejg.bhf(j9, -30);
            if(f1.gml == 9)
                ejg.bhf(j9, 30);
        }

        for(int i2 = 0; i2 < dgm; i2++)
        {
            f f2 = deh[i2];
            if(f2.hag <= 0)
                continue;
            f f4 = null;
            if(f2.haf != -1)
                f4 = ele[f2.haf];
            else
            if(f2.hae != -1)
                f4 = dhb[f2.hae];
            if(f4 != null)
            {
                int l7 = f2.gmh;
                int l8 = f2.gmi;
                int k9 = -dnh.gjf(l7, l8) - 110;
                int i10 = f4.gmh;
                int j10 = f4.gmi;
                int k10 = -dnh.gjf(i10, j10) - e.aia[f4.gmj] / 2;
                int l10 = (l7 * f2.hag + i10 * (eic - f2.hag)) / eic;
                int i11 = (k9 * f2.hag + k10 * (eic - f2.hag)) / eic;
                int j11 = (l8 * f2.hag + j10 * (eic - f2.hag)) / eic;
                ejg.bhd(efk + f2.had, l10, i11, j11, 32, 32, 0);
                dha++;
            }
        }

        for(int j2 = 0; j2 < ebb; j2++)
        {
            f f3 = dgf[j2];
            int l6 = f3.gmh;
            int i8 = f3.gmi;
            int i9 = -dnh.gjf(l6, i8);
            int l9 = ejg.bhd(20000 + j2, l6, i9, i8, e.ahn[f3.gmj], e.aia[f3.gmj], j2 + 30000);
            dha++;
            if(f3.gml == 8)
                ejg.bhf(l9, -30);
            if(f3.gml == 9)
                ejg.bhf(l9, 30);
        }

        for(int k2 = 0; k2 < dhd; k2++)
        {
            int l4 = dml[k2] * ehd + 64;
            int i7 = dmm[k2] * ehd + 64;
            ejg.bhd(40000 + dmn[k2], l4, -dnh.gjf(l4, i7) - dna[k2], i7, 96, 64, k2 + 20000);
            dha++;
        }

        for(int l2 = 0; l2 < eig; l2++)
        {
            int i5 = ell[l2] * ehd + 64;
            int j7 = elh[l2] * ehd + 64;
            int j8 = ehg[l2];
            if(j8 == 0)
            {
                ejg.bhd(50000 + l2, i5, -dnh.gjf(i5, j7), j7, 128, 256, l2 + 50000);
                dha++;
            }
            if(j8 == 1)
            {
                ejg.bhd(50000 + l2, i5, -dnh.gjf(i5, j7), j7, 128, 64, l2 + 50000);
                dha++;
            }
        }

        dnb.bnc = false;
        dnb.cak();
        dnb.bnc = super.fkk;
        if(eal == 3)
        {
            int i3 = 40 + (int)(Math.random() * 3D);
            int j5 = 40 + (int)(Math.random() * 7D);
            ejg.bjl(i3, j5, -50, -10, -50);
        }
        dib = 0;
        egg = 0;
        ejl = 0;
        if(dim)
        {
            if(dka && !ebg)
            {
                int j3 = eli;
                fal();
                if(eli != j3)
                {
                    dgc = djc.gmh;
                    dgd = djc.gmi;
                }
            }
            ejg.bbg = 3000;
            ejg.bbh = 3000;
            ejg.bbi = 1;
            ejg.bbj = 2800;
            dkg = eli * 32;
            int k3 = dgc + egl;
            int k5 = dgd + dhl;
            ejg.bin(k3, -dnh.gjf(k3, k5), k5, 912, dkg * 4, 0, 2000);
        } else
        {
            if(dka && !ebg)
                fal();
            if(!super.fkk)
            {
                ejg.bbg = 2400;
                ejg.bbh = 2400;
                ejg.bbi = 1;
                ejg.bbj = 2300;
            } else
            {
                ejg.bbg = 2200;
                ejg.bbh = 2200;
                ejg.bbi = 1;
                ejg.bbj = 2100;
            }
            int l3 = dgc + egl;
            int l5 = dgd + dhl;
            ejg.bin(l3, -dnh.gjf(l3, l5), l5, xrot, dkg * 4, 0, eac * 2);
        }
        ejg.bib();
        fde();
        if(emb > 0)
            dnb.ccb(emc - 8, emd - 8, efh + 14 + (24 - emb) / 6);
        if(emb < 0)
            dnb.ccb(emc - 8, emd - 8, efh + 18 + (24 + emb) / 6);
        if(deg != 0)
        {
            int i4 = deg / 50;
            int i6 = i4 / 60;
            i4 %= 60;
            if(i4 < 10)
                dnb.cdl((new StringBuilder()).append("System update in: ").append(i6).append(":0").append(i4).toString(), 256, dci - 7, 1, 0xffff00);
            else
                dnb.cdl((new StringBuilder()).append("System update in: ").append(i6).append(":").append(i4).toString(), 256, dci - 7, 1, 0xffff00);
        }
        if(statmenu)
        {
            dnb.cdl("@whi@TRune", 45, 100, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@User: @whi@").append(ekc).toString(), 55, 115, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@World: @whi@").append(sName).toString(), 50, 130, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@Atk: @whi@").append(dfk[0]).toString(), 45, 145, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@Def: @whi@").append(dfk[1]).toString(), 45, 160, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@Str: @whi@").append(dfk[2]).toString(), 45, 175, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@HP: @whi@").append(dfk[3]).toString(), 45, 190, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@Pray: @whi@").append(dfk[5]).toString(), 45, 205, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@Lobs: @gre@").append(fac(373)).toString(), 45, 220, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@PK Food: ").append(foodName).toString(), 60, 235, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@Pk Pray: ").append(prayername).toString(), 60, 250, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@AutoEat: ").append(hpnum).toString(), 60, 265, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@Coords: (").append(getX()).append(", ").append(getY()).append(")").toString(), 60, 280, 1, 0);
            dnb.cdl((new StringBuilder()).append("@whi@Mouse: (").append(super.mousex).append(", ").append(super.mousey).append(")").toString(), 60, 295, 1, 0);
        }
        int j4 = 2203 - (dje + eaj + dnj);
        if(djd + eai + dni >= 2640)
            j4 = -50;
        if(j4 > 0)
        {
            int j6 = 1 + j4 / 6;
            dnb.ccb(453, dci - 56, efh + 13);
            dnb.cdl("Wilderness", 465, dci - 20, 1, 0xffff00);
            dnb.cdl((new StringBuilder()).append("Level: ").append(j6).toString(), 465, dci - 7, 1, 0xffff00);
            if(dme == 0)
                dme = 2;
        }
        if(dme == 0 && j4 > -10 && j4 <= 0)
            dme = 1;
        if(dea == 0)
        {
            for(int k4 = 0; k4 < 5; k4++)
                if(eib[k4] > 0)
                {
                    String s1 = die[k4];
                    dnb.cdn(s1, 7, dci - 18 - k4 * 12, 1, 0xffff00);
                }

        }
        ddj.ggf(ddk);
        ddj.ggf(ddm);
        ddj.ggf(ddn);
        if(dea == 1)
            ddj.gge(ddk);
        else
        if(dea == 2)
            ddj.gge(ddm);
        else
        if(dea == 3)
            ddj.gge(ddn);
        h.gdm = 2;
        ddj.ged();
        h.gdm = 0;
        dnb.ccd(((j) (dnb)).blg - 3 - 197, 3, efh, 128);
        fcn();
        dnb.bnf = false;
        fcc();
        dnb.caj(ebf, 0, 0);
    }

    private final void fcm()
    {
        if(super.fkm.length() > 0)
        {
            String s1 = super.fkm.trim();
            super.fkl = "";
            super.fkm = "";
            if(s1.length() > 0)
            {
                long l1 = t.fnc(s1);
                super.aag.hcn(215);
                super.aag.hdd(l1);
                super.aag.hdb(elc);
                super.aag.hdb(dia ? 1 : 0);
                super.aag.hdl();
            }
            dmh = 0;
            return;
        }
        dnb.cba(56, 130, 400, 100, 0);
        dnb.cbb(56, 130, 400, 100, 0xffffff);
        int l = 160;
        dnb.cdl("Now type the name of the offending player, and press enter", 256, l, 1, 0xffff00);
        l += 18;
        dnb.cdl((new StringBuilder()).append("Name: ").append(super.fkl).append("*").toString(), 256, l, 4, 0xffffff);
        if(super.abj > 0)
        {
            l = 207;
            if(dia)
                dnb.cdl("Moderator option: Mute player for 48 hours: <ON>", 256, l, 1, 0xff8000);
            else
                dnb.cdl("Moderator option: Mute player for 48 hours: <OFF>", 256, l, 1, 0xffffff);
            if(super.fke > 106 && super.fke < 406 && super.fkf > l - 13 && super.fkf < l + 2 && dnl == 1)
            {
                dnl = 0;
                dia = !dia;
            }
        }
        l = 222;
        int i1 = 0xffffff;
        if(super.fke > 196 && super.fke < 316 && super.fkf > l - 13 && super.fkf < l + 2)
        {
            i1 = 0xffff00;
            if(dnl == 1)
            {
                dnl = 0;
                dmh = 0;
            }
        }
        dnb.cdl("Click here to cancel", 256, l, 1, i1);
        if(dnl == 1 && (super.fke < 56 || super.fke > 456 || super.fkf < 130 || super.fkf > 230))
        {
            dnl = 0;
            dmh = 0;
        }
    }

    private final void fcn()
    {
        if(ehb != 0)
            fam();
        else
        if(ecc)
            fdl();
        else
        if(dmb && ebd == 0)
            fdf();
        else
        if(dmk && ebd == 0)
            fch();
        else
        if(edl)
            fbg();
        else
        if(dge)
            fak();
        else
        if(ecl)
            emm();
        else
        if(eld)
            fdb();
        else
        if(dmh == 1)
            emh();
        else
        if(dmh == 2)
            fcm();
        else
        if(eie != 0)
        {
            fed();
        } else
        {
            if(dck)
                fbf();
            if(djc.gml == 8 || djc.gml == 9)
                faj();
            feg();
            boolean flag = !dck && !dkk;
            if(flag)
                ejf = 0;
            if(egf == 0 && flag)
                fcg();
            if(egf == 1)
                enc(flag);
            if(egf == 2)
                enf(flag);
            if(egf == 3)
                fec(flag);
            if(egf == 4)
                fca(flag);
            if(egf == 5)
                fbn(flag);
            if(egf == 6)
                fag(flag);
            if(!dkk && !dck)
                fck();
            if(dkk && !dck)
                fef();
        }
        dnl = 0;
    }

    private final void fda()
    {
        e.anj("torcha2");
        e.anj("torcha3");
        e.anj("torcha4");
        e.anj("skulltorcha2");
        e.anj("skulltorcha3");
        e.anj("skulltorcha4");
        e.anj("firea2");
        e.anj("firea3");
        e.anj("fireplacea2");
        e.anj("fireplacea3");
        e.anj("firespell2");
        e.anj("firespell3");
        e.anj("lightning2");
        e.anj("lightning3");
        e.anj("clawspell2");
        e.anj("clawspell3");
        e.anj("clawspell4");
        e.anj("clawspell5");
        e.anj("spellcharge2");
        e.anj("spellcharge3");
        if(fld())
        {
            byte abyte0[] = fcb((new StringBuilder()).append("models").append(w.cfc).append(".jag").toString(), "3d models", 60);
            if(abyte0 == null)
            {
                ebh = true;
                return;
            }
            for(int i1 = 0; i1 < e.ama; i1++)
            {
                int j1 = t.fne((new StringBuilder()).append(e.ajj[i1]).append(".ob3").toString(), abyte0);
                if(j1 != 0)
                    edb[i1] = new i(abyte0, j1, true);
                else
                    edb[i1] = new i(1, 1);
                if(e.ajj[i1].equals("giantcrystal"))
                    edb[i1].chj = true;
            }

            return;
        }
        flj(70, "Loading 3d models");
        for(int l = 0; l < e.ama; l++)
        {
            edb[l] = new i((new StringBuilder()).append("../gamedata/models/").append(e.ajj[l]).append(".ob2").toString());
            if(e.ajj[l].equals("giantcrystal"))
                edb[l].chj = true;
        }

    }

    private final void fdb()
    {
        if(dnl != 0 && ekb == 0)
            ekb = 1;
        if(ekb > 0)
        {
            int l = super.fke - 22;
            int i1 = super.fkf - 36;
            if(l >= 0 && i1 >= 0 && l < 468 && i1 < 262)
            {
                if(l > 216 && i1 > 30 && l < 462 && i1 < 235)
                {
                    int j1 = (l - 217) / 49 + ((i1 - 31) / 34) * 5;
                    if(j1 >= 0 && j1 < ede)
                    {
                        boolean flag1 = false;
                        int k2 = 0;
                        int i5 = edf[j1];
label0:
                        for(int j6 = 0; j6 < ded; j6++)
                        {
                            if(dee[j6] != i5)
                                continue;
                            if(e.aig[i5] == 0)
                            {
                                int k7 = 0;
                                do
                                {
                                    if(k7 >= ekb)
                                        continue label0;
                                    if(def[j6] < edg[j1])
                                        def[j6]++;
                                    flag1 = true;
                                    k7++;
                                } while(true);
                            }
                            k2++;
                        }

                        if(fac(i5) <= k2)
                            flag1 = true;
                        if(e.aik[i5] == 1)
                        {
                            fdj("This object cannot be added to a duel offer", 3);
                            flag1 = true;
                        }
                        if(!flag1 && ded < 8)
                        {
                            dee[ded] = i5;
                            def[ded] = 1;
                            ded++;
                            flag1 = true;
                        }
                        if(flag1)
                        {
                            super.aag.hcn(229);
                            super.aag.hdb(ded);
                            for(int k6 = 0; k6 < ded; k6++)
                            {
                                super.aag.hdj(dee[k6]);
                                super.aag.hdh(def[k6]);
                            }

                            super.aag.hdl();
                            dhe = false;
                            dhf = false;
                        }
                    }
                }
                if(l > 8 && i1 > 30 && l < 205 && i1 < 129)
                {
                    int k1 = (l - 9) / 49 + ((i1 - 31) / 34) * 4;
                    if(k1 >= 0 && k1 < ded)
                    {
                        int i2 = dee[k1];
                        int l2 = 0;
                        do
                        {
                            if(l2 >= ekb)
                                break;
                            if(e.aig[i2] == 0 && def[k1] > 1)
                            {
                                def[k1]--;
                            } else
                            {
                                ded--;
                                eka = 0;
                                for(int j5 = k1; j5 < ded; j5++)
                                {
                                    dee[j5] = dee[j5 + 1];
                                    def[j5] = def[j5 + 1];
                                }

                                break;
                            }
                            l2++;
                        } while(true);
                        super.aag.hcn(229);
                        super.aag.hdb(ded);
                        for(int i3 = 0; i3 < ded; i3++)
                        {
                            super.aag.hdj(dee[i3]);
                            super.aag.hdh(def[i3]);
                        }

                        super.aag.hdl();
                        dhe = false;
                        dhf = false;
                    }
                }
                boolean flag = false;
                if(l >= 93 && i1 >= 221 && l <= 104 && i1 <= 232)
                {
                    dgg = !dgg;
                    flag = true;
                }
                if(l >= 93 && i1 >= 240 && l <= 104 && i1 <= 251)
                {
                    dgh = !dgh;
                    flag = true;
                }
                if(l >= 191 && i1 >= 221 && l <= 202 && i1 <= 232)
                {
                    dgi = !dgi;
                    flag = true;
                }
                if(l >= 191 && i1 >= 240 && l <= 202 && i1 <= 251)
                {
                    dgj = !dgj;
                    flag = true;
                }
                if(flag)
                {
                    super.aag.hcn(138);
                    super.aag.hdb(dgg ? 1 : 0);
                    super.aag.hdb(dgh ? 1 : 0);
                    super.aag.hdb(dgi ? 1 : 0);
                    super.aag.hdb(dgj ? 1 : 0);
                    super.aag.hdl();
                    dhe = false;
                    dhf = false;
                }
                if(l >= 217 && i1 >= 238 && l <= 286 && i1 <= 259)
                {
                    dhf = true;
                    super.aag.hcn(125);
                    super.aag.hdl();
                }
                if(l >= 394 && i1 >= 238 && l < 463 && i1 < 259)
                {
                    eld = false;
                    super.aag.hcn(43);
                    super.aag.hdl();
                }
            } else
            if(dnl != 0)
            {
                eld = false;
                super.aag.hcn(43);
                super.aag.hdl();
            }
            dnl = 0;
            ekb = 0;
        }
        if(!eld)
            return;
        byte byte0 = 22;
        byte byte1 = 36;
        dnb.cba(byte0, byte1, 468, 12, 0xc90b1d);
        int l1 = 0x989898;
        dnb.cam(byte0, byte1 + 12, 468, 18, l1, 160);
        dnb.cam(byte0, byte1 + 30, 8, 248, l1, 160);
        dnb.cam(byte0 + 205, byte1 + 30, 11, 248, l1, 160);
        dnb.cam(byte0 + 462, byte1 + 30, 6, 248, l1, 160);
        dnb.cam(byte0 + 8, byte1 + 99, 197, 24, l1, 160);
        dnb.cam(byte0 + 8, byte1 + 192, 197, 23, l1, 160);
        dnb.cam(byte0 + 8, byte1 + 258, 197, 20, l1, 160);
        dnb.cam(byte0 + 216, byte1 + 235, 246, 43, l1, 160);
        int j2 = 0xd0d0d0;
        dnb.cam(byte0 + 8, byte1 + 30, 197, 69, j2, 160);
        dnb.cam(byte0 + 8, byte1 + 123, 197, 69, j2, 160);
        dnb.cam(byte0 + 8, byte1 + 215, 197, 43, j2, 160);
        dnb.cam(byte0 + 216, byte1 + 30, 246, 205, j2, 160);
        for(int j3 = 0; j3 < 3; j3++)
            dnb.cbc(byte0 + 8, byte1 + 30 + j3 * 34, 197, 0);

        for(int k3 = 0; k3 < 3; k3++)
            dnb.cbc(byte0 + 8, byte1 + 123 + k3 * 34, 197, 0);

        for(int l3 = 0; l3 < 7; l3++)
            dnb.cbc(byte0 + 216, byte1 + 30 + l3 * 34, 246, 0);

        for(int i4 = 0; i4 < 6; i4++)
        {
            if(i4 < 5)
                dnb.cbd(byte0 + 8 + i4 * 49, byte1 + 30, 69, 0);
            if(i4 < 5)
                dnb.cbd(byte0 + 8 + i4 * 49, byte1 + 123, 69, 0);
            dnb.cbd(byte0 + 216 + i4 * 49, byte1 + 30, 205, 0);
        }

        dnb.cbc(byte0 + 8, byte1 + 215, 197, 0);
        dnb.cbc(byte0 + 8, byte1 + 257, 197, 0);
        dnb.cbd(byte0 + 8, byte1 + 215, 43, 0);
        dnb.cbd(byte0 + 204, byte1 + 215, 43, 0);
        dnb.cdn((new StringBuilder()).append("Preparing to duel with: ").append(eke).toString(), byte0 + 1, byte1 + 10, 1, 0xffffff);
        dnb.cdn("Your Stake", byte0 + 9, byte1 + 27, 4, 0xffffff);
        dnb.cdn("Opponent's Stake", byte0 + 9, byte1 + 120, 4, 0xffffff);
        dnb.cdn("Duel Options", byte0 + 9, byte1 + 212, 4, 0xffffff);
        dnb.cdn("Your Inventory", byte0 + 216, byte1 + 27, 4, 0xffffff);
        dnb.cdn("No retreating", byte0 + 8 + 1, byte1 + 215 + 16, 3, 0xffff00);
        dnb.cdn("No magic", byte0 + 8 + 1, byte1 + 215 + 35, 3, 0xffff00);
        dnb.cdn("No prayer", byte0 + 8 + 102, byte1 + 215 + 16, 3, 0xffff00);
        dnb.cdn("No weapons", byte0 + 8 + 102, byte1 + 215 + 35, 3, 0xffff00);
        dnb.cbb(byte0 + 93, byte1 + 215 + 6, 11, 11, 0xffff00);
        if(dgg)
            dnb.cba(byte0 + 95, byte1 + 215 + 8, 7, 7, 0xffff00);
        dnb.cbb(byte0 + 93, byte1 + 215 + 25, 11, 11, 0xffff00);
        if(dgh)
            dnb.cba(byte0 + 95, byte1 + 215 + 27, 7, 7, 0xffff00);
        dnb.cbb(byte0 + 191, byte1 + 215 + 6, 11, 11, 0xffff00);
        if(dgi)
            dnb.cba(byte0 + 193, byte1 + 215 + 8, 7, 7, 0xffff00);
        dnb.cbb(byte0 + 191, byte1 + 215 + 25, 11, 11, 0xffff00);
        if(dgj)
            dnb.cba(byte0 + 193, byte1 + 215 + 27, 7, 7, 0xffff00);
        if(!dhf)
            dnb.ccb(byte0 + 217, byte1 + 238, efh + 25);
        dnb.ccb(byte0 + 394, byte1 + 238, efh + 26);
        if(dhe)
        {
            dnb.cdl("Other player", byte0 + 341, byte1 + 246, 1, 0xffffff);
            dnb.cdl("has accepted", byte0 + 341, byte1 + 256, 1, 0xffffff);
        }
        if(dhf)
        {
            dnb.cdl("Waiting for", byte0 + 217 + 35, byte1 + 246, 1, 0xffffff);
            dnb.cdl("other player", byte0 + 217 + 35, byte1 + 256, 1, 0xffffff);
        }
        for(int j4 = 0; j4 < ede; j4++)
        {
            int k5 = 217 + byte0 + (j4 % 5) * 49;
            int l6 = 31 + byte1 + (j4 / 5) * 34;
            dnb.cdd(k5, l6, 48, 32, efj + e.aie[edf[j4]], e.aij[edf[j4]], 0, 0, false);
            if(e.aig[edf[j4]] == 0)
                dnb.cdn(String.valueOf(edg[j4]), k5 + 1, l6 + 10, 1, 0xffff00);
        }

        for(int k4 = 0; k4 < ded; k4++)
        {
            int l5 = 9 + byte0 + (k4 % 4) * 49;
            int i7 = 31 + byte1 + (k4 / 4) * 34;
            dnb.cdd(l5, i7, 48, 32, efj + e.aie[dee[k4]], e.aij[dee[k4]], 0, 0, false);
            if(e.aig[dee[k4]] == 0)
                dnb.cdn(String.valueOf(def[k4]), l5 + 1, i7 + 10, 1, 0xffff00);
            if(super.fke > l5 && super.fke < l5 + 48 && super.fkf > i7 && super.fkf < i7 + 32)
                dnb.cdn((new StringBuilder()).append(e.aib[dee[k4]]).append(": @whi@").append(e.aic[dee[k4]]).toString(), byte0 + 8, byte1 + 273, 1, 0xffff00);
        }

        for(int l4 = 0; l4 < dkl; l4++)
        {
            int i6 = 9 + byte0 + (l4 % 4) * 49;
            int j7 = 124 + byte1 + (l4 / 4) * 34;
            dnb.cdd(i6, j7, 48, 32, efj + e.aie[dkm[l4]], e.aij[dkm[l4]], 0, 0, false);
            if(e.aig[dkm[l4]] == 0)
                dnb.cdn(String.valueOf(dkn[l4]), i6 + 1, j7 + 10, 1, 0xffff00);
            if(super.fke > i6 && super.fke < i6 + 48 && super.fkf > j7 && super.fkf < j7 + 32)
                dnb.cdn((new StringBuilder()).append(e.aib[dkm[l4]]).append(": @whi@").append(e.aic[dkm[l4]]).toString(), byte0 + 8, byte1 + 273, 1, 0xffff00);
        }

    }

    final void fdd(int l, int i1, int j1, int k1, int l1, int i2, int j2)
    {
        f f1 = dgf[l1];
        int k2 = f1.gml + (dkg + 16) / 32 & 7;
        boolean flag = false;
        int l2 = k2;
        if(l2 == 5)
        {
            l2 = 3;
            flag = true;
        } else
        if(l2 == 6)
        {
            l2 = 2;
            flag = true;
        } else
        if(l2 == 7)
        {
            l2 = 1;
            flag = true;
        }
        int i3 = l2 * 3 + dhn[(f1.gmk / e.akl[f1.gmj]) % 4];
        if(f1.gml == 8)
        {
            l2 = 5;
            k2 = 2;
            flag = false;
            l -= (e.akn[f1.gmj] * j2) / 100;
            i3 = l2 * 3 + eme[(dng / (e.akm[f1.gmj] - 1)) % 8];
        } else
        if(f1.gml == 9)
        {
            l2 = 5;
            k2 = 2;
            flag = true;
            l += (e.akn[f1.gmj] * j2) / 100;
            i3 = l2 * 3 + eab[(dng / e.akm[f1.gmj]) % 8];
        }
        for(int j3 = 0; j3 < 12; j3++)
        {
            int i4 = dgl[k2][j3];
            int k4 = e.ala[f1.gmj][i4];
            if(k4 < 0)
                continue;
            int l4 = 0;
            int i5 = 0;
            int j5 = i3;
            if(flag && l2 >= 1 && l2 <= 3 && e.alk[k4] == 1)
                j5 += 15;
            if(l2 == 5 && e.alj[k4] != 1)
                continue;
            int k5 = j5 + e.all[k4];
            l4 = (l4 * j1) / ((j) (dnb)).bmj[k5];
            i5 = (i5 * k1) / ((j) (dnb)).bmk[k5];
            int l5 = (j1 * ((j) (dnb)).bmj[k5]) / ((j) (dnb)).bmj[e.all[k4]];
            l4 -= (l5 - j1) / 2;
            int i6 = e.alh[k4];
            int j6 = 0;
            if(i6 == 1)
            {
                i6 = e.ajc[f1.gmj];
                j6 = e.ajf[f1.gmj];
            } else
            if(i6 == 2)
            {
                i6 = e.ajd[f1.gmj];
                j6 = e.ajf[f1.gmj];
            } else
            if(i6 == 3)
            {
                i6 = e.aje[f1.gmj];
                j6 = e.ajf[f1.gmj];
            }
            dnb.cdd(l + l4, i1 + i5, l5, k1, k5, i6, j6, i2, flag);
        }

        if(f1.gnf > 0)
        {
            eaf[egg] = dnb.cef(f1.gne, 1) / 2;
            if(eaf[egg] > 150)
                eaf[egg] = 150;
            eag[egg] = (dnb.cef(f1.gne, 1) / 300) * dnb.ced(1);
            ead[egg] = l + j1 / 2;
            eae[egg] = i1;
            egh[egg++] = f1.gne;
        }
        if(f1.gml == 8 || f1.gml == 9 || f1.gnl != 0)
        {
            if(f1.gnl > 0)
            {
                int k3 = l;
                if(f1.gml == 8)
                    k3 -= (20 * j2) / 100;
                else
                if(f1.gml == 9)
                    k3 += (20 * j2) / 100;
                int j4 = (f1.gnj * 30) / f1.gnk;
                ekj[ejl] = k3 + j1 / 2;
                ekk[ejl] = i1;
                ekl[ejl++] = j4;
            }
            if(f1.gnl > 150)
            {
                int l3 = l;
                if(f1.gml == 8)
                    l3 -= (10 * j2) / 100;
                else
                if(f1.gml == 9)
                    l3 += (10 * j2) / 100;
                dnb.ccb((l3 + j1 / 2) - 12, (i1 + k1 / 2) - 12, efh + 12);
                dnb.cdl(String.valueOf(f1.gni), (l3 + j1 / 2) - 1, i1 + k1 / 2 + 5, 3, 0xffffff);
            }
        }
    }

    protected final void adg(String s1)
    {
        if(s1.startsWith("@bor@"))
        {
            fdj(s1, 4);
            return;
        }
        if(s1.startsWith("@que@"))
        {
            fdj((new StringBuilder()).append("@whi@").append(s1).toString(), 5);
            return;
        }
        if(s1.startsWith("@pri@"))
        {
            fdj(s1, 6);
            return;
        } else
        {
            fdj(s1, 3);
            return;
        }
    }

    private final void fde()
    {
        for(int l = 0; l < egg; l++)
        {
            int k1 = dnb.ced(1);
            int j2 = ead[l];
            int i3 = eae[l];
            int l3 = eaf[l];
            int j4 = eag[l];
            for(boolean flag = true; flag;)
            {
                flag = false;
                int i5 = 0;
                while(i5 < l) 
                {
                    if(i3 + j4 > eae[i5] - k1 && i3 - k1 < eae[i5] + eag[i5] && j2 - l3 < ead[i5] + eaf[i5] && j2 + l3 > ead[i5] - eaf[i5] && eae[i5] - k1 - j4 < i3)
                    {
                        i3 = eae[i5] - k1 - j4;
                        flag = true;
                    }
                    i5++;
                }
            }

            eae[l] = i3;
            dnb.cdm(egh[l], j2, i3, 1, 0xffff00, 300);
        }

        for(int i1 = 0; i1 < dib; i1++)
        {
            int l1 = ebk[i1];
            int k2 = ebl[i1];
            int j3 = dfi[i1];
            int i4 = dfj[i1];
            int k4 = (39 * j3) / 100;
            int l4 = (27 * j3) / 100;
            int j5 = k2 - l4;
            dnb.cce(l1 - k4 / 2, j5, k4, l4, efh + 9, 85);
            int k5 = (36 * j3) / 100;
            int l5 = (24 * j3) / 100;
            dnb.cdd(l1 - k5 / 2, (j5 + l4 / 2) - l5 / 2, k5, l5, e.aie[i4] + efj, e.aij[i4], 0, 0, false);
        }

        for(int j1 = 0; j1 < ejl; j1++)
        {
            int i2 = ekj[j1];
            int l2 = ekk[j1];
            int k3 = ekl[j1];
            dnb.cam(i2 - 15, l2 - 3, k3, 5, 65280, 192);
            dnb.cam((i2 - 15) + k3, l2 - 3, 30 - k3, 5, 0xff0000, 192);
        }

    }

    protected final void ade()
    {
        ehb = 0;
        fdj("@cya@Sorry, you can't logout at the moment", 3);
    }

    private final void fdf()
    {
        char c1 = '\u0198';
        char c2 = '\u014E';
        if(ekf > 0 && elm <= 48)
            ekf = 0;
        if(ekf > 1 && elm <= 96)
            ekf = 1;
        if(ekf > 2 && elm <= 144)
            ekf = 2;
        if(ecj >= elm || ecj < 0)
            ecj = -1;
        if(ecj != -1 && eam[ecj] != eck)
        {
            ecj = -1;
            eck = -2;
        }
        if(dnl != 0)
        {
            dnl = 0;
            int l = super.fke - (256 - c1 / 2);
            int j1 = super.fkf - (170 - c2 / 2);
            if(l >= 0 && j1 >= 12 && l < 408 && j1 < 280)
            {
                int l1 = ekf * 48;
                for(int j2 = 0; j2 < 6; j2++)
                {
                    for(int i3 = 0; i3 < 8; i3++)
                    {
                        int k4 = 7 + i3 * 49;
                        int i5 = 28 + j2 * 34;
                        if(l > k4 && l < k4 + 49 && j1 > i5 && j1 < i5 + 34 && l1 < elm && eam[l1] != -1)
                        {
                            eck = eam[l1];
                            ecj = l1;
                        }
                        l1++;
                    }

                }

                l = 256 - c1 / 2;
                j1 = 170 - c2 / 2;
                int k2;
                if(ecj < 0)
                    k2 = -1;
                else
                    k2 = eam[ecj];
                if(k2 != -1)
                {
                    int j3 = ean[ecj];
                    if(e.aig[k2] == 1 && j3 > 1)
                        j3 = 1;
                    if(j3 >= 1 && super.fke >= l + 220 && super.fkf >= j1 + 238 && super.fke < l + 250 && super.fkf <= j1 + 249)
                    {
                        super.aag.hcn(131);
                        super.aag.hdj(k2);
                        super.aag.hdj(1);
                        super.aag.hdl();
                    }
                    if(j3 >= 5 && super.fke >= l + 250 && super.fkf >= j1 + 238 && super.fke < l + 280 && super.fkf <= j1 + 249)
                    {
                        super.aag.hcn(131);
                        super.aag.hdj(k2);
                        super.aag.hdj(5);
                        super.aag.hdl();
                    }
                    if(j3 >= 25 && super.fke >= l + 280 && super.fkf >= j1 + 238 && super.fke < l + 305 && super.fkf <= j1 + 249)
                    {
                        super.aag.hcn(131);
                        super.aag.hdj(k2);
                        super.aag.hdj(25);
                        super.aag.hdl();
                    }
                    if(j3 >= 100 && super.fke >= l + 305 && super.fkf >= j1 + 238 && super.fke < l + 335 && super.fkf <= j1 + 249)
                    {
                        super.aag.hcn(131);
                        super.aag.hdj(k2);
                        super.aag.hdj(100);
                        super.aag.hdl();
                    }
                    if(j3 >= 500 && super.fke >= l + 335 && super.fkf >= j1 + 238 && super.fke < l + 368 && super.fkf <= j1 + 249)
                    {
                        super.aag.hcn(131);
                        super.aag.hdj(k2);
                        super.aag.hdj(500);
                        super.aag.hdl();
                    }
                    if(j3 >= 2500 && super.fke >= l + 370 && super.fkf >= j1 + 238 && super.fke < l + 400 && super.fkf <= j1 + 249)
                    {
                        super.aag.hcn(131);
                        super.aag.hdj(k2);
                        super.aag.hdj(2500);
                        super.aag.hdl();
                    }
                    if(fac(k2) >= 1 && super.fke >= l + 220 && super.fkf >= j1 + 263 && super.fke < l + 250 && super.fkf <= j1 + 274)
                    {
                        super.aag.hcn(190);
                        super.aag.hdj(k2);
                        super.aag.hdj(1);
                        super.aag.hdl();
                    }
                    if(fac(k2) >= 5 && super.fke >= l + 250 && super.fkf >= j1 + 263 && super.fke < l + 280 && super.fkf <= j1 + 274)
                    {
                        super.aag.hcn(190);
                        super.aag.hdj(k2);
                        super.aag.hdj(5);
                        super.aag.hdl();
                    }
                    if(fac(k2) >= 25 && super.fke >= l + 280 && super.fkf >= j1 + 263 && super.fke < l + 305 && super.fkf <= j1 + 274)
                    {
                        super.aag.hcn(190);
                        super.aag.hdj(k2);
                        super.aag.hdj(25);
                        super.aag.hdl();
                    }
                    if(fac(k2) >= 100 && super.fke >= l + 305 && super.fkf >= j1 + 263 && super.fke < l + 335 && super.fkf <= j1 + 274)
                    {
                        super.aag.hcn(190);
                        super.aag.hdj(k2);
                        super.aag.hdj(100);
                        super.aag.hdl();
                    }
                    if(fac(k2) >= 500 && super.fke >= l + 335 && super.fkf >= j1 + 263 && super.fke < l + 368 && super.fkf <= j1 + 274)
                    {
                        super.aag.hcn(190);
                        super.aag.hdj(k2);
                        super.aag.hdj(500);
                        super.aag.hdl();
                    }
                    if(fac(k2) >= 2500 && super.fke >= l + 370 && super.fkf >= j1 + 263 && super.fke < l + 400 && super.fkf <= j1 + 274)
                    {
                        super.aag.hcn(190);
                        super.aag.hdj(k2);
                        super.aag.hdj(2500);
                        super.aag.hdl();
                    }
                }
            } else
            if(elm > 48 && l >= 50 && l <= 115 && j1 <= 12)
                ekf = 0;
            else
            if(elm > 48 && l >= 115 && l <= 180 && j1 <= 12)
                ekf = 1;
            else
            if(elm > 96 && l >= 180 && l <= 245 && j1 <= 12)
                ekf = 2;
            else
            if(elm > 144 && l >= 245 && l <= 310 && j1 <= 12)
            {
                ekf = 3;
            } else
            {
                super.aag.hcn(78);
                super.aag.hdl();
                dmb = false;
                return;
            }
        }
        int i1 = 256 - c1 / 2;
        int k1 = 170 - c2 / 2;
        dnb.cba(i1, k1, 408, 12, 192);
        int i2 = 0x989898;
        dnb.cam(i1, k1 + 12, 408, 17, i2, 160);
        dnb.cam(i1, k1 + 29, 8, 204, i2, 160);
        dnb.cam(i1 + 399, k1 + 29, 9, 204, i2, 160);
        dnb.cam(i1, k1 + 233, 408, 47, i2, 160);
        dnb.cdn("Bank", i1 + 1, k1 + 10, 1, 0xffffff);
        int l2 = 50;
        if(elm > 48)
        {
            int k3 = 0xffffff;
            if(ekf == 0)
                k3 = 0xff0000;
            else
            if(super.fke > i1 + l2 && super.fkf >= k1 && super.fke < i1 + l2 + 65 && super.fkf < k1 + 12)
                k3 = 0xffff00;
            dnb.cdn("<page 1>", i1 + l2, k1 + 10, 1, k3);
            l2 += 65;
            k3 = 0xffffff;
            if(ekf == 1)
                k3 = 0xff0000;
            else
            if(super.fke > i1 + l2 && super.fkf >= k1 && super.fke < i1 + l2 + 65 && super.fkf < k1 + 12)
                k3 = 0xffff00;
            dnb.cdn("<page 2>", i1 + l2, k1 + 10, 1, k3);
            l2 += 65;
        }
        if(elm > 96)
        {
            int l3 = 0xffffff;
            if(ekf == 2)
                l3 = 0xff0000;
            else
            if(super.fke > i1 + l2 && super.fkf >= k1 && super.fke < i1 + l2 + 65 && super.fkf < k1 + 12)
                l3 = 0xffff00;
            dnb.cdn("<page 3>", i1 + l2, k1 + 10, 1, l3);
            l2 += 65;
        }
        if(elm > 144)
        {
            int i4 = 0xffffff;
            if(ekf == 3)
                i4 = 0xff0000;
            else
            if(super.fke > i1 + l2 && super.fkf >= k1 && super.fke < i1 + l2 + 65 && super.fkf < k1 + 12)
                i4 = 0xffff00;
            dnb.cdn("<page 4>", i1 + l2, k1 + 10, 1, i4);
            l2 += 65;
        }
        int j4 = 0xffffff;
        if(super.fke > i1 + 320 && super.fkf >= k1 && super.fke < i1 + 408 && super.fkf < k1 + 12)
            j4 = 0xff0000;
        dnb.cdk("Close window", i1 + 406, k1 + 10, 1, j4);
        dnb.cdn("Number in bank in green", i1 + 7, k1 + 24, 1, 65280);
        dnb.cdn("Number held in blue", i1 + 289, k1 + 24, 1, 65535);
        int l4 = 0xd0d0d0;
        int j5 = ekf * 48;
        for(int k5 = 0; k5 < 6; k5++)
        {
            for(int i6 = 0; i6 < 8; i6++)
            {
                int k6 = i1 + 7 + i6 * 49;
                int j7 = k1 + 28 + k5 * 34;
                if(ecj == j5)
                    dnb.cam(k6, j7, 49, 34, 0xff0000, 160);
                else
                    dnb.cam(k6, j7, 49, 34, l4, 160);
                dnb.cbb(k6, j7, 50, 35, 0);
                if(j5 < elm && eam[j5] != -1)
                {
                    dnb.cdd(k6, j7, 48, 32, efj + e.aie[eam[j5]], e.aij[eam[j5]], 0, 0, false);
                    dnb.cdn(String.valueOf(ean[j5]), k6 + 1, j7 + 10, 1, 65280);
                    dnb.cdk(String.valueOf(fac(eam[j5])), k6 + 47, j7 + 29, 1, 65535);
                }
                j5++;
            }

        }

        dnb.cbc(i1 + 5, k1 + 256, 398, 0);
        if(ecj == -1)
        {
            dnb.cdl("Select an object to withdraw or deposit", i1 + 204, k1 + 248, 3, 0xffff00);
            return;
        }
        int l5;
        if(ecj < 0)
            l5 = -1;
        else
            l5 = eam[ecj];
        if(l5 != -1)
        {
            int j6 = ean[ecj];
            if(e.aig[l5] == 1 && j6 > 1)
                j6 = 1;
            if(j6 > 0)
            {
                dnb.cdn((new StringBuilder()).append("Withdraw ").append(e.aib[l5]).toString(), i1 + 2, k1 + 248, 1, 0xffffff);
                int l6 = 0xffffff;
                if(super.fke >= i1 + 220 && super.fkf >= k1 + 238 && super.fke < i1 + 250 && super.fkf <= k1 + 249)
                    l6 = 0xff0000;
                dnb.cdn("One", i1 + 222, k1 + 248, 1, l6);
                if(j6 >= 5)
                {
                    int k7 = 0xffffff;
                    if(super.fke >= i1 + 250 && super.fkf >= k1 + 238 && super.fke < i1 + 280 && super.fkf <= k1 + 249)
                        k7 = 0xff0000;
                    dnb.cdn("Five", i1 + 252, k1 + 248, 1, k7);
                }
                if(j6 >= 25)
                {
                    int l7 = 0xffffff;
                    if(super.fke >= i1 + 280 && super.fkf >= k1 + 238 && super.fke < i1 + 305 && super.fkf <= k1 + 249)
                        l7 = 0xff0000;
                    dnb.cdn("25", i1 + 282, k1 + 248, 1, l7);
                }
                if(j6 >= 100)
                {
                    int i8 = 0xffffff;
                    if(super.fke >= i1 + 305 && super.fkf >= k1 + 238 && super.fke < i1 + 335 && super.fkf <= k1 + 249)
                        i8 = 0xff0000;
                    dnb.cdn("100", i1 + 307, k1 + 248, 1, i8);
                }
                if(j6 >= 500)
                {
                    int j8 = 0xffffff;
                    if(super.fke >= i1 + 335 && super.fkf >= k1 + 238 && super.fke < i1 + 368 && super.fkf <= k1 + 249)
                        j8 = 0xff0000;
                    dnb.cdn("500", i1 + 337, k1 + 248, 1, j8);
                }
                if(j6 >= 2500)
                {
                    int k8 = 0xffffff;
                    if(super.fke >= i1 + 370 && super.fkf >= k1 + 238 && super.fke < i1 + 400 && super.fkf <= k1 + 249)
                        k8 = 0xff0000;
                    dnb.cdn("2500", i1 + 370, k1 + 248, 1, k8);
                }
            }
            if(fac(l5) > 0)
            {
                dnb.cdn((new StringBuilder()).append("Deposit ").append(e.aib[l5]).toString(), i1 + 2, k1 + 273, 1, 0xffffff);
                int i7 = 0xffffff;
                if(super.fke >= i1 + 220 && super.fkf >= k1 + 263 && super.fke < i1 + 250 && super.fkf <= k1 + 274)
                    i7 = 0xff0000;
                dnb.cdn("One", i1 + 222, k1 + 273, 1, i7);
                if(fac(l5) >= 5)
                {
                    int l8 = 0xffffff;
                    if(super.fke >= i1 + 250 && super.fkf >= k1 + 263 && super.fke < i1 + 280 && super.fkf <= k1 + 274)
                        l8 = 0xff0000;
                    dnb.cdn("Five", i1 + 252, k1 + 273, 1, l8);
                }
                if(fac(l5) >= 25)
                {
                    int i9 = 0xffffff;
                    if(super.fke >= i1 + 280 && super.fkf >= k1 + 263 && super.fke < i1 + 305 && super.fkf <= k1 + 274)
                        i9 = 0xff0000;
                    dnb.cdn("25", i1 + 282, k1 + 273, 1, i9);
                }
                if(fac(l5) >= 100)
                {
                    int j9 = 0xffffff;
                    if(super.fke >= i1 + 305 && super.fkf >= k1 + 263 && super.fke < i1 + 335 && super.fkf <= k1 + 274)
                        j9 = 0xff0000;
                    dnb.cdn("100", i1 + 307, k1 + 273, 1, j9);
                }
                if(fac(l5) >= 500)
                {
                    int k9 = 0xffffff;
                    if(super.fke >= i1 + 335 && super.fkf >= k1 + 263 && super.fke < i1 + 368 && super.fkf <= k1 + 274)
                        k9 = 0xff0000;
                    dnb.cdn("500", i1 + 337, k1 + 273, 1, k9);
                }
                if(fac(l5) >= 2500)
                {
                    int l9 = 0xffffff;
                    if(super.fke >= i1 + 370 && super.fkf >= k1 + 263 && super.fke < i1 + 400 && super.fkf <= k1 + 274)
                        l9 = 0xff0000;
                    dnb.cdn("2500", i1 + 370, k1 + 273, 1, l9);
                }
            }
        }
    }

    public final Graphics getGraphics()
    {
        if(a.fig != null)
            return a.fig.getGraphics();
        if(link.fni != null)
            return link.fni.getGraphics();
        else
            return super.getGraphics();
    }

    private final boolean fdg(int l, int i1)
    {
        if(dgb != 0)
        {
            dnh.gii = false;
            return false;
        }
        elk = false;
        l += eai;
        i1 += eaj;
        if(eal == dnk && l > ega && l < egc && i1 > egb && i1 < egd)
        {
            dnh.gii = true;
            return false;
        }
        dnb.cdl("Loading... Please wait", 256, 192, 1, 0xffffff);
        fcc();
        dnb.caj(ebf, 0, 0);
        int j1 = dni;
        int k1 = dnj;
        int l1 = (l + 24) / 48;
        int i2 = (i1 + 24) / 48;
        eal = dnk;
        dni = l1 * 48 - 48;
        dnj = i2 * 48 - 48;
        ega = l1 * 48 - 32;
        egb = i2 * 48 - 32;
        egc = l1 * 48 + 32;
        egd = i2 * 48 + 32;
        dnh.gjj(l, i1, eal);
        dni -= eai;
        dnj -= eaj;
        int j2 = dni - j1;
        int k2 = dnj - k1;
        for(int l2 = 0; l2 < efd;)
        {
            ekm[l2] -= j2;
            ekn[l2] -= k2;
            int i4 = ekm[l2];
            int k4 = ekn[l2];
            int k5 = ela[l2];
            i i6 = dik[l2];
            try
            {
                int k6 = elb[l2];
                int i7;
                int j7;
                if(k6 == 0 || k6 == 4)
                {
                    i7 = e.amh[k5];
                    j7 = e.ami[k5];
                } else
                {
                    j7 = e.amh[k5];
                    i7 = e.ami[k5];
                }
                int k7 = ((i4 + i4 + i7) * ehd) / 2;
                int l7 = ((k4 + k4 + j7) * ehd) / 2;
                if(i4 < 0 || k4 < 0 || i4 >= 96 || k4 >= 96)
                    continue;
                ejg.bgm(i6);
                i6.cml(k7, -dnh.gjf(k7, l7), l7);
                dnh.gla(i4, k4, k5);
                if(k5 == 74)
                    i6.cmk(0, -480, 0);
                continue;
            }
            catch(RuntimeException runtimeexception)
            {
                System.out.println((new StringBuilder()).append("Loc Error: ").append(runtimeexception.getMessage()).toString());
                System.out.println((new StringBuilder()).append("i:").append(l2).append(" obj:").append(i6).toString());
                runtimeexception.printStackTrace();
                l2++;
            }
        }

        for(int i3 = 0; i3 < ehc;)
        {
            dhg[i3] -= j2;
            dhh[i3] -= k2;
            int j4 = dhg[i3];
            int l4 = dhh[i3];
            int l5 = eda[i3];
            int j6 = ecn[i3];
            try
            {
                dnh.gkc(j4, l4, j6, l5);
                i l6 = fdm(j4, l4, j6, l5, i3);
                did[i3] = l6;
                continue;
            }
            catch(RuntimeException runtimeexception1)
            {
                System.out.println((new StringBuilder()).append("Bound Error: ").append(runtimeexception1.getMessage()).toString());
                runtimeexception1.printStackTrace();
                i3++;
            }
        }

        for(int j3 = 0; j3 < dhd; j3++)
        {
            dml[j3] -= j2;
            dmm[j3] -= k2;
        }

        for(int k3 = 0; k3 < dgm; k3++)
        {
            f f1 = deh[k3];
            f1.gmh -= j2 * ehd;
            f1.gmi -= k2 * ehd;
            for(int i5 = 0; i5 <= f1.gna; i5++)
            {
                f1.gnb[i5] -= j2 * ehd;
                f1.gnc[i5] -= k2 * ehd;
            }

        }

        for(int l3 = 0; l3 < ebb; l3++)
        {
            f f2 = dgf[l3];
            f2.gmh -= j2 * ehd;
            f2.gmi -= k2 * ehd;
            for(int j5 = 0; j5 <= f2.gna; j5++)
            {
                f2.gnb[j5] -= j2 * ehd;
                f2.gnc[j5] -= k2 * ehd;
            }

        }

        dnh.gii = true;
        return true;
    }

    private static final String fdh(int l)
    {
        String s1 = String.valueOf(l);
        for(int i1 = s1.length() - 3; i1 > 0; i1 -= 3)
            s1 = (new StringBuilder()).append(s1.substring(0, i1)).append(",").append(s1.substring(i1)).toString();

        if(s1.length() > 8)
            s1 = (new StringBuilder()).append("@gre@").append(s1.substring(0, s1.length() - 8)).append(" million @whi@(").append(s1).append(")").toString();
        else
        if(s1.length() > 4)
            s1 = (new StringBuilder()).append("@cya@").append(s1.substring(0, s1.length() - 4)).append("K @whi@(").append(s1).append(")").toString();
        return s1;
    }

    private final boolean fdi(int l, int i1)
    {
        if(l == 31 && (fbc(197) || fbc(615) || fbc(682)))
            return true;
        if(l == 32 && (fbc(102) || fbc(616) || fbc(683)))
            return true;
        if(l == 33 && (fbc(101) || fbc(617) || fbc(684)))
            return true;
        if(l == 34 && (fbc(103) || fbc(618) || fbc(685)))
            return true;
        else
            return fac(l) >= i1;
    }

    private final void fdj(String s1, int l)
    {
        if(l == 2 || l == 4 || l == 6)
        {
            for(; s1.length() > 5 && s1.charAt(0) == '@' && s1.charAt(4) == '@'; s1 = s1.substring(5));
            int i1 = s1.indexOf(":");
            if(i1 != -1)
            {
                String s2 = s1.substring(0, i1);
                long l1 = t.fnc(s2);
                for(int k1 = 0; k1 < super.aan; k1++)
                    if(super.aba[k1] == l1)
                        return;

            }
        }
        if(l == 2)
            s1 = (new StringBuilder()).append("@yel@").append(s1).toString();
        if(l == 3 || l == 4)
            s1 = (new StringBuilder()).append("@whi@").append(s1).toString();
        if(l == 6)
            s1 = (new StringBuilder()).append("@cya@").append(s1).toString();
        if(dea != 0)
        {
            if(l == 4 || l == 3)
                ehl = 200;
            if(l == 2 && dea != 1)
                ehm = 200;
            if(l == 5 && dea != 2)
                ehn = 200;
            if(l == 6 && dea != 3)
                eia = 200;
            if(l == 3 && dea != 0)
                dea = 0;
            if(l == 6 && dea != 3 && dea != 0)
                dea = 0;
        }
        for(int j1 = 4; j1 > 0; j1--)
        {
            die[j1] = die[j1 - 1];
            eib[j1] = eib[j1 - 1];
        }

        die[0] = s1;
        eib[0] = 300;
        if(l == 2)
            if(ddj.gbc[ddk] == ddj.gbd[ddk] - 4)
                ddj.ggb(ddk, s1, true);
            else
                ddj.ggb(ddk, s1, false);
        if(l == 5)
            if(ddj.gbc[ddm] == ddj.gbd[ddm] - 4)
                ddj.ggb(ddm, s1, true);
            else
                ddj.ggb(ddm, s1, false);
        if(l == 6)
        {
            if(ddj.gbc[ddn] == ddj.gbd[ddn] - 4)
            {
                ddj.ggb(ddn, s1, true);
                return;
            }
            ddj.ggb(ddn, s1, false);
        }
    }

    private final void fdk(int l, int i1, int j1)
    {
        dnb.cbe(l, i1, j1);
        dnb.cbe(l - 1, i1, j1);
        dnb.cbe(l + 1, i1, j1);
        dnb.cbe(l, i1 - 1, j1);
        dnb.cbe(l, i1 + 1, j1);
    }

    private final void fdl()
    {
        char c1 = '\u0190';
        char c2 = 'd';
        if(dhi)
        {
            c2 = '\u01C2';
            c2 = '\u012C';
        }
        dnb.cba(256 - c1 / 2, 167 - c2 / 2, c1, c2, 0);
        dnb.cbb(256 - c1 / 2, 167 - c2 / 2, c1, c2, 0xffffff);
        dnb.cdm(dhc, 256, (167 - c2 / 2) + 20, 1, 0xffffff, c1 - 40);
        int l = 157 + c2 / 2;
        int i1 = 0xffffff;
        if(super.fkf > l - 12 && super.fkf <= l && super.fke > 106 && super.fke < 406)
            i1 = 0xff0000;
        dnb.cdl("Click here to close window", 256, l, 1, i1);
        if(dnl == 1)
        {
            if(i1 == 0xff0000)
                ecc = false;
            if((super.fke < 256 - c1 / 2 || super.fke > 256 + c1 / 2) && (super.fkf < 167 - c2 / 2 || super.fkf > 167 + c2 / 2))
                ecc = false;
        }
        dnl = 0;
    }

    public final Image createImage(int l, int i1)
    {
        if(a.fig != null)
            return a.fig.createImage(l, i1);
        if(link.fni != null)
            return link.fni.createImage(l, i1);
        else
            return super.createImage(l, i1);
    }

    private final i fdm(int l, int i1, int j1, int k1, int l1)
    {
        int i2 = l;
        int j2 = i1;
        int k2 = l;
        int l2 = i1;
        int i3 = e.amn[k1];
        int j3 = e.ana[k1];
        int k3 = e.amm[k1];
        i l3 = new i(4, 1);
        if(j1 == 0)
            k2 = l + 1;
        if(j1 == 1)
            l2 = i1 + 1;
        if(j1 == 2)
        {
            i2 = l + 1;
            l2 = i1 + 1;
        }
        if(j1 == 3)
        {
            k2 = l + 1;
            l2 = i1 + 1;
        }
        i2 *= ehd;
        j2 *= ehd;
        k2 *= ehd;
        l2 *= ehd;
        int i4 = l3.cln(i2, -dnh.gjf(i2, j2), j2);
        int j4 = l3.cln(i2, -dnh.gjf(i2, j2) - k3, j2);
        int k4 = l3.cln(k2, -dnh.gjf(k2, l2) - k3, l2);
        int l4 = l3.cln(k2, -dnh.gjf(k2, l2), l2);
        int ai[] = {
            i4, j4, k4, l4
        };
        l3.cmb(4, ai, i3, j3);
        l3.cme(false, 60, 24, -50, -10, -50);
        if(l >= 0 && i1 >= 0 && l < 96 && i1 < 96)
            ejg.bgm(l3);
        l3.chk = l1 + 10000;
        return l3;
    }

    private final void fdn()
    {
        super.fkn = "";
        super.fla = "";
    }

    private final f fea(int l, int i1, int j1, int k1, int l1)
    {
        if(ele[l] == null)
        {
            ele[l] = new f();
            ele[l].gmf = l;
        }
        f f1 = ele[l];
        boolean flag = false;
        int i2 = 0;
        do
        {
            if(i2 >= ebc)
                break;
            if(edc[i2].gmf == l)
            {
                flag = true;
                break;
            }
            i2++;
        } while(true);
        if(flag)
        {
            f1.gmj = l1;
            f1.gmm = k1;
            int j2 = f1.gna;
            if(i1 != f1.gnb[j2] || j1 != f1.gnc[j2])
            {
                f1.gna = j2 = (j2 + 1) % 10;
                f1.gnb[j2] = i1;
                f1.gnc[j2] = j1;
            }
        } else
        {
            f1.gmf = l;
            f1.gmn = 0;
            f1.gna = 0;
            f1.gnb[0] = f1.gmh = i1;
            f1.gnc[0] = f1.gmi = j1;
            f1.gmj = l1;
            f1.gmm = f1.gml = k1;
            f1.gmk = 0;
        }
        dgf[ebb++] = f1;
        return f1;
    }

    private final void feb()
    {
        elm = elg;
        for(int l = 0; l < elg; l++)
        {
            eam[l] = dmi[l];
            ean[l] = dmj[l];
        }

        for(int i1 = 0; i1 < ede && elm < dnc; i1++)
        {
            int j1 = edf[i1];
            boolean flag = false;
            int k1 = 0;
            do
            {
                if(k1 >= elm)
                    break;
                if(eam[k1] == j1)
                {
                    flag = true;
                    break;
                }
                k1++;
            } while(true);
            if(!flag)
            {
                eam[elm] = j1;
                ean[elm] = 0;
                elm++;
            }
        }

    }

    private final void fec(boolean flag)
    {
        int l = ((j) (dnb)).blg - 199;
        int i1 = 36;
        dnb.ccb(l - 49, 3, efh + 3);
        char c1 = '\304';
        char c2 = '\u0113';
        int j1;
        int k1 = j1 = j.cbh(160, 160, 160);
        if(dii == 0)
            k1 = j.cbh(220, 220, 220);
        else
            j1 = j.cbh(220, 220, 220);
        dnb.cam(l, i1, c1 / 2, 24, k1, 128);
        dnb.cam(l + c1 / 2, i1, c1 / 2, 24, j1, 128);
        dnb.cam(l, i1 + 24, c1, c2 - 24, j.cbh(220, 220, 220), 128);
        dnb.cbc(l, i1 + 24, c1, 0);
        dnb.cbd(l + c1 / 2, i1, 24, 0);
        dnb.cdl("Stats", l + c1 / 4, i1 + 16, 4, 0);
        dnb.cdl("Quests", l + c1 / 4 + c1 / 2, i1 + 16, 4, 0);
        if(dii == 0)
        {
            int l1 = 72;
            int j2 = -1;
            dnb.cdn("Skills", l + 5, l1, 3, 0xffff00);
            l1 += 13;
            for(int k2 = 0; k2 < 9; k2++)
            {
                int k3 = 0xffffff;
                if(super.fke > l + 3 && super.fkf >= l1 - 11 && super.fkf < l1 + 2 && super.fke < l + 90)
                {
                    k3 = 0xff0000;
                    j2 = k2;
                }
                dnb.cdn((new StringBuilder()).append(eba[k2]).append(":@yel@").append(dfk[k2]).append("/").append(dmf[k2]).toString(), l + 5, l1, 1, k3);
                k3 = 0xffffff;
                if(super.fke >= l + 90 && super.fkf >= l1 - 13 - 11 && super.fkf < (l1 - 13) + 2 && super.fke < l + 196)
                {
                    k3 = 0xff0000;
                    j2 = k2 + 9;
                }
                dnb.cdn((new StringBuilder()).append(eba[k2 + 9]).append(":@yel@").append(dfk[k2 + 9]).append("/").append(dmf[k2 + 9]).toString(), (l + c1 / 2) - 5, l1 - 13, 1, k3);
                l1 += 13;
            }

            dnb.cdn((new StringBuilder()).append("Quest Points:@yel@").append(ema).toString(), (l + c1 / 2) - 5, l1 - 13, 1, 0xffffff);
            l1 += 12;
            dnb.cdn((new StringBuilder()).append("Fatigue: @yel@").append((dhj * 100) / 750).append("%").toString(), l + 5, l1 - 13, 1, 0xffffff);
            l1 += 8;
            dnb.cdn("Equipment Status", l + 5, l1, 3, 0xffff00);
            l1 += 12;
            for(int l2 = 0; l2 < 3; l2++)
            {
                dnb.cdn((new StringBuilder()).append(eha[l2]).append(":@yel@").append(ege[l2]).toString(), l + 5, l1, 1, 0xffffff);
                if(l2 < 2)
                    dnb.cdn((new StringBuilder()).append(eha[l2 + 3]).append(":@yel@").append(ege[l2 + 3]).toString(), l + c1 / 2 + 25, l1, 1, 0xffffff);
                l1 += 13;
            }

            l1 += 6;
            dnb.cbc(l, l1 - 15, c1, 0);
            if(j2 != -1)
            {
                dnb.cdn((new StringBuilder()).append(dfn[j2]).append(" skill").toString(), l + 5, l1, 1, 0xffff00);
                l1 += 12;
                int i3 = ehh[0];
                for(int l3 = 0; l3 < 98; l3++)
                    if(edn[j2] >= ehh[l3])
                        i3 = ehh[l3 + 1];

                dnb.cdn((new StringBuilder()).append("Total xp: ").append(edn[j2] / 4).toString(), l + 5, l1, 1, 0xffffff);
                l1 += 12;
                dnb.cdn((new StringBuilder()).append("Next level at: ").append(i3 / 4).toString(), l + 5, l1, 1, 0xffffff);
            } else
            {
                dnb.cdn("Overall levels", l + 5, l1, 1, 0xffff00);
                l1 += 12;
                int j3 = 0;
                for(int i4 = 0; i4 < 18; i4++)
                    j3 += dmf[i4];

                dnb.cdn((new StringBuilder()).append("Skill total: ").append(j3).toString(), l + 5, l1, 1, 0xffffff);
                l1 += 12;
                dnb.cdn((new StringBuilder()).append("Combat level: ").append(djc.gnm).toString(), l + 5, l1, 1, 0xffffff);
                l1 += 12;
            }
        }
        if(dii == 1)
        {
            dig.gfm(dih);
            dig.gga(dih, 0, "@whi@Quest-list (green=completed)");
            for(int i2 = 0; i2 < 50; i2++)
                dig.gga(dih, i2 + 1, (new StringBuilder()).append(ehf[i2] ? "@gre@" : "@red@").append(dei[i2]).toString());

            dig.ged();
        }
        if(!flag)
            return;
        l = super.fke - (((j) (dnb)).blg - 199);
        i1 = super.fkf - 36;
        if(l >= 0 && i1 >= 0 && l < c1 && i1 < c2)
        {
            if(dii == 1)
                dig.gea(l + (((j) (dnb)).blg - 199), i1 + 36, super.fkh, super.fkg);
            if(i1 <= 24 && dnl == 1)
            {
                if(l < 98)
                {
                    dii = 0;
                    return;
                }
                if(l > 98)
                    dii = 1;
            }
        }
    }

    private final void fed()
    {
        if(dnl != 0)
        {
            dnl = 0;
            if(eie == 1 && (super.fke < 106 || super.fkf < 145 || super.fke > 406 || super.fkf > 215))
            {
                eie = 0;
                return;
            }
            if(eie == 2 && (super.fke < 6 || super.fkf < 145 || super.fke > 506 || super.fkf > 215))
            {
                eie = 0;
                return;
            }
            if(eie == 3 && (super.fke < 106 || super.fkf < 145 || super.fke > 406 || super.fkf > 215))
            {
                eie = 0;
                return;
            }
            if(super.fke > 236 && super.fke < 276 && super.fkf > 193 && super.fkf < 213)
            {
                eie = 0;
                return;
            }
        }
        int l = 145;
        if(eie == 1)
        {
            dnb.cba(106, l, 300, 70, 0);
            dnb.cbb(106, l, 300, 70, 0xffffff);
            l += 20;
            dnb.cdl("Enter name to add to friends list", 256, l, 4, 0xffffff);
            l += 20;
            dnb.cdl((new StringBuilder()).append(super.fkl).append("*").toString(), 256, l, 4, 0xffffff);
            if(super.fkm.length() > 0)
            {
                String s1 = super.fkm.trim();
                super.fkl = "";
                super.fkm = "";
                eie = 0;
                if(s1.length() > 0 && t.fnc(s1) != djc.gmd)
                    acj(s1);
            }
        }
        if(eie == 2)
        {
            dnb.cba(6, l, 500, 70, 0);
            dnb.cbb(6, l, 500, 70, 0xffffff);
            l += 20;
            dnb.cdl((new StringBuilder()).append("Enter message to send to ").append(t.fnd(ejk)).toString(), 256, l, 4, 0xffffff);
            l += 20;
            dnb.cdl((new StringBuilder()).append(super.fkn).append("*").toString(), 256, l, 4, 0xffffff);
            if(super.fla.length() > 0)
            {
                String s2 = super.fla;
                super.fkn = "";
                super.fla = "";
                eie = 0;
                int j1 = v.cek(s2);
                acl(ejk, v.ceg, j1);
                s2 = v.cej(v.ceg, 0, j1);
                s2 = u.fgd(s2);
                adg((new StringBuilder()).append("@pri@You tell ").append(t.fnd(ejk)).append(": ").append(s2).toString());
            }
        }
        if(eie == 3)
        {
            dnb.cba(106, l, 300, 70, 0);
            dnb.cbb(106, l, 300, 70, 0xffffff);
            l += 20;
            dnb.cdl("Enter name to add to ignore list", 256, l, 4, 0xffffff);
            l += 20;
            dnb.cdl((new StringBuilder()).append(super.fkl).append("*").toString(), 256, l, 4, 0xffffff);
            if(super.fkm.length() > 0)
            {
                String s3 = super.fkm.trim();
                super.fkl = "";
                super.fkm = "";
                eie = 0;
                if(s3.length() > 0 && t.fnc(s3) != djc.gmd)
                    ach(s3);
            }
        }
        int i1 = 0xffffff;
        if(super.fke > 236 && super.fke < 276 && super.fkf > 193 && super.fkf < 213)
            i1 = 0xffff00;
        dnb.cdl("Cancel", 256, 208, 1, i1);
    }

    private final void fee(String s1)
    {
        if(dic == null)
            return;
        if(dkj)
        {
            return;
        } else
        {
            dic.ggm(dma, t.fne((new StringBuilder()).append(s1).append(".pcm").toString(), dma), t.fnf((new StringBuilder()).append(s1).append(".pcm").toString(), dma));
            return;
        }
    }

    private final void fef()
    {
        if(dnl != 0)
        {
            int l = 0;
            do
            {
                if(l >= ejf)
                    break;
                int j1 = ejb + 2;
                int l1 = ejc + 27 + l * 15;
                if(super.fke > j1 - 2 && super.fkf > l1 - 12 && super.fkf < l1 + 4 && super.fke < (j1 - 3) + ejd)
                {
                    emg(dec[l]);
                    break;
                }
                l++;
            } while(true);
            dnl = 0;
            dkk = false;
            return;
        }
        if(super.fke < ejb - 10 || super.fkf < ejc - 10 || super.fke > ejb + ejd + 10 || super.fkf > ejc + eje + 10)
        {
            dkk = false;
            return;
        }
        dnb.cam(ejb, ejc, ejd, eje, 0xd0d0d0, 160);
        dnb.cdn("Choose option", ejb + 2, ejc + 12, 1, 65535);
        for(int i1 = 0; i1 < ejf; i1++)
        {
            int k1 = ejb + 2;
            int i2 = ejc + 27 + i1 * 15;
            int j2 = 0xffffff;
            if(super.fke > k1 - 2 && super.fkf > i2 - 12 && super.fkf < i2 + 4 && super.fke < (k1 - 3) + ejd)
                j2 = 0xffff00;
            dnb.cdn((new StringBuilder()).append(dem[dec[i1]]).append(" ").append(ejm[dec[i1]]).toString(), k1, i2, 1, j2);
        }

    }

    private final void feg()
    {
        if(egf == 0 && super.fke >= ((j) (dnb)).blg - 35 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 && super.fkf < 35)
            egf = 1;
        if(egf == 0 && super.fke >= ((j) (dnb)).blg - 35 - 33 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 33 && super.fkf < 35)
        {
            egf = 2;
            dkb = (int)(Math.random() * 13D) - 6;
            dkc = (int)(Math.random() * 23D) - 11;
        }
        if(egf == 0 && super.fke >= ((j) (dnb)).blg - 35 - 66 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 66 && super.fkf < 35)
            egf = 3;
        if(egf == 0 && super.fke >= ((j) (dnb)).blg - 35 - 99 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 99 && super.fkf < 35)
            egf = 4;
        if(egf == 0 && super.fke >= ((j) (dnb)).blg - 35 - 132 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 132 && super.fkf < 35)
            egf = 5;
        if(egf == 0 && super.fke >= ((j) (dnb)).blg - 35 - 165 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 165 && super.fkf < 35)
            egf = 6;
        if(egf != 0 && super.fke >= ((j) (dnb)).blg - 35 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 && super.fkf < 26)
            egf = 1;
        if(egf != 0 && egf != 2 && super.fke >= ((j) (dnb)).blg - 35 - 33 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 33 && super.fkf < 26)
        {
            egf = 2;
            dkb = (int)(Math.random() * 13D) - 6;
            dkc = (int)(Math.random() * 23D) - 11;
        }
        if(egf != 0 && super.fke >= ((j) (dnb)).blg - 35 - 66 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 66 && super.fkf < 26)
            egf = 3;
        if(egf != 0 && super.fke >= ((j) (dnb)).blg - 35 - 99 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 99 && super.fkf < 26)
            egf = 4;
        if(egf != 0 && super.fke >= ((j) (dnb)).blg - 35 - 132 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 132 && super.fkf < 26)
            egf = 5;
        if(egf != 0 && super.fke >= ((j) (dnb)).blg - 35 - 165 && super.fkf >= 3 && super.fke < ((j) (dnb)).blg - 3 - 165 && super.fkf < 26)
            egf = 6;
        if(egf == 1 && (super.fke < ((j) (dnb)).blg - 248 || super.fkf > 36 + (ebe / 5) * 34))
            egf = 0;
        if(egf == 3 && (super.fke < ((j) (dnb)).blg - 199 || super.fkf > 316))
            egf = 0;
        if((egf == 2 || egf == 4 || egf == 5) && (super.fke < ((j) (dnb)).blg - 199 || super.fkf > 240))
            egf = 0;
        if(egf == 6 && (super.fke < ((j) (dnb)).blg - 199 || super.fkf > 311))
            egf = 0;
    }

    protected final int adi()
    {
        return link.fnj;
    }

    public mudclient()
    {
        xrot = 912;
        debug = false;
        line = new String[1000];
        rra = new String[1000];
        label = new String[1000];
        labelline = new int[1000];
        labelno = 0;
        path = "../";
        scriptno = 0;
        counter = 0;
        autologin = false;
        statmenu = false;
        logged = 0;
        idfood = 373;
        prayerid = 1;
        prayerdot = 1;
        GFX = true;
        lefty = false;
        HelpMenu = false;
        fightmenu = false;
        lefty = false;
        hpset = 20;
        namefood = "Lobster";
        AutoMenu = 0;
        AutoMenuis = 0;
        dcg = "";
        dch = 512;
        dci = 334;
        dcj = 9;
        dck = false;
        dcl = "";
        dcm = false;
        dcn = true;
        dda = new String[5];
        ddc = 1;
        ddd = 2;
        dde = 2;
        ddf = 8;
        ddg = 14;
        ddi = 1;
        dec = new int[250];
        dee = new int[8];
        def = new int[8];
        deh = new f[500];
        dej = -1;
        dek = -2;
        dem = new String[250];
        den = false;
        dfe = new int[14];
        dff = new int[14];
        dfg = false;
        dfh = false;
        dfi = new int[50];
        dfj = new int[50];
        dfk = new int[18];
        dfl = new int[250];
        dfm = new int[250];
        dga = new int[250];
        dge = false;
        dgf = new f[500];
        dgg = false;
        dgh = false;
        dgi = false;
        dgj = false;
        dhb = new f[4000];
        dhc = "";
        dhe = false;
        dhf = false;
        dhg = new int[500];
        dhh = new int[500];
        dhi = false;
        dhm = 2;
        dia = false;
        did = new i[500];
        die = new String[5];
        dij = new boolean[1500];
        dik = new i[1500];
        dil = -1;
        dim = false;
        dja = "";
        djb = "";
        djc = new f();
        djf = -1;
        djh = new int[14];
        dji = new int[14];
        djj = false;
        djk = new int[250];
        djl = new int[250];
        djm = new int[250];
        djn = true;
        dka = true;
        dkg = 128;
        dkj = false;
        dkk = false;
        dkm = new int[8];
        dkn = new int[8];
        dmb = false;
        dmf = new int[18];
        dmi = new int[256];
        dmj = new int[256];
        dmk = false;
        dml = new int[5000];
        dmm = new int[5000];
        dmn = new int[5000];
        dna = new int[5000];
        dnc = 48;
        dne = new int[14];
        dnf = new int[14];
        dnk = -1;
        dnn = new int[8000];
        eaa = new int[8000];
        eac = 550;
        ead = new int[50];
        eae = new int[50];
        eaf = new int[50];
        eag = new int[50];
        eah = new boolean[500];
        eal = -1;
        eam = new int[256];
        ean = new int[256];
        ebe = 30;
        ebg = false;
        ebh = false;
        ebk = new int[50];
        ebl = new int[50];
        ecc = false;
        ece = new int[500];
        ech = new int[14];
        eci = new int[14];
        ecj = -1;
        eck = -2;
        ecl = false;
        ecm = false;
        ecn = new int[500];
        eda = new int[500];
        edb = new i[1000];
        edc = new f[500];
        edf = new int[35];
        edg = new int[35];
        edh = new int[35];
        edi = -1;
        edj = "";
        edk = new f[500];
        edl = false;
        edm = false;
        edn = new int[18];
        eed = new int[8192];
        eee = new int[8192];
        eef = false;
        eeg = 0xbc614e;
        eeh = new boolean[50];
        efa = new int[256];
        efb = new int[256];
        efc = new int[256];
        eff = new int[8];
        efg = new int[8];
        ege = new int[5];
        egh = new String[50];
        egi = false;
        egm = 2;
        egn = new int[50];
        ehd = 128;
        ehf = new boolean[50];
        ehg = new int[50];
        ehh = new int[99];
        ehi = -1;
        ehj = -1;
        ehk = -1;
        eib = new int[5];
        eic = 40;
        eif = "";
        eih = false;
        ein = new int[8];
        eja = new int[8];
        ejm = new String[250];
        ekc = "";
        ekd = "";
        eke = "";
        ekh = false;
        ekj = new int[50];
        ekk = new int[50];
        ekl = new int[50];
        ekm = new int[1500];
        ekn = new int[1500];
        ela = new int[1500];
        elb = new int[1500];
        eld = false;
        ele = new f[5000];
        elh = new int[50];
        eli = 1;
        elk = false;
        ell = new int[50];
        eln = false;
    }

    public int maphax;
    public int xrot;
    public boolean debug;
    public String line[];
    public String rra[];
    public String label[];
    public int labelline[];
    public int labelno;
    public FileClassLoader javaScriptClassLoader;
    public String path;
    public int scriptno;
    public script smacro;
    public int counter;
    public static final String url = "www.rstyrant.com";
    public static final String BotName = "TRune";
    public static final String BotVersion = "XP";
    public static final String BMaker = "RSTyrant";
    static String internetname[] = {
        "mudclient101.jar", "config85.jag", "entity24.jag", "jagex.jag", "land63.jag", "maps63.jag", "media58.jag", "models36.jag", "textures17.jag", "filter2.jag", 
        "entity24.mem", "land63.mem", "maps63.mem", "sounds1.mem"
    };
    private final String localname[] = {
        "g34zx", "1jfds", "94jfj", "k23lk", "mn24j", "k4o2n", "zko34", "plam3", "zn12n", "cht3f", 
        "lam3n", "zl3kp", "a2155", "zck35"
    };
    public String server;
    String sName;
    boolean HelpMenu;
    public boolean fightmenu;
    public int logged;
    public boolean autologin;
    public boolean statmenu;
    public int hpnum;
    String foodName;
    String prayername;
    int prayerid;
    int prayerdot;
    boolean GFX;
    boolean lefty;
    int hpset;
    int idfood;
    int foodType;
    String namefood;
    boolean autoEat;
    public int AutoMenu;
    public int AutoMenuis;
    private AutoEat AE;
    private final int dbi = 250;
    private final int dbj = 5;
    private final int dbk = 50;
    private final int dbl = 18;
    private final int dbm = 500;
    private final int dbn = 1500;
    private final int dca = 5000;
    private final int dcb = 5000;
    private final int dcc = 500;
    private final int dcd = 4000;
    private final int dce = 500;
    private final int dcf = 8000;
    private String dcg;
    private int dch;
    private int dci;
    private int dcj;
    private boolean dck;
    private String dcl;
    private boolean dcm;
    private boolean dcn;
    private String dda[];
    private int ddb;
    private int ddc;
    private int ddd;
    private int dde;
    private int ddf;
    private int ddg;
    private int ddh;
    private int ddi;
    private h ddj;
    int ddk;
    int ddl;
    int ddm;
    int ddn;
    int dea;
    private int deb;
    private int dec[];
    private int ded;
    private int dee[];
    private int def[];
    private int deg;
    private f deh[];
    private final String dei[] = {
        "Black knight's fortress", "Cook's assistant", "Demon slayer", "Doric's quest", "The restless ghost", "Goblin diplomacy", "Ernest the chicken", "Imp catcher", "Pirate's treasure", "Prince Ali rescue", 
        "Romeo & Juliet", "Sheep shearer", "Shield of Arrav", "The knight's sword", "Vampire slayer", "Witch's potion", "Dragon slayer", "Witch's house (members)", "Lost city (members)", "Hero's quest (members)", 
        "Druidic ritual (members)", "Merlin's crystal (members)", "Scorpion catcher (members)", "Family crest (members)", "Tribal totem (members)", "Fishing contest (members)", "Monk's friend (members)", "Temple of Ikov (members)", "Clock tower (members)", "The Holy Grail (members)", 
        "Fight Arena (members)", "Tree Gnome Village (members)", "The Hazeel Cult (members)", "Sheep Herder (members)", "Plague City (members)", "Sea Slug (members)", "Waterfall quest (members)", "Biohazard (members)", "Jungle potion (members)", "Grand tree (members)", 
        "Shilo village (members)", "Underground pass (members)", "Observatory quest (members)", "Tourist trap (members)", "Watchtower (members)", "Dwarf Cannon (members)", "Murder Mystery (members)", "Digsite (members)", "Gertrude's Cat (members)", "Legend's Quest (members)"
    };
    private int dej;
    private int dek;
    private String del;
    private String dem[];
    private boolean den;
    private int dfa;
    private int dfb;
    private int dfc;
    private int dfd;
    private int dfe[];
    private int dff[];
    private boolean dfg;
    private boolean dfh;
    private int dfi[];
    private int dfj[];
    private int dfk[];
    private int dfl[];
    private int dfm[];
    private final String dfn[] = {
        "Attack", "Defense", "Strength", "Hits", "Ranged", "Prayer", "Magic", "Cooking", "Woodcutting", "Fletching", 
        "Fishing", "Firemaking", "Crafting", "Smithing", "Mining", "Herblaw", "Agility", "Thieving"
    };
    private int dga[];
    private int dgb;
    private int dgc;
    private int dgd;
    private boolean dge;
    private f dgf[];
    private boolean dgg;
    private boolean dgh;
    private boolean dgi;
    private boolean dgj;
    private h dgk;
    private int dgl[][] = {
        {
            11, 2, 9, 7, 1, 6, 10, 0, 5, 8, 
            3, 4
        }, {
            11, 2, 9, 7, 1, 6, 10, 0, 5, 8, 
            3, 4
        }, {
            11, 3, 2, 9, 7, 1, 6, 10, 0, 5, 
            8, 4
        }, {
            3, 4, 2, 9, 7, 1, 6, 10, 8, 11, 
            0, 5
        }, {
            3, 4, 2, 9, 7, 1, 6, 10, 8, 11, 
            0, 5
        }, {
            4, 3, 2, 9, 7, 1, 6, 10, 8, 11, 
            0, 5
        }, {
            11, 4, 2, 9, 7, 1, 6, 10, 0, 5, 
            8, 3
        }, {
            11, 2, 9, 7, 1, 6, 10, 0, 5, 8, 
            4, 3
        }
    };
    private int dgm;
    private int dgn;
    private int dha;
    private f dhb[];
    private String dhc;
    private int dhd;
    private boolean dhe;
    private boolean dhf;
    private int dhg[];
    private int dhh[];
    private boolean dhi;
    private int dhj;
    private int dhk;
    private int dhl;
    private int dhm;
    private int dhn[] = {
        0, 1, 2, 1
    };
    private boolean dia;
    private int dib;
    private d dic;
    private i did[];
    private String die[];
    private long dif;
    private h dig;
    int dih;
    int dii;
    private boolean dij[];
    private i dik[];
    private int dil;
    private boolean dim;
    private String din;
    private String dja;
    private String djb;
    private f djc;
    int djd;
    int dje;
    int djf;
    private int djg;
    private int djh[];
    private int dji[];
    private boolean djj;
    private int djk[];
    private int djl[];
    private int djm[];
    private boolean djn;
    private boolean dka;
    private int dkb;
    private int dkc;
    private int dkd;
    private int dke;
    private int dkf;
    private int dkg;
    private int dkh;
    private final int dki[] = {
        0xecded0, 0xccb366, 0xb38c40, 0x997326, 0x906020
    };
    private boolean dkj;
    private boolean dkk;
    private int dkl;
    private int dkm[];
    private int dkn[];
    private h dla;
    private int dlb;
    private int dlc;
    private int dld;
    private int dle;
    private int dlf;
    private int dlg;
    private int dlh;
    private int dli;
    private int dlj;
    private int dlk;
    private int dll;
    private int dlm;
    private int dln;
    private byte dma[];
    private boolean dmb;
    private int dmc;
    private int dmd;
    private int dme;
    private int dmf[];
    private long dmg;
    private int dmh;
    private int dmi[];
    private int dmj[];
    private boolean dmk;
    private int dml[];
    private int dmm[];
    private int dmn[];
    private int dna[];
    private k dnb;
    private int dnc;
    private int dnd;
    private int dne[];
    private int dnf[];
    private int dng;
    private x dnh;
    private int dni;
    private int dnj;
    private int dnk;
    private int dnl;
    private h dnm;
    private int dnn[];
    private int eaa[];
    private int eab[] = {
        0, 0, 0, 0, 0, 1, 2, 1
    };
    private int eac;
    private int ead[];
    private int eae[];
    private int eaf[];
    private int eag[];
    private boolean eah[];
    private int eai;
    private int eaj;
    private int eak;
    private int eal;
    private int eam[];
    private int ean[];
    private final String eba[] = {
        "Attack", "Defense", "Strength", "Hits", "Ranged", "Prayer", "Magic", "Cooking", "Woodcut", "Fletching", 
        "Fishing", "Firemaking", "Crafting", "Smithing", "Mining", "Herblaw", "Agility", "Thieving"
    };
    private int ebb;
    private int ebc;
    private int ebd;
    private int ebe;
    private Graphics ebf;
    private boolean ebg;
    private boolean ebh;
    private int ebi;
    private int ebj;
    private int ebk[];
    private int ebl[];
    private int ebm;
    private int ebn;
    private int eca;
    private int ecb;
    private boolean ecc;
    private int ecd;
    private int ece[];
    private int ecf;
    private int ecg;
    private int ech[];
    private int eci[];
    private int ecj;
    private int eck;
    private boolean ecl;
    private boolean ecm;
    private int ecn[];
    private int eda[];
    private i edb[];
    private f edc[];
    private int edd;
    private int ede;
    private int edf[];
    private int edg[];
    private int edh[];
    private int edi;
    String edj;
    private f edk[];
    private boolean edl;
    private boolean edm;
    private int edn[];
    private int eea;
    private int eeb;
    private int eec;
    int eed[];
    int eee[];
    private boolean eef;
    private int eeg;
    private boolean eeh[];
    private int eei;
    private int eej;
    private int eek;
    private int eel;
    private int eem;
    private int een;
    private int efa[];
    private int efb[];
    private int efc[];
    private int efd;
    private int efe;
    private int eff[];
    private int efg[];
    private int efh;
    private int efi;
    private int efj;
    private int efk;
    private int efl;
    private int efm;
    private int efn;
    private int ega;
    private int egb;
    private int egc;
    private int egd;
    private int ege[];
    private int egf;
    private int egg;
    String egh[];
    private boolean egi;
    private int egj;
    private int egk;
    private int egl;
    private int egm;
    private int egn[];
    private final String eha[] = {
        "Armour", "WeaponAim", "WeaponPower", "Magic", "Prayer"
    };
    private int ehb;
    private int ehc;
    private int ehd;
    private int ehe;
    private boolean ehf[];
    private int ehg[];
    private int ehh[];
    private int ehi;
    private int ehj;
    private int ehk;
    private int ehl;
    private int ehm;
    private int ehn;
    private int eia;
    private int eib[];
    private int eic;
    private final int eid[] = {
        0xff0000, 0xff8000, 0xffe000, 0xa0e000, 57344, 32768, 41088, 45311, 33023, 12528, 
        0xe000e0, 0x303030, 0x604000, 0x805000, 0xffffff
    };
    private int eie;
    private String eif;
    private int eig;
    private boolean eih;
    private final int eii[] = {
        0xffc030, 0xffa040, 0x805030, 0x604020, 0x303030, 0xff6020, 0xff4000, 0xffffff, 65280, 65535
    };
    private h eij;
    int eik;
    int eil;
    private int eim;
    private int ein[];
    private int eja[];
    private int ejb;
    private int ejc;
    private int ejd;
    private int eje;
    private int ejf;
    private n ejg;
    private h ejh;
    int eji;
    int ejj;
    long ejk;
    private int ejl;
    private String ejm[];
    private int ejn;
    private int eka;
    private int ekb;
    private String ekc;
    private String ekd;
    private String eke;
    private int ekf;
    private int ekg;
    private boolean ekh;
    private h eki;
    private int ekj[];
    private int ekk[];
    private int ekl[];
    private int ekm[];
    private int ekn[];
    private int ela[];
    private int elb[];
    private int elc;
    private boolean eld;
    private f ele[];
    private int elf;
    private int elg;
    private int elh[];
    private int eli;
    private int elj;
    private boolean elk;
    private int ell[];
    private int elm;
    private boolean eln;
    private int ema;
    private int emb;
    int emc;
    int emd;
    private int eme[] = {
        0, 1, 2, 1, 0, 0, 0, 0
    };
    private final String emf[] = {
        "Where were you born?", "What was your first teachers name?", "What is your fathers middle name?", "Who was your first best friend?", "What is your favourite vacation spot?", "What is your mothers middle name?", "What was your first pets name?", "What was the name of your first school?", "What is your mothers maiden name?", "Who was your first boyfriend/girlfriend?", 
        "What was the first computer game you purchased?", "Who is your favourite actor/actress?", "Who is your favourite author?", "Who is your favourite musician?", "Who is your favourite cartoon character?", "What is your favourite book?", "What is your favourite food?", "What is your favourite movie?"
    };




}