// Decompiled by DJ v3.7.7.81 Copyright 2004 Atanas Neshkov  Date: 23/10/2004 1:39:24 a.m.
// Home Page : http://members.fortunecity.com/neshkov/dj.html  - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   mudclient.java

import java.applet.Applet;
import java.awt.*;
import java.io.*;
import java.net.*;
import java.util.*;

public class mudclient extends Applet_Sub1_Sub1
{
    public class autofight extends Thread
    {

        public void run()
        {
            startXP = CurrentXPArray[2];
            while(macroOn) 
                try
                {
                    int i = getnearestnpcbyid(selectedNPC);
                    if(fightMode != lockedFightMode)
                    {
                        setmode(lockedFightMode);
                        chatText2("@bot@Fixing Fightmode to LockedMode");
                    } else
                    if(!incombat())
                    {
                        int j = getnearestnpcbyid(selectedNPC);
                        if(fatigue() > 99 && !isSleeping && inventoryCount(1263) > 0)
                            useitemid(1263);
                        else
                        if(fightMode != lockedFightMode)
                        {
                            setmode(lockedFightMode);
                            chatText2("@bot@Fixing Fightmode to LockedMode");
                        } else
                        if(j != -1)
                        {
                            attacknpc(j);
                            try
                            {
                                Thread.sleep(1000L);
                            }
                            catch(Exception exception1) { }
                        } else
                        {
                            try
                            {
                                Thread.sleep(10L);
                            }
                            catch(Exception exception2) { }
                        }
                    } else
                    if(incombat())
                        if(fightMode != lockedFightMode)
                        {
                            setmode(lockedFightMode);
                            chatText2("@bot@Fixing Fightmode to LockedMode");
                        } else
                        {
                            try
                            {
                                Thread.sleep(300L);
                            }
                            catch(Exception exception3) { }
                        }
                    macroaction();
                }
                catch(Exception exception) { }
        }

        autofight()
        {
            start();
        }
    }

    private class depositeverything extends Thread
    {

        public void run()
        {
            for(int i = 0; i < inventoryItemID.length; i++)
            {
                int j = inventoryCount(inventoryItemID[i]);
                int l = j;
                do
                {
                    if(l <= 0)
                        break;
                    j = inventoryCount(inventoryItemID[i]);
                    if(j >= 50000)
                    {
                        deposit(inventoryItemID[i], 50000);
                        l -= 50000;
                    }
                    if(j < 50000 || j == 0)
                        break;
                    l++;
                    l--;
                } while(true);
                for(int i1 = j; i1 > 0; i1--)
                {
                    int k = inventoryCount(inventoryItemID[i]);
                    if(k < 50000)
                    {
                        deposit(inventoryItemID[i], inventoryCount(inventoryItemID[i]));
                        i1 -= inventoryCount(inventoryItemID[i]);
                    }
                    i1++;
                }

            }

        }

        depositeverything()
        {
            start();
        }
    }

    public class depositallbyid extends Thread
    {

        public void run()
        {
            int i;
            if(depositAllID != -1)
                i = inventoryCount(depositAllID);
            else
                i = -1;
            int k = i;
            do
            {
                if(k <= 0)
                    break;
                i = inventoryCount(depositAllID);
                if(i >= 50000)
                {
                    deposit(depositAllID, 50000);
                    k -= 50000;
                }
                if(i < 50000 || i == 0)
                    break;
                k++;
                k--;
            } while(true);
            for(int l = i; l > 0; l--)
            {
                int j = inventoryCount(depositAllID);
                if(j < 50000)
                {
                    deposit(depositAllID, inventoryCount(depositAllID));
                    l -= inventoryCount(depositAllID);
                }
                l++;
            }

        }

        depositallbyid()
        {
            start();
        }
    }

    public class withdrawallbyid extends Thread
    {

        public void run()
        {
            int i = Class1.anInt144;
            int j;
            if(Class1.anIntArray55[withdrawAllID] == 1)
                j = 1;
            else
                j = 50000;
            int k;
            if(withdrawAllID != -1)
                k = bankCountID(withdrawAllID);
            else
                k = -1;
            if(j == 50000)
            {
                for(int i1 = k; i1 > 0; i1--)
                {
                    int l = bankCountID(withdrawAllID);
                    int k1 = 0;
                    int l1 = inventoryPositionCount(29);
                    if(k1 > 29)
                        break;
                    if(l1 > 0)
                        i1 = 0;
                    if(l >= 0 && l1 < 1)
                    {
                        withdraw(withdrawAllID, j);
                        i1 -= j;
                    }
                    if(l == 0)
                        break;
                    if(j == 1)
                        k1++;
                    i1++;
                }

            }
            if(j == 1)
            {
                for(int j1 = inventoryItemCounter; j1 < 30; j1++)
                    withdraw(withdrawAllID, j);

            }
        }

        withdrawallbyid()
        {
            start();
        }
    }

    public class doorcheck extends Thread
    {

        public void run()
        {
            if(doorx != -1 && doory != -1 && doorat(doorx, doory))
                atwallobjat(doorx, doory);
        }

        doorcheck()
        {
            start();
        }
    }


    public void atwallobj2at(int i, int j)
    {
        optionIDArray[0] = 2300;
        optionObjXArray[0] = i - myPlayerX1;
        optionObjYArray[0] = j - myPlayerY1;
        optionPacketSender(0);
        macroaction();
    }

    public void atwallobjat(int i, int j)
    {
        optionIDArray[0] = 320;
        optionObjXArray[0] = i - myPlayerX1;
        optionObjYArray[0] = j - myPlayerY1;
        optionPacketSender(0);
        macroaction();
    }

    public boolean doorat(int i, int j)
    {
        for(int k = 0; k < objCount; k++)
            if(objID[k] == 2 && objx(k) + myPlayerX1 == i && objy(k) + myPlayerY1 == j)
                return true;

        return false;
    }

    public void puttrade(int i, int j)
    {
        super.packets.packetID(116);
        super.packets.variables348(i);
        super.packets.variables343(i);
        super.packets.method332(j);
        super.packets.sendpacket();
        tradeItemID[tradePosCount] = i;
        tradeItemCount[tradePosCount] = j;
        tradePosCount++;
        hasAccepted = false;
        tradeWindow2 = false;
    }

    public void poptrade(int i, int j)
    {
        boolean flag = false;
        for(int l = 0; l < tradeItemID.length; l++)
            if(tradeItemID[l] == i)
            {
                tradePosCount = l;
                int k = tradeItemCount[l];
                super.packets.packetID(116);
                super.packets.variables348(i);
                super.packets.variables343(i);
                super.packets.method332(k - j);
                super.packets.sendpacket();
                tradeItemID[l] = i;
                tradeItemCount[l] = k - j;
                hasAccepted = false;
                tradeWindow2 = false;
            }

    }

    public void castonnpcbyname(int i, String s)
    {
        selectspell(i);
        int j = nearestnpcbyname(s);
        if(j != -1)
        {
            optionIDArray[0] = 700;
            optionObjXArray[0] = NPCArray[j].posX;
            optionObjYArray[0] = NPCArray[j].posY;
            optionObjIDArray[0] = NPCArray[j].ID;
            optionObjNameArray[0] = selectedSpell;
            optionPacketSender(0);
        }
    }

    public int nearestnpcbyname(String s)
    {
        int ai[] = new int[npccount()];
        int ai1[] = new int[npccount()];
        int ai2[] = new int[npccount()];
        int i = 0;
        boolean flag = false;
        boolean flag1 = false;
        double d = 9999999D;
        int j = -1;
        for(int k = 0; k < npccount(); k++)
            if(NPCArray[k].name == s && NPCArray[k].status != 8 && NPCArray[k].status != 9)
            {
                ai[i] = (NPCArray[k].posX - 64) / anInt946;
                ai1[i] = (NPCArray[k].posY - 64) / anInt946;
                ai2[i] = k;
                i++;
            }

        try
        {
            for(int l = 0; l <= i; l++)
                if(NPCArray[ai2[l]].name == s)
                {
                    int i1 = Math.abs(Math.abs(myPlayerX2) - Math.abs(ai[l]));
                    int j1 = Math.abs(Math.abs(myPlayerY2) - Math.abs(ai1[l]));
                    if(i1 == 0 || j1 == 0)
                    {
                        if((double)(i1 + j1) < d)
                        {
                            d = i1 + j1;
                            j = ai2[l];
                        }
                    } else
                    if((double)(i1 + j1) * 0.5D < d)
                    {
                        d = (double)(i1 + j1) * 0.5D;
                        j = ai2[l];
                    }
                }

        }
        catch(Exception exception) { }
        if(j > -1 && j < npccount())
            return j;
        else
            return -1;
    }

    public void castonnpcbyid(int i, int j)
    {
        selectspell(i);
        int k = getnearestnpcbyid(j);
        if(k != -1)
        {
            optionIDArray[0] = 700;
            optionObjXArray[0] = NPCArray[k].posX;
            optionObjYArray[0] = NPCArray[k].posY;
            optionObjIDArray[0] = NPCArray[k].ID;
            optionObjNameArray[0] = selectedSpell;
            optionPacketSender(0);
        }
    }

    public void castonitemcoords(int i, int j, int k, int l)
    {
        int i1 = findnearestitem(j);
        selectspell(i);
        optionIDArray[0] = 200;
        optionObjXArray[0] = k - myPlayerX1;
        optionObjYArray[0] = l - myPlayerY1;
        optionObjIDArray[0] = itemIDArray[i1];
        optionObjNameArray[0] = selectedSpell;
        optionPacketSender(0);
    }

    public void castongrounditem(int i, int j)
    {
        int k = findnearestitem(j);
        selectspell(i);
        optionIDArray[0] = 200;
        optionObjXArray[0] = itemXArray[k];
        optionObjYArray[0] = itemYArray[k];
        optionObjIDArray[0] = itemIDArray[k];
        optionObjNameArray[0] = selectedSpell;
        optionPacketSender(0);
    }

    public void castonitemid(int i, int j)
    {
        selectspell(i);
        int k = finditempos(j);
        optionIDArray[0] = 600;
        optionObjIDArray[0] = k;
        optionObjNameArray[0] = selectedSpell;
        optionPacketSender(0);
    }

    public void castonitem(int i, int j)
    {
        selectspell(i);
        optionIDArray[0] = 600;
        optionObjIDArray[0] = j;
        optionObjNameArray[0] = selectedSpell;
        optionPacketSender(0);
    }

    public void depositeverything()
    {
        for(int i = 0; i < inventoryItemID.length; i++)
        {
            int j = inventoryCount(i);
            for(int l = j; l > 0; l--)
            {
                int k = inventoryCount(i);
                if(k >= 50000)
                    deposit(inventoryItemID[i], 50000);
                if(k < 50000)
                    deposit(inventoryItemID[i], k);
            }

        }

    }

    public int finditempos(int i)
    {
        for(int j = 0; j < inventoryItemID.length; j++)
            if(inventoryItemID[j] == i && j != lastitempos)
            {
                lastitempos = j;
                return j;
            }

        return -1;
    }

    public void selectitemid(int i)
    {
        for(int j = 0; j < inventoryItemID.length; j++)
            if(inventoryItemID[j] == i)
            {
                selectedItem = j;
                toolbar = 0;
                selectedItemName = Class1.itemNameArray[inventoryItemID[j]];
            }

    }

    public void useitemposwithitempos(int i, int j)
    {
        selectitem(i);
        optionIDArray[0] = 610;
        optionObjIDArray[0] = j;
        optionObjNameArray[0] = i;
        optionPacketSender(0);
    }

    public void useitemwithitem(int i, int j)
    {
        int k = finditempos(i);
        int l = finditempos(j);
        selectitemid(k);
        optionIDArray[0] = 610;
        optionObjIDArray[0] = l;
        optionObjNameArray[0] = k;
        optionPacketSender(0);
    }

    public void buyitem(int i)
    {
        int j = Class1.anInt144;
        int k = anInt900 + anIntArray738[i];
        if(k < 10)
            k = 10;
        int l = (k * Class1.shopBaseWorth[shopItemID[i]]) / 100;
        super.packets.packetID(157);
        super.packets.variables343(shopItemID[i]);
        super.packets.method332(l);
        super.packets.sendpacket();
    }

    public void buyitemid(int i)
    {
        int j = selectShopItem(i);
        int k = Class1.anInt144;
        int l = anInt900 + anIntArray738[j];
        if(l < 10)
            l = 10;
        int i1 = (l * Class1.shopBaseWorth[i]) / 100;
        super.packets.packetID(157);
        super.packets.variables343(shopItemID[j]);
        super.packets.method332(i1);
        super.packets.sendpacket();
    }

    public void sellitem(int i)
    {
        int j = Class1.anInt144;
        int k = anInt899 + anIntArray738[i];
        if(k < 10)
            k = 10;
        int l = (k * Class1.shopBaseWorth[shopItemID[i]]) / 100;
        super.packets.packetID(211);
        super.packets.variables343(shopItemID[i]);
        super.packets.method332(l);
        super.packets.sendpacket();
    }

    public void sellitemid(int i)
    {
        int j = selectShopItem(i);
        int k = Class1.anInt144;
        int l = anInt899 + anIntArray738[j];
        if(l < 10)
            l = 10;
        int i1 = (l * Class1.shopBaseWorth[i]) / 100;
        super.packets.packetID(211);
        super.packets.variables343(shopItemID[j]);
        super.packets.method332(i1);
        super.packets.sendpacket();
    }

    public int selectShopItem(int i)
    {
        for(int j = 0; j <= anIntArray738.length; j++)
            if(shopItemID[j] == i)
                return j;

        return -1;
    }

    public int shopItemCountID(int i)
    {
        for(int j = 0; j <= anIntArray738.length; j++)
            if(shopItemID[j] == i)
                return shopItemCount[j];

        return 0;
    }

    public int shopItemCount(int i)
    {
        return shopItemCount[i];
    }

    public void closeshop()
    {
        super.packets.packetID(56);
        super.packets.sendpacket();
        aBoolean727 = false;
        System.out.println("CloseShop()");
        XClient.sendPacket("SHOPWINDOW 0");
    }

    public int getrandom(int i, int j)
    {
        return generator.nextInt((j + 1) - i) + i;
    }

    public int itemx(int i)
    {
        for(int j = 0; j < itemIDArray.length; j++)
        {
            int k = itemIDArray[j];
            if(k == i)
                return itemXArray[j] + myPlayerX1;
        }

        return -1;
    }

    public int itemy(int i)
    {
        for(int j = 0; j < itemIDArray.length; j++)
        {
            int k = itemIDArray[j];
            if(k == i)
                return itemYArray[j] + myPlayerY1;
        }

        return -1;
    }

    public boolean itemat(int i, int j, int k)
    {
        for(int l = 0; l < itemCount; l++)
            if(itemIDArray[l] == i && itemx(l) == j && itemy(l) == k)
                return true;

        return false;
    }

    public int findnearestitem(int i)
    {
        for(int j = 0; j < itemCount; j++)
            if(itemIDArray[j] == i && findnearestitemx(i) == itemx(j) && findnearestitemy(i) == itemy(j))
                return j;

        return -1;
    }

    public void itemtake(int i)
    {
        int j = findnearestitem(i);
        optionIDArray[0] = 220;
        optionObjXArray[0] = itemXArray[j];
        optionObjYArray[0] = itemYArray[j];
        optionObjIDArray[0] = i;
        optionPacketSender(0);
    }

    public void takenearestitem(int i)
    {
        int j = findnearestitem(i);
        super.packets.packetID(104);
        super.packets.variables343(itemXArray[j]);
        super.packets.variables343(itemYArray[j]);
        super.packets.variables343(j);
        super.packets.variables343(i);
        super.packets.sendpacket();
    }

    public int findnearestitemx(int i)
    {
        int j = 1;
        byte byte0 = 50;
        int k = posX();
        int l = posY();
        if(itemat(i, k, l))
            return k;
        for(int i1 = 1; i1 <= byte0; i1++)
        {
            for(int j1 = 1; j1 <= i1; j1++)
            {
                k += j;
                if(itemat(i, k, l))
                    return k;
            }

            for(int k1 = 1; k1 <= i1; k1++)
            {
                l += j;
                if(itemat(i, k, l))
                    return k;
            }

            j = 0 - j;
        }

        return -1;
    }

    public int findnearestitemy(int i)
    {
        int j = 1;
        byte byte0 = 50;
        int k = posX();
        int l = posY();
        if(itemat(i, k, l))
            return l;
        for(int i1 = 1; i1 <= byte0; i1++)
        {
            for(int j1 = 1; j1 <= i1; j1++)
            {
                k += j;
                if(itemat(i, k, l))
                    return l;
            }

            for(int k1 = 1; k1 <= i1; k1++)
            {
                l += j;
                if(itemat(i, k, l))
                    return l;
            }

            j = 0 - j;
        }

        return -1;
    }

    public int bankCount(int i)
    {
        return bankItemCount[i];
    }

    public int bankCountID(int i)
    {
        int j = Class1.anInt144;
        int k = 0;
        for(int l = 0; l < bankItemID.length; l++)
            if(bankItemID[l] == i)
                k = bankItemCount[l];

        return k;
    }

    public int inventoryPositionCount(int i)
    {
        return inventoryCount(inventoryItemID[i]);
    }

    public void mageplayerid(int i, int j)
    {
        selectspell(i);
        optionIDArray[0] = 800;
        optionObjIDArray[0] = PlayerArray[j].ID;
        optionObjNameArray[0] = selectedSpell;
        optionPacketSender(0);
    }

    public void selectspell(int i)
    {
        selectedSpell = i;
        toolbar = 0;
    }

    public void magicplayer(int i, int j)
    {
        selectspell(i);
        optionIDArray[0] = 800;
        optionObjIDArray[0] = j;
        optionObjNameArray[0] = selectedSpell;
        macroaction();
    }

    public void selectitem(int i)
    {
        selectedItem = i;
        toolbar = 0;
        selectedItemName = Class1.itemNameArray[inventoryItemID[i]];
    }

    public void atobjectwith(int i, int j)
    {
        selectitem(i);
        for(int k = 0; k < objID.length; k++)
        {
            int l = objID[k];
            if(l == j)
            {
                optionIDArray[0] = 410;
                optionObjXArray[0] = objXArray[k];
                optionObjYArray[0] = objYArray[k];
                optionObjIDArray[0] = anIntArray763[k];
                optionObjNameArray[0] = objID[k];
                anIntArray805[0] = i;
                optionPacketSender(0);
                macroaction();
            }
        }

    }

    public void accepttrade1()
    {
        tradeWindow2 = true;
        super.packets.packetID(38);
        super.packets.sendpacket();
    }

    public void accepttrade2()
    {
        tradeFinished = true;
        super.packets.packetID(65);
        super.packets.sendpacket();
    }

    public void declinetrade()
    {
        tradeWindow = false;
        super.packets.packetID(178);
        super.packets.sendpacket();
    }

    public void acceptduel1()
    {
        duelWindow2 = true;
        super.packets.packetID(245);
        super.packets.sendpacket();
    }

    public void acceptduel2()
    {
        duelFinished = true;
        super.packets.packetID(24);
        super.packets.sendpacket();
    }

    public void declineduel()
    {
        duelWindow = false;
        super.packets.packetID(82);
        super.packets.sendpacket();
    }

    public void chat(String s)
    {
        int i = Class17.method400(s);
        method34(Class17.aByteArray569, i);
        s = Class17.method399(Class17.aByteArray569, 0, i);
        s = Class16.ChatFilter(s);
        myPlayer.anInt161 = 150;
        myPlayer.lastChatMessage = s;
        chatText("@yel@[" + myPlayer.name + "] " + s, 2);
    }

    public void readword()
    {
        if(slword.exists())
            modifiedTime = slword.lastModified();
        try
        {
            BufferedReader bufferedreader = new BufferedReader(new FileReader(slword));
            String s;
            while((s = bufferedreader.readLine()) != null) 
            {
                word = s;
                System.out.println("Sleep Word Read Successfully: " + word);
            }
            bufferedreader.close();
        }
        catch(IOException ioexception) { }
    }

    public void removebyid(int i)
    {
        int j = 0;
        do
        {
            if(j >= inventoryItemID.length)
                break;
            if(inventoryItemID[j] == i)
            {
                super.packets.packetID(170);
                super.packets.variables343(j);
                super.packets.sendpacket();
                break;
            }
            j++;
        } while(true);
    }

    public void remove(int i)
    {
        super.packets.packetID(170);
        super.packets.variables343(i);
        super.packets.sendpacket();
    }

    public void wieldbyid(int i)
    {
        int j = 0;
        do
        {
            if(j >= inventoryItemID.length)
                break;
            if(inventoryItemID[j] == i)
            {
                super.packets.packetID(12);
                super.packets.variables343(j);
                super.packets.sendpacket();
                break;
            }
            j++;
        } while(true);
    }

    public void wield(int i)
    {
        super.packets.packetID(12);
        super.packets.variables343(i);
        super.packets.sendpacket();
    }

    public void dropitembyid(int i)
    {
        for(int j = 0; j < inventoryItemID.length; j++)
            if(inventoryItemID[j] == i)
            {
                super.packets.packetID(196);
                super.packets.variables343(j);
                super.packets.sendpacket();
                selectedItem = -1;
                toolbar = 0;
            }

    }

    public void dropitem(int i)
    {
        super.packets.packetID(196);
        super.packets.variables343(i);
        super.packets.sendpacket();
        selectedItem = -1;
        toolbar = 0;
    }

    public void followplayer(int i)
    {
        super.packets.packetID(36);
        super.packets.variables343(i);
        super.packets.sendpacket();
    }

    public void duelplayer(int i)
    {
        super.packets.packetID(89);
        super.packets.variables343(i);
        super.packets.sendpacket();
    }

    public void tradeplayer(int i)
    {
        super.packets.packetID(250);
        super.packets.variables343(i);
        super.packets.sendpacket();
    }

    public void attackplayer(int i)
    {
        super.packets.packetID(210);
        super.packets.variables343(i);
        super.packets.sendpacket();
    }

    public int playerfromname(String s)
    {
        for(int i = 0; i < PlayerCount; i++)
            if(PlayerArray[i].name != null && PlayerArray[i].name.equalsIgnoreCase(s))
                return PlayerArray[i].ID;

        return -1;
    }

    public void talktonpc2(int i)
    {
        optionIDArray[0] = 720;
        optionObjXArray[0] = NPCArray[i].posX;
        optionObjYArray[0] = NPCArray[i].posY;
        optionObjIDArray[0] = NPCArray[i].ID;
        toolbar = 0;
        optionPacketSender(0);
        macroaction();
    }

    public int getnpcbyname(String s)
    {
        for(int i = 0; i < npccount(); i++)
        {
            String s1 = Class1.NPCNameArray[NPCArray[i].combatlvl];
            if(s1.equalsIgnoreCase(s))
                return i;
        }

        return -1;
    }

    public void npcbyname(String s)
    {
        int i = 0;
        do
        {
            if(i >= npccount())
                break;
            String s1 = Class1.NPCNameArray[NPCArray[i].combatlvl];
            if(s1.equalsIgnoreCase(s))
            {
                talktonpc2(i);
                break;
            }
            i++;
        } while(true);
    }

    public void savePic(byte abyte0[])
    {
        int i = 1;
        byte byte0 = 0;
        byte abyte1[] = new byte[10200];
        int j;
        for(j = 0; j < 255;)
        {
            int k = abyte0[i++] & 0xff;
            for(int i1 = 0; i1 < k; i1++)
                abyte1[j++] = byte0;

            byte0 = (byte)(255 - byte0);
        }

label0:
        for(int l = 1; l < 40; l++)
        {
            int j1 = 0;
            do
            {
                if(j1 >= 255)
                    continue label0;
                int k1 = abyte0[i++] & 0xff;
                for(int l1 = 0; l1 < k1; l1++)
                {
                    abyte1[j] = abyte1[j - 255];
                    j++;
                    j1++;
                }

                if(j1 < 255)
                {
                    abyte1[j] = (byte)(255 - abyte1[j - 255]);
                    j++;
                    j1++;
                }
            } while(true);
        }

        System.out.println("Writing HC.BMP");
        saveOutput("HC.BMP", abyte1);
    }

    public void saveOutput(String s, byte abyte0[])
    {
        try
        {
            FileOutputStream fileoutputstream = new FileOutputStream(s);
            fileoutputstream.write(66);
            fileoutputstream.write(77);
            int i = 1342;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 62;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 40;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 256;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 40;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 1;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            i = 1;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            i = 0;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 0;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 0;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 0;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 0;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            i = 0;
            fileoutputstream.write(i & 0xff);
            fileoutputstream.write(i >> 8 & 0xff);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            fileoutputstream.write(0);
            fileoutputstream.write(255);
            fileoutputstream.write(255);
            fileoutputstream.write(255);
            fileoutputstream.write(0);
            int j = 9945;
            for(int k = 0; k < 40; k++)
            {
                for(int l = 0; l < 32; l++)
                {
                    byte byte0 = 0;
                    for(int i1 = 0; i1 < 8; i1++)
                    {
                        byte0 = (byte)(2 * byte0);
                        if(l == 31 && i1 == 7)
                            continue;
                        if(abyte0[j] != 0)
                            byte0++;
                        j++;
                    }

                    fileoutputstream.write(byte0);
                }

                j -= 510;
            }

            fileoutputstream.close();
        }
        catch(IOException ioexception)
        {
            System.out.println("EXCEPTION");
        }
    }

    public int pos(char c, String s)
    {
        return s.indexOf(c) + 1;
    }

    public String copy(int i, int j, String s)
    {
        String s1 = "";
        for(int k = i - 1; k < j; k++)
            s1 = s1 + s.charAt(k);

        return s1;
    }

    public void gettime()
    {
        int i = cal.get(10);
        int j = cal.get(12);
        int k = cal.get(13);
        if(i < 10 && j > 10 && k > 10)
            currenttime = "@gre@(@whi@0" + i + "@gre@:@whi@" + j + "@gre@:@whi@" + k + "@gre@)@whi@";
        if(i < 10 && j < 10)
            currenttime = "@gre@(@whi@0" + i + "@gre@:@whi@0" + j + "@gre@:@whi@" + k + "@gre@)@whi@";
        if(i < 10 && j < 10 && k < 10)
            currenttime = "@gre@(@whi@0" + i + "@gre@:@whi@0" + j + "@gre@:@whi@0" + k + "@gre@)@whi@";
        if(i < 10 && k < 10)
            currenttime = "@gre@(@whi@0" + i + "@gre@:@whi@" + j + "@gre@:@whi@0" + k + "@gre@)@whi@";
        if(i >= 10 && j < 10)
            currenttime = "@gre@(@whi@" + i + "@gre@:@whi@0" + j + "@gre@:@whi@" + k + "@gre@)@whi@";
        if(i < 10 && j > 10)
            currenttime = "@gre@(@whi@0" + i + "@gre@:@whi@" + j + "@gre@:@whi@" + k + "@gre@)@whi@";
        if(i < 10 && j > 10 && k > 10)
            currenttime = "@gre@(@whi@0" + i + "@gre@:@whi@" + j + "@gre@:@whi@" + k + "@gre@)@whi@";
        if(i < 10 && k > 10)
            currenttime = "@gre@(@whi@0" + i + "@gre@:@whi@" + j + "@gre@:@whi@" + k + "@gre@)@whi@";
        if(i >= 10 && j > 10)
            currenttime = "@gre@(@whi@" + i + "@gre@:@whi@" + j + "@gre@:@whi@" + k + "@gre@)@whi@";
        if(k < 10 && j < 10)
            currenttime = "@gre@(@whi@" + i + "@gre@:@whi@0" + j + "@gre@:@whi@0" + k + "@gre@)@whi@";
        if(j > 9)
            currenttime = "@gre@(@whi@" + i + "@gre@:@whi@" + j + "@gre@:@whi@" + k + "@gre@)@whi@";
        if(k < 10)
            currenttime = "@gre@(@whi@" + i + "@gre@:@whi@" + j + "@gre@:@whi@0" + k + "@gre@)@whi@";
    }

    public void forcelogout()
    {
        method22();
        loggedout = true;
    }

    public void login()
    {
        if(boundsocket)
            try
            {
                method21(username, password, false);
                System.out.println("[><] UID " + super.abc);
                if(lastFightMode != -1)
                {
                    setmode(lastFightMode);
                    chatText2("@bot@Setting Fightmode to " + lastFightMode);
                } else
                {
                    setmode(1);
                }
            }
            catch(Exception exception)
            {
                System.out.println("Connection Error!");
            }
        else
            System.out.println("You need to be connected to the WasteDBoT Application to login.");
    }

    public void changeworld(int i)
    {
        if(boundsocket)
            if(i == 51)
            {
                Applet_Sub1_Sub1.Server = "217.138.31.250";
                Applet_Sub1_Sub1.ServerPort = 43594;
                members = false;
                System.out.println("[><] Server 51");
            } else
            if(i == 52)
            {
                Applet_Sub1_Sub1.Server = "217.138.31.250";
                Applet_Sub1_Sub1.ServerPort = 43595;
                members = true;
                System.out.println("[><] Server 52");
            } else
            if(i == 53)
            {
                Applet_Sub1_Sub1.Server = "209.237.251.20";
                Applet_Sub1_Sub1.ServerPort = 43594;
                members = false;
                System.out.println("[><] Server 53");
            } else
            if(i == 54)
            {
                Applet_Sub1_Sub1.Server = "209.237.251.20";
                Applet_Sub1_Sub1.ServerPort = 43595;
                members = true;
                System.out.println("[><] Server 54");
            } else
            if(i == 55)
            {
                Applet_Sub1_Sub1.Server = "69.22.158.236";
                Applet_Sub1_Sub1.ServerPort = 43594;
                members = false;
                System.out.println("[><] Server 55");
            } else
            if(i == 56)
            {
                Applet_Sub1_Sub1.Server = "69.22.158.236";
                Applet_Sub1_Sub1.ServerPort = 43595;
                members = true;
                System.out.println("[><] Server 56");
            } else
            {
                Applet_Sub1_Sub1.Server = "217.138.31.250";
                Applet_Sub1_Sub1.ServerPort = 43594;
                members = false;
                System.out.println("[><] Server 51");
            }
    }

    public void answer(int i)
    {
        super.packets.packetID(203);
        super.packets.variables348(i);
        super.packets.sendpacket();
        answerMenu = false;
        System.out.println("Answer(" + i + ")");
        XClient.sendPacket("ANSWERMENU 0");
    }

    public void closebank()
    {
        super.packets.packetID(50);
        super.packets.sendpacket();
        aBoolean879 = false;
        XClient.sendPacket("BANKWINDOW 0");
    }

    public void withdraw(int i, int j)
    {
        super.packets.packetID(83);
        super.packets.variables343(i);
        super.packets.variables343(j);
        super.packets.sendpacket();
    }

    public void deposit(int i, int j)
    {
        super.packets.packetID(145);
        super.packets.variables343(i);
        super.packets.variables343(j);
        super.packets.sendpacket();
    }

    public void macroaction()
    {
        super.anInt12 = 0;
    }

    public void atobject(int i, int j)
    {
        super.packets.packetID(90);
        super.packets.variables343(i);
        super.packets.variables343(j);
        super.packets.sendpacket();
    }

    public void takeat(int i, int j, int k)
    {
        optionIDArray[0] = 220;
        optionObjXArray[0] = i - myPlayerX1;
        optionObjYArray[0] = j - myPlayerY1;
        optionObjIDArray[0] = k;
        optionPacketSender(0);
        macroaction();
    }

    public void takebyname(String s)
    {
        int i = Class1.anInt144;
        String s1 = "";
        for(int j = 0; j < itemIDArray.length; j++)
        {
            s1 = Class1.itemNameArray[itemIDArray[j]];
            if(s1.equalsIgnoreCase(s))
            {
                optionIDArray[0] = 220;
                optionObjXArray[0] = itemXArray[j];
                optionObjYArray[0] = itemYArray[j];
                optionObjIDArray[0] = itemIDArray[j];
                optionPacketSender(0);
                macroaction();
                return;
            }
        }

        if(s1 == null)
            System.out.println("No Item By That Name Found");
    }

    public void takebyid(int i)
    {
        for(int j = 0; j < itemIDArray.length; j++)
        {
            int k = itemIDArray[j];
            if(k == i)
            {
                optionIDArray[0] = 220;
                optionObjXArray[0] = itemXArray[j];
                optionObjYArray[0] = itemYArray[j];
                optionObjIDArray[0] = itemIDArray[j];
                optionPacketSender(0);
                macroaction();
            }
        }

    }

    public int objx(int i)
    {
        for(int j = 0; j < objCount; j++)
        {
            int k = objID[j];
            if(k == i)
                return objXArray[j] + myPlayerX1;
        }

        return -1;
    }

    public int objy(int i)
    {
        for(int j = 0; j < objCount; j++)
        {
            int k = objID[j];
            if(k == i)
                return objYArray[j] + myPlayerY1;
        }

        return -1;
    }

    public boolean objat(int i, int j, int k)
    {
        for(int l = 0; l < objCount; l++)
            if(objID[l] == i && objx(l) + myPlayerX1 == j && objy(l) + myPlayerY1 == k)
                return true;

        return false;
    }

    public int findnearestobj(int i)
    {
        for(int j = 0; j < objCount; j++)
            if(objID[j] == i && findnearestobjx(i) == objx(j) && findnearestobjy(i) == objy(j))
                return j;

        return -1;
    }

    public int findnearestobjx(int i)
    {
        int j = 1;
        byte byte0 = 50;
        int k = posX();
        int l = posY();
        if(objat(i, k, l))
            return k;
        for(int i1 = 1; i1 <= byte0; i1++)
        {
            for(int j1 = 1; j1 <= i1; j1++)
            {
                k += j;
                if(objat(i, k, l))
                    return k;
            }

            for(int k1 = 1; k1 <= i1; k1++)
            {
                l += j;
                if(objat(i, k, l))
                    return k;
            }

            j = 0 - j;
        }

        return -1;
    }

    public int findnearestobjy(int i)
    {
        int j = 1;
        byte byte0 = 50;
        int k = posX();
        int l = posY();
        if(objat(i, k, l))
            return l;
        for(int i1 = 1; i1 <= byte0; i1++)
        {
            for(int j1 = 1; j1 <= i1; j1++)
            {
                k += j;
                if(objat(i, k, l))
                    return l;
            }

            for(int k1 = 1; k1 <= i1; k1++)
            {
                l += j;
                if(objat(i, k, l))
                    return l;
            }

            j = 0 - j;
        }

        return -1;
    }

    public void action(int i)
    {
        int j = 0;
        do
        {
            if(j >= objCount)
                break;
            int k = objID[j];
            if(k == i)
            {
                optionIDArray[0] = 420;
                optionObjXArray[0] = objXArray[j];
                optionObjYArray[0] = objYArray[j];
                optionObjIDArray[0] = anIntArray763[j];
                optionObjNameArray[0] = objID[j];
                optionPacketSender(0);
                macroaction();
                break;
            }
            j++;
        } while(true);
    }

    public void action123b(int i)
    {
        optionIDArray[0] = 2400;
        optionObjXArray[0] = objXArray[i];
        optionObjYArray[0] = objYArray[i];
        optionObjIDArray[0] = anIntArray763[i];
        optionObjNameArray[0] = objID[i];
        optionPacketSender(0);
        macroaction();
    }

    public void action123(int i)
    {
        optionIDArray[0] = 420;
        optionObjXArray[0] = objXArray[i];
        optionObjYArray[0] = objYArray[i];
        optionObjIDArray[0] = anIntArray763[i];
        optionObjNameArray[0] = objID[i];
        optionPacketSender(0);
        macroaction();
    }

    public void atobj2at(int i, int j)
    {
        optionIDArray[0] = 2400;
        optionObjXArray[0] = i - myPlayerX1;
        optionObjYArray[0] = j - myPlayerY1;
        optionPacketSender(0);
        macroaction();
    }

    public void atobjat(int i, int j)
    {
        optionIDArray[0] = 420;
        optionObjXArray[0] = i - myPlayerX1;
        optionObjYArray[0] = j - myPlayerY1;
        optionPacketSender(0);
        macroaction();
    }

    public void actionnearest(int i)
    {
        optionIDArray[0] = 420;
        optionObjXArray[0] = objXArray[i];
        optionObjYArray[0] = objYArray[i];
        optionObjIDArray[0] = anIntArray763[i];
        optionObjNameArray[0] = objID[i];
        optionPacketSender(0);
        macroaction();
        System.out.println("ActionNearest(" + (objXArray[i] + myPlayerX1) + "," + (objYArray[i] + myPlayerY1) + "," + anIntArray763[i] + "," + objID[i] + ")");
    }

    public void action2(int i)
    {
        for(int j = 0; j < objID.length; j++)
        {
            int k = objID[j];
            if(k == i)
            {
                optionIDArray[0] = 2400;
                optionObjXArray[0] = objXArray[j];
                optionObjYArray[0] = objYArray[j];
                optionObjIDArray[0] = anIntArray763[j];
                optionObjNameArray[0] = objID[j];
                optionPacketSender(0);
                macroaction();
                System.out.println("Action(" + (objXArray[j] + myPlayerX1) + "," + (objYArray[j] + myPlayerY1) + "," + anIntArray763[j] + "," + objID[j] + ")");
            }
        }

    }

    public void actionnearest2(int i)
    {
        optionIDArray[0] = 2400;
        optionObjXArray[0] = objXArray[i];
        optionObjYArray[0] = objYArray[i];
        optionObjIDArray[0] = anIntArray763[i];
        optionObjNameArray[0] = objID[i];
        optionPacketSender(0);
        macroaction();
        System.out.println("ActionNear2(" + objXArray[i] + "," + objYArray[i] + "," + anIntArray763[i] + "," + objID[i] + ")");
    }

    public void actionincoords(int i, int j, int k, int l, int i1)
    {
        for(int j1 = 0; j1 < objID.length; j1++)
        {
            int k1 = objID[j1];
            if(k1 == i && objXArray[j1] >= j && objXArray[j1] <= l && objYArray[j1] >= k && objYArray[j1] <= i1)
            {
                optionIDArray[0] = 420;
                optionObjXArray[0] = objXArray[j1];
                optionObjYArray[0] = objYArray[j1];
                optionObjIDArray[0] = anIntArray763[j1];
                optionObjNameArray[0] = objID[j1];
                optionPacketSender(0);
                macroaction();
            }
        }

    }

    public void take123(int i)
    {
        optionIDArray[0] = 220;
        optionObjXArray[0] = itemXArray[i];
        optionObjYArray[0] = itemYArray[i];
        optionObjIDArray[0] = itemIDArray[i];
        optionPacketSender(0);
        macroaction();
    }

    public int nearestitembyid(int i)
    {
        int ai[] = new int[1500];
        int ai1[] = new int[1500];
        int ai2[] = new int[1500];
        int j = 0;
        boolean flag = false;
        boolean flag1 = false;
        double d = 9999999D;
        int k = -1;
        for(int l = 0; l < 1500; l++)
            if(itemIDArray[l] == i)
            {
                ai[j] = itemXArray[l];
                ai1[j] = itemYArray[l];
                ai2[j] = l;
                j++;
            }

        try
        {
            for(int i1 = 0; i1 <= j; i1++)
                if(itemIDArray[ai2[i1]] == i)
                {
                    int j1 = Math.abs(Math.abs(myPlayerX2) - Math.abs(ai[i1]));
                    int k1 = Math.abs(Math.abs(myPlayerY2) - Math.abs(ai1[i1]));
                    if(j1 == 0 || k1 == 0)
                    {
                        if((double)(j1 + k1) < d)
                        {
                            d = j1 + k1;
                            k = ai2[i1];
                        }
                    } else
                    if((double)(j1 + k1) * 0.5D < d)
                    {
                        d = (double)(j1 + k1) * 0.5D;
                        k = ai2[i1];
                    }
                }

        }
        catch(Exception exception) { }
        if(k > -1 && k <= 1500)
            return k;
        else
            return -1;
    }

    public int nearestobjbyid(int i)
    {
        int ai[] = new int[objID.length];
        int ai1[] = new int[objID.length];
        int ai2[] = new int[objID.length];
        int j = 0;
        boolean flag = false;
        boolean flag1 = false;
        double d = 9999999D;
        int k = -1;
        for(int l = 0; l < objID.length; l++)
            if(objID[l] == i)
            {
                ai[j] = objXArray[l];
                ai1[j] = objYArray[l];
                ai2[j] = l;
                j++;
            }

        try
        {
            for(int i1 = 0; i1 <= j; i1++)
                if(objID[ai2[i1]] == i)
                {
                    int j1 = Math.abs(Math.abs(myPlayerX2) - Math.abs(ai[i1]));
                    int k1 = Math.abs(Math.abs(myPlayerY2) - Math.abs(ai1[i1]));
                    if(j1 == 0 || k1 == 0)
                    {
                        if((double)(j1 + k1) < d)
                        {
                            d = j1 + k1;
                            k = ai2[i1];
                        }
                    } else
                    if((double)(j1 + k1) * 0.5D < d)
                    {
                        d = (double)(j1 + k1) * 0.5D;
                        k = ai2[i1];
                    }
                }

        }
        catch(Exception exception) { }
        if(k > -1)
            return k;
        else
            return -1;
    }

    public void atobject2(int i, int j)
    {
        super.packets.packetID(227);
        super.packets.variables343(i);
        super.packets.variables343(j);
        super.packets.sendpacket();
        macroaction();
    }

    public void prayeroff(int i)
    {
        super.packets.packetID(164);
        super.packets.variables343(i);
        super.packets.sendpacket();
        aBooleanArray679[i] = false;
        method97("prayeroff");
    }

    public void prayeron(int i)
    {
        super.packets.packetID(17);
        super.packets.variables343(i);
        super.packets.sendpacket();
        aBooleanArray679[i] = true;
        method97("prayeron");
    }

    public int posX()
    {
        return myPlayerX2 + myPlayerX1;
    }

    public int posY()
    {
        return myPlayerY2 + myPlayerY1;
    }

    public void useitemid(int i)
    {
        for(int j = 0; j < inventoryItemID.length; j++)
            if(inventoryItemID[j] == i)
            {
                super.packets.packetID(219);
                super.packets.variables343(j);
                super.packets.sendpacket();
                return;
            }

    }

    public void useitem(int i)
    {
        super.packets.packetID(219);
        super.packets.variables343(i);
        super.packets.sendpacket();
    }

    public void thievenpc(int i)
    {
        if(i > 0)
        {
            optionIDArray[0] = 725;
            optionObjXArray[0] = NPCArray[i].posX;
            optionObjYArray[0] = NPCArray[i].posY;
            optionObjIDArray[0] = NPCArray[i].ID;
            optionPacketSender(0);
            macroaction();
        }
    }

    public void talktonpc(int i)
    {
        int j = getnearestnpcbyid(i);
        optionIDArray[0] = 720;
        optionObjXArray[0] = NPCArray[j].posX;
        optionObjYArray[0] = NPCArray[j].posY;
        optionObjIDArray[0] = NPCArray[j].ID;
        toolbar = 0;
        optionPacketSender(0);
        macroaction();
    }

    public void walkto(int i, int j)
    {
        optionObjXArray[0] = i - myPlayerX1;
        optionObjYArray[0] = j - myPlayerY1;
        optionObjIDArray[0] = 0;
        optionObjNameArray[0] = 0;
        anIntArray805[0] = 0;
        optionIDArray[0] = 920;
        optionPacketSender(0);
    }

    public void attacknpc(int i)
    {
        if(i > 0)
        {
            optionIDArray[0] = 715;
            optionObjXArray[0] = NPCArray[i].posX;
            optionObjYArray[0] = NPCArray[i].posY;
            optionObjIDArray[0] = NPCArray[i].ID;
            optionPacketSender(0);
        }
    }

    public int getnearestnpcbyid(int i)
    {
        int ai[] = new int[npccount()];
        int ai1[] = new int[npccount()];
        int ai2[] = new int[npccount()];
        int j = 0;
        boolean flag = false;
        boolean flag1 = false;
        double d = 9999999D;
        int k = -1;
        for(int l = 0; l < npccount(); l++)
            if(NPCArray[l].combatlvl == i && NPCArray[l].status != 8 && NPCArray[l].status != 9)
            {
                ai[j] = (NPCArray[l].posX - 64) / anInt946;
                ai1[j] = (NPCArray[l].posY - 64) / anInt946;
                ai2[j] = l;
                j++;
            }

        try
        {
            for(int i1 = 0; i1 <= j; i1++)
                if(NPCArray[ai2[i1]].combatlvl == i)
                {
                    int j1 = Math.abs(Math.abs(myPlayerX2) - Math.abs(ai[i1]));
                    int k1 = Math.abs(Math.abs(myPlayerY2) - Math.abs(ai1[i1]));
                    if(j1 == 0 || k1 == 0)
                    {
                        if((double)(j1 + k1) < d)
                        {
                            d = j1 + k1;
                            k = ai2[i1];
                        }
                    } else
                    if((double)(j1 + k1) * 0.5D < d)
                    {
                        d = (double)(j1 + k1) * 0.5D;
                        k = ai2[i1];
                    }
                }

        }
        catch(Exception exception) { }
        if(k > -1 && k < npccount())
            return k;
        else
            return -1;
    }

    public boolean isnpcattackable(int i)
    {
        return Class1.anIntArray116[i] > 0;
    }

    public int npccount()
    {
        return npccount;
    }

    public boolean incombat()
    {
        return myPlayer.status == 8 || myPlayer.status == 9;
    }

    public int fatigue()
    {
        return (fatigue * 100) / 750;
    }

    public void setmode(int i)
    {
        mouseClick = 0;
        fightMode = i;
        super.packets.packetID(119);
        super.packets.variables348(fightMode);
        super.packets.sendpacket();
        if(!macroOn)
            lockedFightMode = i;
        System.out.println("FightMode(" + i + ")");
    }

    public void Wait(int i)
    {
        try
        {
            Thread.sleep(i);
            return;
        }
        catch(InterruptedException interruptedexception)
        {
            return;
        }
    }

    public mudclient()
    {
        generator = new Random(1337L);
        toolkit = Toolkit.getDefaultToolkit();
        slword = new File("slword.txt");
        ARROWUP = 1004;
        ARROWDOWN = 1005;
        PGDN = 1002;
        PGUP = 1003;
        Xusername = "";
        Xpassword = "";
        word = "";
        arrowkeydown = false;
        arrowkeyup = false;
        pgupdown = false;
        pgdowndown = false;
        adown = false;
        ddown = false;
        sdown = false;
        wdown = false;
        homedown = false;
        enddown = false;
        loggedout = true;
        show = true;
        cal = new GregorianCalendar();
        lastFightMode = -1;
        sleepthresh = 101;
        myChat = "";
        playerChat = "";
        NPCChat = "";
        asleep = false;
        focusx = 1;
        focusy = 1;
        maphax = 1;
        macroOn = false;
        selectedNPC = -1;
        attackAttempts = 0;
        isSleeping = false;
        startXP = 0;
        currentXP = 0;
        lockedFightMode = -1;
        depositAllID = -1;
        withdrawAllID = -1;
        sleepword = null;
        doorx = -1;
        doory = -1;
        boundsocket = false;
        nogfxplz = false;
        xrotate = 912;
        anInt650 = 250;
        anInt651 = 5;
        anInt652 = 50;
        anInt653 = 18;
        anInt654 = 500;
        anInt655 = 1500;
        anInt656 = 5000;
        anInt657 = 5000;
        anInt658 = 500;
        anInt659 = 4000;
        anInt660 = 500;
        anInt661 = 8000;
        int i = Class1.anInt144;
        BTNtype = 1;
        WBoTint1 = 512;
        WBoTint2 = 384;
        ShowCombat = true;
        aBooleanArray662 = new boolean[1500];
        anIntArray664 = new int[8];
        anIntArray665 = new int[8];
        aBoolean666 = false;
        aBoolean668 = false;
        duelWindow2 = false;
        tradeWindow = false;
        tradeFinished = false;
        aBoolean675 = false;
        FogOfWar = true;
        anInt676 = 512;
        anInt677 = 334;
        anInt678 = 9;
        aBooleanArray679 = new boolean[50];
        aBoolean680 = false;
        aString681 = "";
        aString682 = "";
        CameraZoom = 550;
        anIntArray686 = new int[99];
        anIntArray687 = new int[50];
        anIntArray688 = new int[50];
        anIntArray689 = new int[50];
        anIntArray692 = new int[20];
        anIntArray693 = new int[20];
        anInt707 = 30;
        inventoryItemID = new int[35];
        anIntArray710 = new int[35];
        anIntArray711 = new int[35];
        CurrentXPArray = new int[18];
        aBooleanArray716 = new boolean[50];
        aBoolean717 = false;
        aBoolean718 = false;
        aBoolean719 = false;
        aBoolean720 = false;
        aBoolean721 = false;
        anIntArray722 = new int[50];
        anIntArray723 = new int[50];
        aBoolean727 = false;
        CurrentStatLevelArray = new int[18];
        mapangle = 128;
        anIntArray730 = new int[50];
        username = "";
        password = "";
        shopItemID = new int[256];
        shopItemCount = new int[256];
        anIntArray738 = new int[256];
        anIntArray740 = new int[500];
        anIntArray741 = new int[500];
        aBoolean745 = false;
        anIntArray747 = new int[500];
        anIntArray748 = new int[500];
        aBoolean757 = false;
        anIntArray758 = new int[50];
        anIntArray759 = new int[50];
        objXArray = new int[1500];
        objYArray = new int[1500];
        objID = new int[1500];
        anIntArray763 = new int[1500];
        selectedItem = -1;
        selectedItemName = "";
        aBoolean767 = false;
        NPCArray = new Class2[500];
        optionObjectArray = new String[250];
        itemXArray = new int[5000];
        itemYArray = new int[5000];
        itemIDArray = new int[5000];
        anIntArray773 = new int[5000];
        aStringArray774 = new String[5];
        aClass5Array781 = new Class5[500];
        anInt785 = -1;
        anIntArray787 = new int[8];
        anIntArray788 = new int[8];
        aBoolean789 = false;
        aString794 = "";
        anIntArray797 = new int[5];
        duelWindow = false;
        duelFinished = false;
        optionObjIDArray = new int[250];
        optionObjNameArray = new int[250];
        anIntArray805 = new int[250];
        anInt809 = -1;
        aBoolean810 = false;
        selectedSpell = -1;
        aClass5Array814 = new Class5[1500];
        anIntArray815 = new int[500];
        anIntArray816 = new int[256];
        anIntArray817 = new int[256];
        aStringArray821 = new String[50];
        aClass2Array822 = new Class2[500];
        aString824 = "";
        RealStatLevelArray = new int[18];
        aBooleanArray831 = new boolean[500];
        bankSlots = -1;
        anInt835 = -2;
        anIntArray837 = new int[20];
        anIntArray838 = new int[20];
        aString848 = "";
        aBoolean849 = false;
        answerMenu = false;
        aBoolean853 = false;
        aBoolean854 = false;
        aBoolean856 = false;
        aString861 = "";
        aString862 = "";
        aBoolean870 = false;
        anInt872 = 1;
        anInt873 = 2;
        anInt874 = 2;
        anInt875 = 8;
        anInt876 = 14;
        anInt878 = 1;
        aBoolean879 = false;
        aBoolean880 = true;
        anIntArray881 = new int[50];
        optionIDArray = new int[250];
        anIntArray887 = new int[20];
        anIntArray888 = new int[20];
        aBoolean890 = false;
        aClass2Array891 = new Class2[4000];
        anInt896 = 2;
        anInt897 = 40;
        selectedShopItem = -1;
        anInt904 = -2;
        aBoolean908 = false;
        anIntArray911 = new int[8];
        anIntArray912 = new int[8];
        aStringArray913 = new String[5];
        members = true;
        anInt916 = 48;
        aBoolean917 = false;
        anInt919 = -1;
        anInt920 = -1;
        anInt921 = -1;
        aBoolean922 = false;
        aClass2Array923 = new Class2[500];
        anIntArray934 = new int[50];
        anIntArray935 = new int[5];
        optionObjXArray = new int[250];
        optionObjYArray = new int[250];
        anInt940 = 1;
        hasAccepted = false;
        tradeWindow2 = false;
        anInt946 = 128;
        bankItemID = new int[256];
        bankItemCount = new int[256];
        aClass2Array957 = new Class2[5000];
        anIntArray960 = new int[8];
        anIntArray961 = new int[8];
        anIntArray962 = new int[8000];
        anIntArray963 = new int[8000];
        anIntArray965 = new int[50];
        anIntArray966 = new int[50];
        anIntArray967 = new int[50];
        anIntArray968 = new int[50];
        tradeItemID = new int[20];
        tradeItemCount = new int[20];
        anIntArray972 = new int[50];
        anInt974 = 2;
        myPlayer = new Class2();
        anInt978 = -1;
        aBoolean979 = true;
        anIntArray981 = new int[8192];
        anIntArray982 = new int[8192];
        PlayerArray = new Class2[500];
        anIntArray984 = new int[250];
        optionNameArray = new String[250];
        aBoolean992 = false;
        aClass5Array994 = new Class5[1000];
        anInt995 = 0xbc614e;
        System.out.println("$--------------------------------$");
        System.out.println("|WasteDBoT 1.0 - Phate & Lormsby |");
        System.out.println("$--------------------------------$");
        lefty = true;
        Applet_Sub1.mainwbot();
    }

    public Image createImage(int i, int j)
    {
        if(!super.nogfx)
        {
            if(Applet_Sub1.aFrame_Sub1_7 != null)
                return Applet_Sub1.aFrame_Sub1_7.createImage(i, j);
            if(Class8.anApplet370 != null)
                return Class8.anApplet370.createImage(i, j);
            else
                return super.createImage(i, j);
        } else
        {
            return null;
        }
    }

    public URL getCodeBase()
    {
        if(Class8.anApplet370 != null)
            return Class8.anApplet370.getCodeBase();
        else
            return super.getCodeBase();
    }

    public URL getDocumentBase()
    {
        if(Class8.anApplet370 != null)
            return Class8.anApplet370.getDocumentBase();
        else
            return super.getDocumentBase();
    }

    public Graphics getGraphics()
    {
        if(!super.nogfx)
        {
            if(Applet_Sub1.aFrame_Sub1_7 != null)
                return Applet_Sub1.aFrame_Sub1_7.getGraphics();
            if(Class8.anApplet370 != null)
                return Class8.anApplet370.getGraphics();
            else
                return super.getGraphics();
        } else
        {
            return null;
        }
    }

    public String getParameter(String s)
    {
        if(Class8.anApplet370 != null)
            return Class8.anApplet370.getParameter(s);
        else
            return super.getParameter(s);
    }

    public void appletvars()
    {
        String s;
        if(aBoolean979)
            s = getDocumentBase().getHost().toLowerCase();
        int i = 0;
        for(int j = 0; j < 99; j++)
        {
            int l = j + 1;
            int k1 = (int)((double)l + 300D * Math.pow(2D, (double)l / 7D));
            i += k1;
            anIntArray686[j] = i & 0xffffffc;
        }

        try
        {
            String s1 = getParameter("referid");
            anInt731 = Integer.parseInt(s1);
        }
        catch(Exception exception) { }
        try
        {
            String s2 = getParameter("member");
            int i1 = Integer.parseInt(s2);
            if(i1 == 1)
                members = true;
        }
        catch(Exception exception1) { }
        if(aBoolean979)
            Applet_Sub1_Sub1.ServerPort = 43594;
        super.anInt11 = 0;
        Applet_Sub1_Sub1.anInt615 = 1000;
        Applet_Sub1_Sub1.anInt614 = Class18.anInt573;
        try
        {
            String s3 = getParameter("poff");
            int j1 = Integer.parseInt(s3);
            Applet_Sub1_Sub1.ServerPort += j1;
            System.out.println("Offset: " + j1);
        }
        catch(Exception exception2) { }
        ConfigPile();
        if(aBoolean922)
            return;
        anInt948 = 2000;
        anInt949 = anInt948 + 100;
        anInt950 = anInt949 + 50;
        anInt954 = anInt950 + 1000;
        anInt951 = anInt954 + 10;
        anInt952 = anInt951 + 50;
        anInt953 = anInt952 + 10;
        aGraphics857 = getGraphics();
        method8(50);
        aClass6_Sub1_724 = new Class6_Sub1(anInt676, anInt677 + 12, 4000, this);
        aClass6_Sub1_724.aMudclient641 = this;
        aClass6_Sub1_724.method209(0, 0, anInt676, anInt677 + 12);
        Class4.aBoolean220 = false;
        Class4.anInt221 = anInt949;
        aClass4_798 = new Class4(aClass6_Sub1_724, 5);
        int k = ((Class6) (aClass6_Sub1_724)).anInt311 - 199;
        byte byte0 = 36;
        anInt799 = aClass4_798.method163(k, byte0 + 24, 196, 90, 1, 500, true);
        aClass4_925 = new Class4(aClass6_Sub1_724, 5);
        anInt926 = aClass4_925.method163(k, byte0 + 40, 196, 126, 1, 500, true);
        aClass4_826 = new Class4(aClass6_Sub1_724, 5);
        anInt827 = aClass4_826.method163(k, byte0 + 24, 196, 251, 1, 500, true);
        BigLoad();
        if(aBoolean922)
            return;
        UnpackFiles();
        if(aBoolean922)
            return;
        aClass10_739 = new Class10(aClass6_Sub1_724, 15000, 15000, 1000);
        aClass10_739.method281(anInt676 / 2, anInt677 / 2, anInt676 / 2, anInt677 / 2, anInt676, anInt678);
        aClass10_739.anInt390 = 2400;
        aClass10_739.anInt391 = 2400;
        aClass10_739.anInt392 = 1;
        aClass10_739.anInt393 = 2300;
        aClass10_739.method309(-50, -10, -50);
        aClass19_883 = new Class19(aClass10_739, aClass6_Sub1_724);
        aClass19_883.anInt589 = anInt948;
        LoadStuff();
        if(aBoolean922)
            return;
        AnimModels();
        if(aBoolean922)
            return;
        DownloadJunk();
        if(aBoolean922)
            return;
        if(members)
            LoadSounds();
        if(aBoolean922)
        {
            return;
        } else
        {
            method15(100, "Starting game...");
            method94();
            MenuOptions();
            CharDesign();
            MisUser();
            method5();
            method77();
            return;
        }
    }

    public static void parseData(String s)
    {
        PacketStore = s;
        PacketStore = s;
        PacketStored = true;
        PacketStored = true;
    }

    public void parseData2(String s)
    {
        if(!boundsocket)
        {
            boundsocket = true;
            System.out.println("[><] WasteDBoT Version Correct");
        }
        if(s.length() > 0)
            boundsocket = true;
        else
            s = s + " ";
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("GETS"))
            try
            {
                int i = pos(' ', s);
                int k14 = pos(',', s);
                int l26 = Integer.parseInt(s.substring(i, k14 - 1));
                String s11 = StatNameArray[l26];
                int i38 = CurrentStatLevelArray[l26];
                int j40 = RealStatLevelArray[l26];
                if(s.substring(k14, s.length()).equalsIgnoreCase("C"))
                    XClient.sendPacket("CSTAT " + s11 + " " + i38);
                else
                    XClient.sendPacket("TSTAT " + s11 + " " + j40);
            }
            catch(Exception exception)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("attacknpcbyname"))
            try
            {
                int j = pos(' ', s);
                String s9 = s.substring(j, s.length());
                int i27 = nearestnpcbyname(s9);
                if(i27 != -1)
                    attacknpc(i27);
                System.out.println("AttackName(" + s9 + ")");
            }
            catch(Exception exception1)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("selectshopitem"))
            try
            {
                int k = pos(' ', s);
                int l14 = Integer.parseInt(s.substring(k, s.length()));
                selectShopItem(l14);
                System.out.println("SelectShopItem(" + l14 + ")");
            }
            catch(Exception exception2)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("buyitem"))
            try
            {
                int l = pos(' ', s);
                int i15 = Integer.parseInt(s.substring(l, s.length()));
                buyitem(i15);
                System.out.println("BuyItem(" + i15 + ")");
            }
            catch(Exception exception3)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("buyitemid"))
            try
            {
                int i1 = pos(' ', s);
                int j15 = Integer.parseInt(s.substring(i1, s.length()));
                buyitemid(j15);
                System.out.println("BuyItemID(" + j15 + ")");
            }
            catch(Exception exception4)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("sellitem"))
            try
            {
                int j1 = pos(' ', s);
                int k15 = Integer.parseInt(s.substring(j1, s.length()));
                sellitem(k15);
                System.out.println("SellItem(" + k15 + ")");
            }
            catch(Exception exception5)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("sellitemid"))
            try
            {
                int k1 = pos(' ', s);
                int l15 = Integer.parseInt(s.substring(k1, s.length()));
                sellitemid(l15);
                System.out.println("SellItemID(" + l15 + ")");
            }
            catch(Exception exception6)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("showshop"))
            try
            {
                aBoolean727 = true;
                System.out.println("ShowShop()");
            }
            catch(Exception exception7)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("depositeverything"))
            try
            {
                depositthread = new depositeverything();
                System.out.println("DepositEverything()");
            }
            catch(Exception exception8)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("closeshop"))
            try
            {
                aBoolean727 = false;
                System.out.println("CloseShop()");
            }
            catch(Exception exception9)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("sleepthresh"))
            try
            {
                int l1 = pos(' ', s);
                int i16 = Integer.parseInt(s.substring(l1, s.length()));
                if(i16 < 0 || i16 > 100)
                    sleepthresh = 101;
                else
                    sleepthresh = i16;
                chatText2("@BOT@Sleepthresh set to - " + sleepthresh + ".");
            }
            catch(Exception exception10)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("itemtake"))
            try
            {
                int i2 = pos(' ', s);
                int j16 = Integer.parseInt(s.substring(i2, s.length()));
                int j27 = nearestitembyid(j16);
                if(j27 > -1 && j27 <= 1500)
                    take123(j27);
                System.out.println("TakeNearestItem(" + j27 + "," + itemXArray[j27] + "," + itemYArray[j27] + ")");
            }
            catch(Exception exception11)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("takenearestitem"))
            try
            {
                int j2 = pos(' ', s);
                int k16 = Integer.parseInt(s.substring(j2, s.length()));
                if(k16 > -1)
                    takenearestitem(k16);
                System.out.println("TakeNearestItem(" + k16 + ")");
            }
            catch(Exception exception12)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("actionnearestobjid"))
            try
            {
                int k2 = pos(' ', s);
                int l16 = Integer.parseInt(s.substring(k2, s.length()));
                int k27 = findnearestobj(l16);
                if(k27 > -1)
                {
                    action123(k27);
                    System.out.println("ActionNearestObj(" + k27 + ")");
                }
                System.out.println("ActionNearestObj(" + l16 + ")");
            }
            catch(Exception exception13)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("actionnearestobjid2"))
            try
            {
                int l2 = pos(' ', s);
                int i17 = Integer.parseInt(s.substring(l2, s.length()));
                int l27 = findnearestobj(i17);
                if(l27 > -1)
                    action123b(l27);
                System.out.println("ActionNearestObj2(" + i17 + ")");
            }
            catch(Exception exception14)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("BANKCOUNTID"))
            try
            {
                int i3 = pos(' ', s);
                int j17 = Integer.parseInt(s.substring(i3, s.length()));
                int i28 = bankCountID(j17);
                if(i28 < 1)
                    XClient.sendPacket("BANKCOUNTID 0");
                else
                    XClient.sendPacket("BANKCOUNTID " + i28);
            }
            catch(Exception exception15)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("BANKCOUNT"))
            try
            {
                int j3 = pos(' ', s);
                int k17 = Integer.parseInt(s.substring(j3, s.length()));
                int j28 = bankCount(k17);
                if(j28 < 1)
                    XClient.sendPacket("BANKCOUNT 0");
                else
                    XClient.sendPacket("BANKCOUNT " + j28);
            }
            catch(Exception exception16)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("setfmode"))
            try
            {
                int k3 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(k3 != -1)
                {
                    setmode(k3);
                    System.out.println("SetFightMode(" + k3 + ")");
                }
            }
            catch(Exception exception17)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("INVCOUNT"))
            try
            {
                int l3 = pos(' ', s);
                int l17 = Integer.parseInt(s.substring(l3, s.length()));
                int k28 = inventoryPositionCount(l17);
                if(k28 < 1)
                    XClient.sendPacket("INVCOUNT 0");
                else
                    XClient.sendPacket("INVCOUNT " + k28);
            }
            catch(Exception exception18)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("INVCOUNTID"))
            try
            {
                int i4 = pos(' ', s);
                int i18 = Integer.parseInt(s.substring(i4, s.length()));
                int l28 = inventoryCount(i18);
                if(l28 < 1)
                    XClient.sendPacket("INVCOUNTID 0");
                else
                    XClient.sendPacket("INVCOUNTID " + l28);
            }
            catch(Exception exception19)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("isobjNear"))
            try
            {
                int j4 = pos(' ', s);
                int j18 = Integer.parseInt(s.substring(j4, s.length()));
                int i29 = findnearestobj(j18);
                if(i29 == -1)
                    XClient.sendPacket("ISOBJNEAR 0");
                else
                    XClient.sendPacket("ISOBJNEAR 1");
            }
            catch(Exception exception20)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("isNPCNear"))
            try
            {
                int k4 = pos(' ', s);
                int k18 = Integer.parseInt(s.substring(k4, s.length()));
                int j29 = getnearestnpcbyid(k18);
                if(j29 == -1)
                    XClient.sendPacket("ISNPCNEAR 0");
                else
                    XClient.sendPacket("ISNPCNEAR 1");
            }
            catch(Exception exception21)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("incombat"))
            try
            {
                if(incombat())
                    XClient.sendPacket("INCOMBAT 1");
                else
                    XClient.sendPacket("INCOMBAT 0");
            }
            catch(Exception exception22)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("getfmode"))
            try
            {
                XClient.sendPacket("FMODE " + fightMode);
            }
            catch(Exception exception23)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("declineduel"))
            try
            {
                System.out.println("DeclineDuel()");
                declineduel();
            }
            catch(Exception exception24)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("acceptduel2"))
            try
            {
                System.out.println("AcceptDuel2()");
                acceptduel2();
            }
            catch(Exception exception25)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("acceptduel1"))
            try
            {
                System.out.println("AcceptDuel1()");
                acceptduel1();
            }
            catch(Exception exception26)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("declinetrade"))
            try
            {
                System.out.println("DeclineTrade()");
                declinetrade();
            }
            catch(Exception exception27)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("accepttrade2"))
            try
            {
                System.out.println("AcceptTrade2()");
                accepttrade2();
            }
            catch(Exception exception28)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("accepttrade1"))
            try
            {
                System.out.println("AcceptTrade1()");
                accepttrade1();
            }
            catch(Exception exception29)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("slword"))
            try
            {
                System.out.println("Sleep Word " + s.substring(pos(' ', s), s.length()) + " Read from Slword.txt");
                sleepword = s.substring(pos(' ', s), s.length());
            }
            catch(Exception exception30)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("DEBUGRS"))
            try
            {
                String s1 = s.substring(pos(' ', s), s.length());
                chatText2(s1);
                System.out.println("DebugRS(" + s1 + ")");
            }
            catch(Exception exception31)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("CHAT"))
            try
            {
                String s2 = s.substring(pos(' ', s), s.length());
                chat(s2);
                System.out.println("Chat(" + s2 + ")");
            }
            catch(Exception exception32)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("talkname"))
            try
            {
                String s3 = s.substring(pos(' ', s), s.length());
                npcbyname(s3);
                System.out.println("TalkToNPCByName(" + s3 + ")");
            }
            catch(Exception exception33)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("poptrade"))
            try
            {
                int l4 = pos(' ', s);
                int l18 = pos(',', s);
                int k29 = Integer.parseInt(s.substring(l4, l18 - 1));
                int i34 = Integer.parseInt(s.substring(l18, s.length()));
                if(k29 != -1 && i34 != -1)
                {
                    poptrade(k29, i34);
                    System.out.println("PopTrade(" + k29 + "," + i34 + ")");
                }
            }
            catch(Exception exception34)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("opendoorifclosed"))
            try
            {
                int i5 = pos(' ', s);
                int i19 = pos(',', s);
                int l29 = Integer.parseInt(s.substring(i5, i19 - 1));
                int j34 = Integer.parseInt(s.substring(i19, s.length()));
                if(l29 != -1 && j34 != -1)
                {
                    doorx = l29;
                    doory = j34;
                    doorthread = new doorcheck();
                    System.out.println("OpenDoorIfClosed(" + l29 + "," + j34 + ")");
                }
            }
            catch(Exception exception35)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("puttrade"))
            try
            {
                int j5 = pos(' ', s);
                int j19 = pos(',', s);
                int i30 = Integer.parseInt(s.substring(j5, j19 - 1));
                int k34 = Integer.parseInt(s.substring(j19, s.length()));
                if(i30 != -1 && k34 != -1)
                {
                    puttrade(i30, k34);
                    System.out.println("PutTrade(" + i30 + "," + k34 + ")");
                }
            }
            catch(Exception exception36)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("deposit"))
            try
            {
                int k5 = pos(' ', s);
                int k19 = pos(',', s);
                int j30 = Integer.parseInt(s.substring(k5, k19 - 1));
                int l34 = Integer.parseInt(s.substring(k19, s.length()));
                if(j30 != -1 && l34 != -1)
                {
                    deposit(j30, l34);
                    System.out.println("Deposit(" + j30 + "," + l34 + ")");
                }
            }
            catch(Exception exception37)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("withdraw"))
            try
            {
                int l5 = pos(' ', s);
                int l19 = pos(',', s);
                int k30 = Integer.parseInt(s.substring(l5, l19 - 1));
                int i35 = Integer.parseInt(s.substring(l19, s.length()));
                if(k30 != -1 && i35 != -1)
                {
                    withdraw(k30, i35);
                    System.out.println("Withdraw(" + k30 + "," + i35 + ")");
                }
            }
            catch(Exception exception38)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("attname"))
            try
            {
                String s4 = s.substring(pos(' ', s), s.length());
                int i20 = playerfromname(s4);
                if(i20 != -1)
                {
                    attackplayer(i20);
                    System.out.println("AttackPlayer(" + s4 + ")");
                }
            }
            catch(Exception exception39)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("mage"))
            try
            {
                int i6 = pos(' ', s);
                int j20 = pos(',', s);
                int l30 = Integer.parseInt(s.substring(pos(' ', s), pos(',', s) - 1));
                int j35 = Integer.parseInt(s.substring(pos(',', s), s.length()));
                if(j35 != -1 && l30 != -1)
                {
                    mageplayerid(l30, j35);
                    System.out.println("MagePlayer(" + l30 + "," + j35 + ")");
                }
            }
            catch(Exception exception40)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("magename"))
            try
            {
                int j6 = pos(' ', s);
                int k20 = pos(',', s);
                int i31 = Integer.parseInt(s.substring(pos(' ', s), pos(',', s) - 1));
                String s12 = s.substring(pos(',', s), s.length());
                int j38 = playerfromname(s12);
                if(j38 != -1)
                {
                    mageplayerid(i31, j38);
                    System.out.println("MagePlayer(" + i31 + "," + s12 + ")");
                }
            }
            catch(Exception exception41)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("followname"))
            try
            {
                String s5 = s.substring(pos(' ', s), s.length());
                int l20 = playerfromname(s5);
                if(l20 != -1)
                {
                    followplayer(l20);
                    System.out.println("FollowPlayer(" + s5 + ")");
                }
            }
            catch(Exception exception42)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("duelname"))
            try
            {
                String s6 = s.substring(pos(' ', s), s.length());
                int i21 = playerfromname(s6);
                if(i21 != -1)
                {
                    duelplayer(i21);
                    System.out.println("DuelPlayer(" + s6 + ")");
                }
            }
            catch(Exception exception43)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("tradename"))
            try
            {
                String s7 = s.substring(pos(' ', s), s.length());
                int j21 = playerfromname(s7);
                if(j21 != -1)
                {
                    tradeplayer(j21);
                    System.out.println("TradePlayer(" + s7 + ")");
                }
            }
            catch(Exception exception44)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("removeID"))
            try
            {
                int k6 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(k6 != -1)
                {
                    removebyid(k6);
                    System.out.println("removeID(" + k6 + ")");
                }
            }
            catch(Exception exception45)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("remove"))
            try
            {
                int l6 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(l6 != -1)
                {
                    remove(l6);
                    System.out.println("Remove(" + l6 + ")");
                }
            }
            catch(Exception exception46)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("WieldID"))
            try
            {
                int i7 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(i7 != -1)
                {
                    wieldbyid(i7);
                    System.out.println("WieldID(" + i7 + ")");
                }
            }
            catch(Exception exception47)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("Wield"))
            try
            {
                int j7 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(j7 != -1)
                {
                    wield(j7);
                    System.out.println("Drop(" + j7 + ")");
                }
            }
            catch(Exception exception48)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("dropid"))
            try
            {
                int k7 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(k7 != -1)
                {
                    dropitembyid(k7);
                    System.out.println("DropID(" + k7 + ")");
                }
            }
            catch(Exception exception49)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("drop"))
            try
            {
                int l7 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(l7 != -1)
                {
                    dropitem(l7);
                    System.out.println("Drop(" + l7 + ")");
                }
            }
            catch(Exception exception50)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("takename"))
            try
            {
                String s8 = s.substring(pos(' ', s), s.length());
                takebyname(s8);
                System.out.println("TakeName(" + s8 + ")");
            }
            catch(Exception exception51)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("take"))
            try
            {
                int i8 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(i8 != -1)
                {
                    takebyid(i8);
                    System.out.println("Take(" + i8 + ")");
                }
            }
            catch(Exception exception52)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("actnear"))
            try
            {
                int j8 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(j8 != -1)
                {
                    int k21 = nearestobjbyid(j8);
                    if(k21 != -1)
                    {
                        action123(k21);
                        System.out.println("ActionNearest(" + j8 + ")");
                    }
                }
            }
            catch(Exception exception53)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("act"))
            try
            {
                int k8 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(k8 != -1)
                {
                    action(k8);
                    System.out.println("Action(" + k8 + ")");
                }
            }
            catch(Exception exception54)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("actnear2"))
            try
            {
                int l8 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(l8 != -1)
                {
                    int l21 = nearestobjbyid(l8);
                    action123b(l21);
                    System.out.println("ActionNearest2(" + l8 + ")");
                }
            }
            catch(Exception exception55)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("act2"))
            try
            {
                int i9 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(i9 != -1)
                {
                    action2(i9);
                    System.out.println("Action2(" + i9 + ")");
                }
            }
            catch(Exception exception56)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("takeat"))
            try
            {
                int j9 = pos(' ', s);
                int i22 = pos(',', s);
                int j31 = s.lastIndexOf(',');
                int k35 = Integer.parseInt(s.substring(j9, i22 - 1));
                int k38 = Integer.parseInt(s.substring(i22, j31 - 1));
                int k40 = Integer.parseInt(s.substring(j31 + 1, s.length()));
                if(k35 != -1 && k38 != -1 && k40 != -1)
                {
                    takeat(k35, k38, k40);
                    System.out.println("TakeItemAt(" + k35 + "," + k38 + ")");
                }
            }
            catch(Exception exception57)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("atobjat"))
            try
            {
                int k9 = pos(' ', s);
                int j22 = pos(',', s);
                int k31 = Integer.parseInt(s.substring(k9, j22 - 1));
                int l35 = Integer.parseInt(s.substring(j22, s.length()));
                if(k31 != -1 && l35 != -1)
                {
                    atobjat(k31, l35);
                    System.out.println("AtObjectAt(" + k31 + "," + l35 + ")");
                }
            }
            catch(Exception exception58)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("atobjwith"))
            try
            {
                int l9 = pos(' ', s);
                int k22 = pos(',', s);
                int l31 = Integer.parseInt(s.substring(l9, k22 - 1));
                int i36 = Integer.parseInt(s.substring(k22, s.length()));
                if(l31 != -1 && i36 != -1)
                {
                    atobjectwith(l31, i36);
                    System.out.println("atObjectWith(" + l31 + "," + i36 + ")");
                }
            }
            catch(Exception exception59)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("mine"))
            try
            {
                int i10 = pos(' ', s);
                int l22 = pos(',', s);
                int i32 = Integer.parseInt(s.substring(i10, l22 - 1));
                int j36 = Integer.parseInt(s.substring(l22, s.length()));
                if(i32 != -1 && j36 != -1)
                {
                    atobjat(i32, j36);
                    System.out.println("Mine(" + i32 + "," + j36 + ")");
                }
            }
            catch(Exception exception60)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("GETXP"))
            try
            {
                int j10 = pos(' ', s);
                int i23 = pos(',', s);
                int j32 = Integer.parseInt(s.substring(j10, i23 - 1));
                int k36 = anIntArray686[0];
                for(int l38 = 0; l38 < 98; l38++)
                    if(CurrentXPArray[j32] >= anIntArray686[l38])
                        k36 = anIntArray686[l38 + 1];

                String s13 = StatNameArray[j32];
                int l40 = CurrentXPArray[j32] / 4;
                int j41 = k36 / 4;
                if(s.substring(i23, s.length()).equalsIgnoreCase("C"))
                {
                    XClient.sendPacket("CXP " + l40);
                    System.out.println("Current " + s13 + " XP " + l40);
                } else
                {
                    XClient.sendPacket("TXP " + j41);
                    System.out.println("XP for " + s13 + " lvl " + j41);
                }
            }
            catch(Exception exception61)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("BOTC"))
            try
            {
                chatText2("@bot@" + s.substring(5, s.length()));
            }
            catch(Exception exception62)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("FIX"))
            try
            {
                mapangle = 128;
                CameraZoom = 700;
                xrotate = 912;
            }
            catch(Exception exception63)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("LOGOUT"))
            try
            {
                method22();
                loggedout = true;
            }
            catch(Exception exception64)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("SETSERV"))
            try
            {
                int k10 = Integer.parseInt(s.substring(pos(' ', s), s.length()));
                if(k10 == 51 || k10 == 52 || k10 == 53 || k10 == 54 || k10 == 55 || k10 == 56)
                    changeworld(k10);
                else
                    System.out.println("Invalid Server (51 - 56 only retard)");
            }
            catch(Exception exception65)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, s.indexOf(' ')).equalsIgnoreCase("LOGIN"))
            try
            {
                int l10 = s.indexOf(' ');
                int j23 = pos(',', s);
                if(l10 != 0 && j23 != 0)
                {
                    username = s.substring(l10 + 1, j23 - 1);
                    password = copy(j23 + 1, s.length(), s);
                    login();
                }
            }
            catch(Exception exception66)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("randomwalk"))
            try
            {
                int i11 = pos(' ', s);
                int k23 = s.indexOf(',');
                String s10 = s.substring(k23 + 1, s.length());
                int l36 = s10.indexOf(',') + k23 + 1;
                int i39 = s.lastIndexOf(',');
                if(i11 != -1 && k23 != -1 && l36 != -1 && i39 != -1)
                {
                    int i41 = Integer.parseInt(s.substring(i11, k23));
                    int k41 = Integer.parseInt(s.substring(k23 + 1, l36));
                    int i42 = Integer.parseInt(s.substring(l36 + 1, i39));
                    int j42 = Integer.parseInt(s.substring(i39 + 1, s.length()));
                    int k42 = getrandom(i41, i42);
                    int l42 = getrandom(k41, j42);
                    System.out.println("WalkToRandomly(" + k42 + "," + l42 + ")");
                    walkto(k42, l42);
                }
            }
            catch(Exception exception67)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("USEITEMIDID"))
            try
            {
                int j11 = pos(' ', s);
                int l23 = pos(',', s);
                int k32 = pos(',', s);
                if(j11 != 0 && l23 != 0 && k32 != 0)
                {
                    int i37 = Integer.parseInt(copy(j11 + 1, l23 - 1, s));
                    int j39 = Integer.parseInt(copy(k32 + 1, s.length(), s));
                    useitemwithitem(i37, j39);
                }
            }
            catch(Exception exception68)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("USEITEMPOSPOS"))
            try
            {
                int k11 = pos(' ', s);
                int i24 = pos(',', s);
                int l32 = pos(',', s);
                if(k11 != 0 && i24 != 0 && l32 != 0)
                {
                    int j37 = Integer.parseInt(copy(k11 + 1, i24 - 1, s));
                    int k39 = Integer.parseInt(copy(l32 + 1, s.length(), s));
                    useitemposwithitempos(j37, k39);
                }
            }
            catch(Exception exception69)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("WALK"))
            try
            {
                int l11 = pos(' ', s);
                int j24 = pos(',', s);
                int i33 = pos(',', s);
                if(l11 != 0 && j24 != 0 && i33 != 0)
                {
                    int k37 = Integer.parseInt(copy(l11 + 1, j24 - 1, s));
                    int l39 = Integer.parseInt(copy(i33 + 1, s.length(), s));
                    walkto(k37, l39);
                }
            }
            catch(Exception exception70)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("USEITEMID"))
            try
            {
                int i12 = pos(' ', s);
                if(i12 != 0)
                {
                    int k24 = Integer.parseInt(copy(i12 + 1, s.length(), s));
                    useitemid(k24);
                }
            }
            catch(Exception exception71)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("PRAYON"))
            try
            {
                int j12 = pos(' ', s);
                if(j12 != 0)
                {
                    int l24 = Integer.parseInt(copy(j12 + 1, s.length(), s));
                    prayeron(l24);
                }
            }
            catch(Exception exception72)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("PRAYOFF"))
            try
            {
                int k12 = pos(' ', s);
                if(k12 != 0)
                {
                    int i25 = Integer.parseInt(copy(k12 + 1, s.length(), s));
                    prayeroff(i25);
                }
            }
            catch(Exception exception73)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("ATT"))
            try
            {
                int l12 = pos(' ', s);
                if(l12 != 0)
                {
                    int j25 = Integer.parseInt(copy(l12 + 1, s.length(), s));
                    int j33 = getnearestnpcbyid(j25);
                    attacknpc(j33);
                }
            }
            catch(Exception exception74)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("atob"))
            try
            {
                int i13 = pos(' ', s);
                if(i13 != 0)
                {
                    int k25 = Integer.parseInt(copy(i13 + 1, s.length(), s));
                    if(k25 != -1)
                        action(k25);
                }
            }
            catch(Exception exception75)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("thieve"))
            try
            {
                int j13 = pos(' ', s);
                if(j13 != 0)
                {
                    int l25 = Integer.parseInt(copy(j13 + 1, s.length(), s));
                    int k33 = getnearestnpcbyid(l25);
                    if(k33 != -1)
                        thievenpc(k33);
                }
            }
            catch(Exception exception76)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("showbank"))
            try
            {
                aBoolean879 = true;
                System.out.println("ShowBank()");
            }
            catch(Exception exception77)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("closebank"))
            try
            {
                aBoolean879 = false;
                System.out.println("CloseBank()");
            }
            catch(Exception exception78)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("talk"))
            try
            {
                int k13 = pos(' ', s);
                if(k13 != 0)
                {
                    int i26 = Integer.parseInt(copy(k13 + 1, s.length(), s));
                    if(i26 != -1)
                        talktonpc(i26);
                }
            }
            catch(Exception exception79)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("ans"))
            try
            {
                int l13 = pos(' ', s);
                if(l13 != 0)
                {
                    int j26 = Integer.parseInt(copy(l13 + 1, s.length(), s));
                    answer(j26);
                }
            }
            catch(Exception exception80)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 2).equalsIgnoreCase("CTXT"))
        {
            int i14 = pos(' ', s);
            if(i14 != 0)
            {
                int k26 = pos(',', s);
                int l33 = pos(':', s);
                if(k26 != 0)
                    if(l33 == 0);
                int l37 = Integer.parseInt(s.substring(i14, k26 - 1));
                int i40 = Integer.parseInt(s.substring(k26, l33 - 1));
                String s14 = s.substring(l33, s.length());
                int l41 = Integer.parseInt(s.substring(4, i14 - 1));
                if(l41 == 1)
                {
                    WText1 = true;
                    WText1X = l37;
                    WText1Y = i40;
                    WText1Text = s14;
                }
                if(l41 == 2)
                {
                    WText2 = true;
                    WText2X = l37;
                    WText2Y = i40;
                    WText2Text = s14;
                }
                if(l41 == 3)
                {
                    WText3 = true;
                    WText3X = l37;
                    WText3Y = i40;
                    WText3Text = s14;
                }
                if(l41 == 4)
                {
                    WText4 = true;
                    WText4X = l37;
                    WText4Y = i40;
                    WText4Text = s14;
                }
                if(l41 == 5)
                {
                    WText5 = true;
                    WText5X = l37;
                    WText5Y = i40;
                    WText5Text = s14;
                }
                if(l41 == 6)
                {
                    WText6 = true;
                    WText6X = l37;
                    WText6Y = i40;
                    WText6Text = s14;
                }
                if(l41 == 7)
                {
                    WText7 = true;
                    WText7X = l37;
                    WText7Y = i40;
                    WText7Text = s14;
                }
                if(l41 == 8)
                {
                    WText8 = true;
                    WText8X = l37;
                    WText8Y = i40;
                    WText8Text = s14;
                }
                if(l41 == 9)
                {
                    WText9 = true;
                    WText9X = l37;
                    WText9Y = i40;
                    WText9Text = s14;
                }
            }
        } else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("DTXT"))
        {
            int j14 = pos(' ', s);
            if(j14 != 0)
            {
                if(s.substring(j14, s.length()).equalsIgnoreCase("1"))
                    WText1 = false;
                if(s.substring(j14, s.length()).equalsIgnoreCase("2"))
                    WText2 = false;
                if(s.substring(j14, s.length()).equalsIgnoreCase("3"))
                    WText3 = false;
                if(s.substring(j14, s.length()).equalsIgnoreCase("4"))
                    WText4 = false;
                if(s.substring(j14, s.length()).equalsIgnoreCase("5"))
                    WText5 = false;
                if(s.substring(j14, s.length()).equalsIgnoreCase("6"))
                    WText6 = false;
                if(s.substring(j14, s.length()).equalsIgnoreCase("7"))
                    WText7 = false;
                if(s.substring(j14, s.length()).equalsIgnoreCase("8"))
                    WText8 = false;
                if(s.substring(j14, s.length()).equalsIgnoreCase("9"))
                    WText9 = false;
            }
        } else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("GETNPC"))
            try
            {
                GETNPC = true;
            }
            catch(Exception exception81)
            {
                System.out.println("Error");
            }
        else
        if(s.substring(0, pos(' ', s) - 1).equalsIgnoreCase("SCRIPT"))
        {
            if(s.substring(6, 9).equalsIgnoreCase("RUN"))
            {
                chatText2("@bot@Script Running");
            } else
            {
                chatText2("@bot@Script Stopped");
                WText1 = false;
                WText2 = false;
                WText3 = false;
                WText4 = false;
                WText5 = false;
                WText6 = false;
                WText7 = false;
                WText8 = false;
                WText9 = false;
                GETNPC = false;
            }
        } else
        {
            System.out.println("[><] Unrecognized [" + s + "]");
        }
    }

    public synchronized boolean keyUp(Event event, int i)
    {
        if(i == 1001)
            homedown = false;
        if(i == 1000)
            enddown = false;
        if(i == 1)
            adown = false;
        if(i == 4)
            ddown = false;
        if(i == 19)
            sdown = false;
        if(i == 23)
            wdown = false;
        if(i == PGUP)
            pgdowndown = false;
        if(i == PGDN)
            pgupdown = false;
        if(i == ARROWUP)
            arrowkeyup = false;
        if(i == ARROWDOWN)
            arrowkeydown = false;
        return super.keyUp(event, i);
    }

    public synchronized boolean keyDown(Event event, int i)
    {
        if(i == 1010)
            if(!super.nogfx)
            {
                chatText2("Graphics Off");
                super.nogfx = true;
                aClass6_Sub1_724.nogfxplz = true;
            } else
            {
                super.nogfx = false;
                aClass6_Sub1_724.nogfxplz = false;
                chatText2("Graphics On");
            }
        if(i == 1022)
            if(super.caps)
            {
                super.caps = false;
                chatText2("Caps Off");
            } else
            {
                super.caps = true;
                chatText2("Caps On");
            }
        if(i == 1001)
            homedown = true;
        if(i == 1000)
            enddown = true;
        if(i == 1)
            adown = true;
        if(i == 4)
            ddown = true;
        if(i == 19)
            sdown = true;
        if(i == 23)
            wdown = true;
        if(i == 27)
            method22();
        if(i == PGUP)
            pgdowndown = true;
        if(i == PGDN)
            pgupdown = true;
        if(i == ARROWUP)
            arrowkeyup = true;
        if(i == ARROWDOWN)
            arrowkeydown = true;
        return super.keyDown(event, i);
    }

    public void keypress(int i)
    {
        if(i == 1017)
            if(macroOn)
            {
                macroOn = false;
                lockedFightMode = -1;
                chatText2("@bot@Autofighter Off");
            } else
            if(selectedNPC != -1)
            {
                lockedFightMode = fightMode;
                macroOn = true;
                chatText2("@bot@Autofighter On");
                fightthread = new autofight();
            } else
            {
                chatText2("@bot@No NPC selected, right click and choose an npc.");
            }
        if(anInt947 == 0)
        {
            if(anInt690 == 0)
                aClass4_858.method141(i);
            if(anInt690 == 1)
                aClass4_667.method141(i);
            if(anInt690 == 2)
                aClass4_751.method141(i);
        }
        if(anInt947 == 1)
        {
            if(aBoolean992)
            {
                aClass4_830.method141(i);
                return;
            }
            if(anInt931 == 0 && anInt986 == 0 && !aBoolean870)
                aClass4_775.method141(i);
        }
    }

    public void duel()
    {
        int i = Class1.anInt144;
        byte byte0 = 22;
        byte byte1 = 36;
        aClass6_Sub1_724.method216(byte0, byte1, 468, 16, 192);
        int j = 0x989898;
        aClass6_Sub1_724.method214(byte0, byte1 + 16, 468, 246, j, 160);
        aClass6_Sub1_724.FloatText("Please confirm your duel with @yel@" + Class15.method363(aLong907), byte0 + 234, byte1 + 12, 1, 0xffffff);
        aClass6_Sub1_724.FloatText("Your stake:", byte0 + 117, byte1 + 30, 1, 0xffff00);
        for(int k = 0; k < anInt663; k++)
        {
            String s = Class1.itemNameArray[anIntArray664[k]];
            if(Class1.anIntArray55[anIntArray664[k]] == 0)
                s = s + " x " + Currency(anIntArray665[k]);
            aClass6_Sub1_724.FloatText(s, byte0 + 117, byte1 + 42 + k * 12, 1, 0xffffff);
        }

        if(anInt663 == 0)
            aClass6_Sub1_724.FloatText("Nothing!", byte0 + 117, byte1 + 42, 1, 0xffffff);
        aClass6_Sub1_724.FloatText("Your opponent's stake:", byte0 + 351, byte1 + 30, 1, 0xffff00);
        for(int l = 0; l < anInt786; l++)
        {
            String s1 = Class1.itemNameArray[anIntArray787[l]];
            if(Class1.anIntArray55[anIntArray787[l]] == 0)
                s1 = s1 + " x " + Currency(anIntArray788[l]);
            aClass6_Sub1_724.FloatText(s1, byte0 + 351, byte1 + 42 + l * 12, 1, 0xffffff);
        }

        if(anInt786 == 0)
            aClass6_Sub1_724.FloatText("Nothing!", byte0 + 351, byte1 + 42, 1, 0xffffff);
        if(anInt988 == 0)
            aClass6_Sub1_724.FloatText("You can retreat from this duel", byte0 + 234, byte1 + 180, 1, 65280);
        else
            aClass6_Sub1_724.FloatText("No retreat is possible!", byte0 + 234, byte1 + 180, 1, 0xff0000);
        if(anInt989 == 0)
            aClass6_Sub1_724.FloatText("Magic may be used", byte0 + 234, byte1 + 192, 1, 65280);
        else
            aClass6_Sub1_724.FloatText("Magic cannot be used", byte0 + 234, byte1 + 192, 1, 0xff0000);
        if(anInt990 == 0)
            aClass6_Sub1_724.FloatText("Prayer may be used", byte0 + 234, byte1 + 204, 1, 65280);
        else
            aClass6_Sub1_724.FloatText("Prayer cannot be used", byte0 + 234, byte1 + 204, 1, 0xff0000);
        if(anInt991 == 0)
            aClass6_Sub1_724.FloatText("Weapons may be used", byte0 + 234, byte1 + 216, 1, 65280);
        else
            aClass6_Sub1_724.FloatText("Weapons cannot be used", byte0 + 234, byte1 + 216, 1, 0xff0000);
        aClass6_Sub1_724.FloatText("If you are sure click 'Accept' to begin the duel", byte0 + 234, byte1 + 230, 1, 0xffffff);
        if(!duelFinished)
        {
            aClass6_Sub1_724.method231((byte0 + 118) - 35, byte1 + 238, anInt948 + 25);
            aClass6_Sub1_724.method231((byte0 + 352) - 35, byte1 + 238, anInt948 + 26);
        } else
        {
            aClass6_Sub1_724.FloatText("Waiting for other player...", byte0 + 234, byte1 + 250, 1, 0xffff00);
        }
        if(mouseClick == 1)
        {
            if(super.mouseX < byte0 || super.mouseY < byte1 || super.mouseX > byte0 + 468 || super.mouseY > byte1 + 262)
            {
                duelWindow = false;
                super.packets.packetID(178);
                super.packets.sendpacket();
            }
            if(super.mouseX >= (byte0 + 118) - 35 && super.mouseX <= byte0 + 118 + 70 && super.mouseY >= byte1 + 238 && super.mouseY <= byte1 + 238 + 21)
            {
                duelFinished = true;
                super.packets.packetID(24);
                super.packets.sendpacket();
            }
            if(super.mouseX >= (byte0 + 352) - 35 && super.mouseX <= byte0 + 353 + 70 && super.mouseY >= byte1 + 238 && super.mouseY <= byte1 + 238 + 21)
            {
                duelWindow = false;
                super.packets.packetID(82);
                super.packets.sendpacket();
            }
            mouseClick = 0;
        }
    }

    public void method101()
    {
        int i = Class1.anInt144;
        for(int j = 0; j < anInt820; j++)
        {
            int i1 = aClass6_Sub1_724.method261(1);
            int l1 = anIntArray965[j];
            int k2 = anIntArray966[j];
            int j3 = anIntArray967[j];
            int l3 = anIntArray968[j];
            for(boolean flag = true; flag;)
            {
                flag = false;
                int k4 = 0;
                while(k4 < j) 
                {
                    if(k2 + l3 > anIntArray966[k4] - i1 && k2 - i1 < anIntArray966[k4] + anIntArray968[k4] && l1 - j3 < anIntArray965[k4] + anIntArray967[k4] && l1 + j3 > anIntArray965[k4] - anIntArray967[k4] && anIntArray966[k4] - i1 - l3 < k2)
                    {
                        k2 = anIntArray966[k4] - i1 - l3;
                        flag = true;
                    }
                    k4++;
                }
            }

            anIntArray966[j] = k2;
            aClass6_Sub1_724.method256(aStringArray821[j], l1, k2, 1, 0xffff00, 300);
        }

        for(int k = 0; k < anInt958; k++)
        {
            int j1 = anIntArray758[k];
            int i2 = anIntArray759[k];
            int l2 = anIntArray722[k];
            int k3 = anIntArray723[k];
            int i4 = (39 * l2) / 100;
            int j4 = (27 * l2) / 100;
            int l4 = i2 - j4;
            aClass6_Sub1_724.method234(j1 - i4 / 2, l4, i4, j4, anInt948 + 9, 85);
            int i5 = (36 * l2) / 100;
            int j5 = (24 * l2) / 100;
            aClass6_Sub1_724.method247(j1 - i5 / 2, (l4 + j4 / 2) - j5 / 2, i5, j5, Class1.anIntArray53[k3] + anInt950, Class1.anIntArray58[k3], 0, 0, false);
        }

        for(int l = 0; l < anInt766; l++)
        {
            int k1 = anIntArray687[l];
            int j2 = anIntArray688[l];
            int i3 = anIntArray689[l];
            aClass6_Sub1_724.method214(k1 - 15, j2 - 3, i3, 5, 65280, 192);
            aClass6_Sub1_724.method214((k1 - 15) + i3, j2 - 3, 30 - i3, 5, 0xff0000, 192);
        }

    }

    public void LoadSounds()
    {
        try
        {
            aByteArray987 = UnPack("sounds" + Class18.anInt580 + ".mem", "Sound effects", 90);
            anInputStream_Sub1_901 = new InputStream_Sub1();
            return;
        }
        catch(Throwable throwable)
        {
            System.out.println("Unable to init sounds:" + throwable);
        }
    }

    public void method103(boolean flag)
    {
        if(myPlayerY2 + myPlayerY1 <= 427)
            pkermap = true;
        if(myPlayerY2 + myPlayerY1 > 427)
            pkermap = false;
        int i = Class1.anInt144;
        int j = ((Class6) (aClass6_Sub1_724)).anInt311 - 199;
        char c = '\234';
        char c1 = '\230';
        aClass6_Sub1_724.method231(j - 49, 3, anInt948 + 2);
        j += 40;
        aClass6_Sub1_724.method216(j, 36, c, c1, 0);
        aClass6_Sub1_724.method209(j, 36, j + c, 36 + c1);
        int k = 192 + maphax;
        int l = mapangle + anInt859 & 0xff;
        int i1 = ((myPlayer.posX - 6040) * 3 * k) / 2048;
        int j1 = ((myPlayer.posY - 6040) * 3 * k) / 2048;
        int k1 = Class10.anIntArray394[1024 - l * 4 & 0x3ff];
        int l1 = Class10.anIntArray394[(1024 - l * 4 & 0x3ff) + 1024];
        int i2 = j1 * k1 + i1 * l1 >> 18;
        j1 = j1 * l1 - i1 * k1 >> 18;
        i1 = i2;
        aClass6_Sub1_724.method243((j + c / 2) - i1, 36 + c1 / 2 + j1, anInt948 - 1, l + 64 & 0xff, k);
        for(int j2 = 0; j2 < objCount; j2++)
        {
            int k3 = (((objXArray[j2] * anInt946 + 64) - myPlayer.posX) * 3 * k) / 2048;
            int i4 = (((objYArray[j2] * anInt946 + 64) - myPlayer.posY) * 3 * k) / 2048;
            int i5 = i4 * k1 + k3 * l1 >> 18;
            i4 = i4 * l1 - k3 * k1 >> 18;
            k3 = i5;
            if(pkermap)
                method74(j + c / 2 + k3, (36 + c1 / 2) - i4, 0x8b7355);
            else
                method74(j + c / 2 + k3, (36 + c1 / 2) - i4, 65535);
        }

        for(int k2 = 0; k2 < itemCount; k2++)
        {
            int l3 = (((itemXArray[k2] * anInt946 + 64) - myPlayer.posX) * 3 * k) / 2048;
            int j4 = (((itemYArray[k2] * anInt946 + 64) - myPlayer.posY) * 3 * k) / 2048;
            int j5 = j4 * k1 + l3 * l1 >> 18;
            j4 = j4 * l1 - l3 * k1 >> 18;
            l3 = j5;
            if(pkermap)
                method74(j + c / 2 + l3, (36 + c1 / 2) - j4, 255);
            else
                method74(j + c / 2 + l3, (36 + c1 / 2) - j4, 0xff0000);
        }

        for(int l2 = 0; l2 < npccount; l2++)
        {
            Class2 class2 = NPCArray[l2];
            int k4 = ((class2.posX - myPlayer.posX) * 3 * k) / 2048;
            int k5 = ((class2.posY - myPlayer.posY) * 3 * k) / 2048;
            int j6 = k5 * k1 + k4 * l1 >> 18;
            k5 = k5 * l1 - k4 * k1 >> 18;
            k4 = j6;
            if(pkermap)
                method74(j + c / 2 + k4, (36 + c1 / 2) - k5, 0xd15fee);
            else
                method74(j + c / 2 + k4, (36 + c1 / 2) - k5, 0xffff00);
        }

        for(int i3 = 0; i3 < PlayerCount; i3++)
        {
            Class2 class2_1 = PlayerArray[i3];
            int l4 = ((class2_1.posX - myPlayer.posX) * 3 * k) / 2048;
            int l5 = ((class2_1.posY - myPlayer.posY) * 3 * k) / 2048;
            int k6 = l5 * k1 + l4 * l1 >> 18;
            l5 = l5 * l1 - l4 * k1 >> 18;
            l4 = k6;
            int i7 = 0xffffff;
            if(pkermap)
            {
                int k7 = myPlayer.combatLevel - class2_1.combatLevel;
                if(k7 == 0)
                    i7 = 0xffff00;
                if(k7 > 0)
                    i7 = 0xc0ff00;
                if(k7 > 3)
                    i7 = 0x80ff00;
                if(k7 > 6)
                    i7 = 0x40ff00;
                if(k7 > 10)
                    i7 = 65280;
                if(k7 < 0)
                    i7 = 0xffb000;
                if(k7 < -3)
                    i7 = 0xff7000;
                if(k7 < -6)
                    i7 = 0xff3000;
                if(k7 < -9)
                    i7 = 0xff0000;
                if(k7 > 1 + (2203 - (myPlayerY2 + anInt807 + myPlayerY1)) / 6)
                    i7 = 0x555555;
                if(class2_1.combatLevel - myPlayer.combatLevel > 1 + (2203 - (myPlayerY2 + anInt807 + myPlayerY1)) / 6)
                    i7 = 0x555555;
            }
            int l7 = 0;
            do
            {
                if(l7 >= super.anInt624)
                    break;
                if(class2_1.aLong145 == super.aLongArray625[l7] && super.anIntArray626[l7] == 99)
                {
                    if(pkermap)
                        i7 = 0xffffff;
                    else
                        i7 = 65280;
                    break;
                }
                l7++;
            } while(true);
            if(pkermap)
            {
                if(myPlayer.combatLevel - class2_1.combatLevel <= 1 + (2203 - (myPlayerY2 + anInt807 + myPlayerY1)) / 6 && class2_1.combatLevel - myPlayer.combatLevel <= 1 + (2203 - (myPlayerY2 + anInt807 + myPlayerY1)) / 6)
                    method74(j + c / 2 + l4, (36 + c1 / 2) - l5, i7);
            } else
            {
                method74(j + c / 2 + l4, (36 + c1 / 2) - l5, i7);
            }
        }

        aClass6_Sub1_724.method213(j + c / 2, 36 + c1 / 2, 2, 0xffffff, 255);
        aClass6_Sub1_724.method243(j + 19, 55, anInt948 + 24, mapangle + 128 & 0xff, 128);
        aClass6_Sub1_724.method209(0, 0, anInt676, anInt677 + 12);
        if(!flag)
            return;
        j = super.mouseX - (((Class6) (aClass6_Sub1_724)).anInt311 - 199);
        int j3 = super.mouseY - 36;
        if(j >= 40 && j3 >= 0 && j < 196 && j3 < 152)
        {
            char c2 = '\234';
            char c3 = '\230';
            int i6 = 192 + maphax;
            int l6 = mapangle + anInt859 & 0xff;
            int j7 = ((Class6) (aClass6_Sub1_724)).anInt311 - 199;
            j7 += 40;
            int i8 = ((super.mouseX - (j7 + c2 / 2)) * 16384) / (3 * i6);
            int j8 = ((super.mouseY - (36 + c3 / 2)) * 16384) / (3 * i6);
            int k8 = Class10.anIntArray394[1024 - l6 * 4 & 0x3ff];
            int l8 = Class10.anIntArray394[(1024 - l6 * 4 & 0x3ff) + 1024];
            int i9 = j8 * k8 + i8 * l8 >> 15;
            j8 = j8 * l8 - i8 * k8 >> 15;
            i8 = i9;
            i8 += myPlayer.posX;
            j8 = myPlayer.posY - j8;
            if(mouseClick == 1)
                method99(myPlayerX2, myPlayerY2, i8 / 128, j8 / 128, false);
            mouseClick = 0;
        }
    }

    public boolean method104(int i, int j)
    {
        if(i == 31 && (method79(197) || method79(615) || method79(682)))
            return true;
        if(i == 32 && (method79(102) || method79(616) || method79(683)))
            return true;
        if(i == 33 && (method79(101) || method79(617) || method79(684)))
            return true;
        if(i == 34 && (method79(103) || method79(618) || method79(685)))
            return true;
        else
            return inventoryCount(i) >= j;
    }

    public void method105(int i, int j, int k, int l)
    {
        int i1;
        int j1;
        if(k == 0 || k == 4)
        {
            i1 = Class1.anIntArray63[l];
            j1 = Class1.anIntArray64[l];
        } else
        {
            j1 = Class1.anIntArray63[l];
            i1 = Class1.anIntArray64[l];
        }
        if(Class1.anIntArray65[l] == 2 || Class1.anIntArray65[l] == 3)
        {
            if(k == 0)
            {
                i--;
                i1++;
            }
            if(k == 2)
                j1++;
            if(k == 4)
                i1++;
            if(k == 6)
            {
                j--;
                j1++;
            }
            method83(myPlayerX2, myPlayerY2, i, j, (i + i1) - 1, (j + j1) - 1, false, true);
            return;
        } else
        {
            method83(myPlayerX2, myPlayerY2, i, j, (i + i1) - 1, (j + j1) - 1, true, true);
            return;
        }
    }

    public Class5 method106(int i, int j, int k, int l, int i1)
    {
        int j1 = i;
        int k1 = j;
        int l1 = i;
        int i2 = j;
        int j2 = Class1.anIntArray79[l];
        int k2 = Class1.anIntArray80[l];
        int l2 = Class1.anIntArray78[l];
        Class5 class5 = new Class5(4, 1);
        if(k == 0)
            l1 = i + 1;
        if(k == 1)
            i2 = j + 1;
        if(k == 2)
        {
            j1 = i + 1;
            i2 = j + 1;
        }
        if(k == 3)
        {
            l1 = i + 1;
            i2 = j + 1;
        }
        j1 *= anInt946;
        k1 *= anInt946;
        l1 *= anInt946;
        i2 *= anInt946;
        int i3 = class5.method180(j1, -aClass19_883.method421(j1, k1), k1);
        int j3 = class5.method180(j1, -aClass19_883.method421(j1, k1) - l2, k1);
        int k3 = class5.method180(l1, -aClass19_883.method421(l1, i2) - l2, i2);
        int l3 = class5.method180(l1, -aClass19_883.method421(l1, i2), i2);
        int ai[] = {
            i3, j3, k3, l3
        };
        class5.method182(4, ai, j2, k2);
        class5.method185(false, 60, 24, -50, -10, -50);
        if(i >= 0 && j >= 0 && i < 96 && j < 96)
            aClass10_739.method269(class5);
        class5.anInt257 = i1 + 10000;
        return class5;
    }

    public Class2 method107(int i, int j, int k, int l, int i1)
    {
        int j1 = Class1.anInt144;
        if(aClass2Array957[i] == null)
        {
            aClass2Array957[i] = new Class2();
            aClass2Array957[i].ID = i;
        }
        Class2 class2 = aClass2Array957[i];
        boolean flag = false;
        int k1 = 0;
        do
        {
            if(k1 >= anInt906)
                break;
            if(aClass2Array822[k1].ID == i)
            {
                flag = true;
                break;
            }
            k1++;
        } while(true);
        if(flag)
        {
            class2.combatlvl = i1;
            class2.anInt154 = l;
            int l1 = class2.anInt156;
            if(j != class2.anIntArray157[l1] || k != class2.anIntArray158[l1])
            {
                class2.anInt156 = l1 = (l1 + 1) % 10;
                class2.anIntArray157[l1] = j;
                class2.anIntArray158[l1] = k;
            }
        } else
        {
            class2.ID = i;
            class2.anInt155 = 0;
            class2.anInt156 = 0;
            class2.anIntArray157[0] = class2.posX = j;
            class2.anIntArray158[0] = class2.posY = k;
            class2.combatlvl = i1;
            class2.anInt154 = class2.status = l;
            class2.anInt152 = 0;
        }
        NPCArray[npccount++] = class2;
        return class2;
    }

    public void GameHandle()
    {
        int i = Class1.anInt144;
        if(anInt993 != 0)
        {
            aClass6_Sub1_724.method221();
            aClass6_Sub1_724.FloatText("Oh dear! You are dead...", anInt676 / 2, anInt677 / 2, 7, 0xff0000);
            ChatTypes();
            aClass6_Sub1_724.method211(aGraphics857, 0, 0);
            return;
        }
        if(aBoolean992)
        {
            method61();
            return;
        }
        if(aBoolean870)
        {
            if(PacketStored)
            {
                parseData2(PacketStore);
                PacketStored = false;
            }
            aClass6_Sub1_724.method221();
            if(sleepword != null)
            {
                super.aString40 = sleepword;
                super.aString41 = sleepword;
                sleepword = null;
            }
            aClass6_Sub1_724.method216(anInt676 / 2 - 100, 160, 200, 40, 0);
            aClass6_Sub1_724.FloatText("Asleep", anInt676 / 2, 50, 7, 0xffff00);
            aClass6_Sub1_724.FloatText("Fatigue: " + (anInt893 * 100) / 750 + "%", anInt676 / 2, 90, 7, 0xffff00);
            aClass6_Sub1_724.FloatText("To automatically wake up use one of the following", anInt676 / 2, 140, 5, 0xffffff);
            aClass6_Sub1_724.FloatText("@yel@1.@whi@ OCR @yel@2.@whi@ SleepWalker - ReadMe for Info!", anInt676 / 2, 160, 5, 0xffffff);
            aClass6_Sub1_724.FloatText(super.aString40 + "*", anInt676 / 2, 180, 5, 65535);
            if(aString846 == null)
                aClass6_Sub1_724.method231(anInt676 / 2 - 127, 230, anInt952 + 1);
            else
                aClass6_Sub1_724.FloatText(aString846, anInt676 / 2, 260, 5, 0xff0000);
            aClass6_Sub1_724.method217(anInt676 / 2 - 128, 229, 257, 42, 0xffffff);
            ChatTypes();
            aClass6_Sub1_724.FloatText("The bot will write HC.bmp", anInt676 / 2, 290, 1, 0xffffff);
            aClass6_Sub1_724.FloatText("@yel@Click Here@whi@ to change words", anInt676 / 2, 305, 1, 0xffffff);
            aClass6_Sub1_724.method211(aGraphics857, 0, 0);
            return;
        }
        if(HideGFX)
        {
            if(PacketStored)
            {
                parseData2(PacketStore);
                PacketStored = false;
            }
            int j = anInt676 / 2 - 40;
            byte byte0 = 36;
            char c = '\304';
            byte byte1 = 36;
            char c1 = '\304';
            int i10 = anInt676 / 2 - 40;
            char c2 = '\u0122';
            int k11 = 0xffffff;
            int i12 = byte0 + 260;
            int k12 = j + 3;
            aClass6_Sub1_724.method221();
            aClass6_Sub1_724.method216(anInt676 / 2 - 100, 160, 200, 40, 0);
            aClass6_Sub1_724.FloatText("@blu@WasteD BoT - Phate + Lormsby", anInt676 / 2, 50, 7, 0xffff00);
            if(super.mouseX > i10 && super.mouseX < i10 + c1 && super.mouseY > c2 - 12 && super.mouseY < c2 + 4)
                k11 = 0xff0000;
            aClass6_Sub1_724.FloatText("Graphics @yel@[On]", anInt676 / 2, 290, 5, k11);
            aClass6_Sub1_724.method211(aGraphics857, 0, 0);
            if(super.mouseX > k12 && super.mouseX < k12 + c && super.mouseY > i12 - 12 && super.mouseY < i12 + 4 && mouseClick == 1)
            {
                HideGFX = !HideGFX;
                if(HideGFX)
                    chatText2("@bot@Hide Graphics - Enabled");
                else
                    chatText2("@bot@Hide Graphics - Disabled");
                mouseClick = 0;
            } else
            if(mouseClick > 0)
                mouseClick = 0;
            return;
        }
        if(!aClass19_883.aBoolean609)
            return;
        for(int k = 0; k < 64; k++)
        {
            aClass10_739.method270(aClass19_883.aClass5ArrayArray603[anInt809][k]);
            if(anInt809 == 0)
            {
                aClass10_739.method270(aClass19_883.aClass5ArrayArray605[1][k]);
                aClass10_739.method270(aClass19_883.aClass5ArrayArray603[1][k]);
                aClass10_739.method270(aClass19_883.aClass5ArrayArray605[2][k]);
                aClass10_739.method270(aClass19_883.aClass5ArrayArray603[2][k]);
            }
            aBoolean789 = true;
            if(anInt809 != 0 || (aClass19_883.anIntArrayArray608[myPlayer.posX / 128][myPlayer.posY / 128] & 0x80) != 0)
                continue;
            aClass10_739.method269(aClass19_883.aClass5ArrayArray603[anInt809][k]);
            if(anInt809 == 0)
            {
                aClass10_739.method269(aClass19_883.aClass5ArrayArray605[1][k]);
                aClass10_739.method269(aClass19_883.aClass5ArrayArray603[1][k]);
                aClass10_739.method269(aClass19_883.aClass5ArrayArray605[2][k]);
                aClass10_739.method269(aClass19_883.aClass5ArrayArray603[2][k]);
            }
            aBoolean789 = false;
        }

        if(anInt839 != anInt919)
        {
            anInt919 = anInt839;
            for(int l = 0; l < objCount; l++)
            {
                if(objID[l] == 97)
                    method89(l, "firea" + (anInt839 + 1));
                if(objID[l] == 274)
                    method89(l, "fireplacea" + (anInt839 + 1));
                if(objID[l] == 1031)
                    method89(l, "lightning" + (anInt839 + 1));
                if(objID[l] == 1036)
                    method89(l, "firespell" + (anInt839 + 1));
                if(objID[l] == 1147)
                    method89(l, "spellcharge" + (anInt839 + 1));
            }

        }
        if(anInt840 != anInt920)
        {
            anInt920 = anInt840;
            for(int i1 = 0; i1 < objCount; i1++)
            {
                if(objID[i1] == 51)
                    method89(i1, "torcha" + (anInt840 + 1));
                if(objID[i1] == 143)
                    method89(i1, "skulltorcha" + (anInt840 + 1));
            }

        }
        if(anInt841 != anInt921)
        {
            anInt921 = anInt841;
            for(int j1 = 0; j1 < objCount; j1++)
                if(objID[j1] == 1142)
                    method89(j1, "clawspell" + (anInt841 + 1));

        }
        aClass10_739.method273(anInt744);
        anInt744 = 0;
        for(int k1 = 0; k1 < PlayerCount; k1++)
        {
            Class2 class2 = PlayerArray[k1];
            if(class2.anInt171 == 255)
                continue;
            int j6 = class2.posX;
            int k7 = class2.posY;
            int l8 = -aClass19_883.method421(j6, k7);
            int j10 = aClass10_739.method274(5000 + k1, j6, l8, k7, 145, 220, k1 + 10000);
            anInt744++;
            if(class2 == myPlayer)
                aClass10_739.method275(j10);
            if(class2.status == 8)
                aClass10_739.method276(j10, -30);
            if(class2.status == 9)
                aClass10_739.method276(j10, 30);
        }

        for(int l1 = 0; l1 < PlayerCount; l1++)
        {
            Class2 class2_1 = PlayerArray[l1];
            if(class2_1.anInt176 <= 0)
                continue;
            Class2 class2_3 = null;
            if(class2_1.anInt175 != -1)
                class2_3 = aClass2Array957[class2_1.anInt175];
            else
            if(class2_1.anInt174 != -1)
                class2_3 = aClass2Array891[class2_1.anInt174];
            if(class2_3 != null)
            {
                int l7 = class2_1.posX;
                int i9 = class2_1.posY;
                int k10 = -aClass19_883.method421(l7, i9) - 110;
                int j11 = class2_3.posX;
                int l11 = class2_3.posY;
                int j12 = -aClass19_883.method421(j11, l11) - Class1.anIntArray103[class2_3.combatlvl] / 2;
                int l12 = (l7 * class2_1.anInt176 + j11 * (anInt897 - class2_1.anInt176)) / anInt897;
                int i13 = (k10 * class2_1.anInt176 + j12 * (anInt897 - class2_1.anInt176)) / anInt897;
                int j13 = (i9 * class2_1.anInt176 + l11 * (anInt897 - class2_1.anInt176)) / anInt897;
                aClass10_739.method274(anInt951 + class2_1.anInt173, l12, i13, j13, 32, 32, 0);
                anInt744++;
            }
        }

        for(int i2 = 0; i2 < npccount; i2++)
        {
            Class2 class2_2 = NPCArray[i2];
            int k6 = class2_2.posX;
            int i8 = class2_2.posY;
            int j9 = -aClass19_883.method421(k6, i8);
            int l10 = aClass10_739.method274(20000 + i2, k6, j9, i8, Class1.anIntArray102[class2_2.combatlvl], Class1.anIntArray103[class2_2.combatlvl], i2 + 30000);
            anInt744++;
            if(class2_2.status == 8)
                aClass10_739.method276(l10, -30);
            if(class2_2.status == 9)
                aClass10_739.method276(l10, 30);
        }

        for(int j2 = 0; j2 < itemCount; j2++)
        {
            int k4 = itemXArray[j2] * anInt946 + 64;
            int l6 = itemYArray[j2] * anInt946 + 64;
            aClass10_739.method274(40000 + itemIDArray[j2], k4, -aClass19_883.method421(k4, l6) - anIntArray773[j2], l6, 96, 64, j2 + 20000);
            anInt744++;
        }

        for(int k2 = 0; k2 < anInt833; k2++)
        {
            int l4 = anIntArray881[k2] * anInt946 + 64;
            int i7 = anIntArray934[k2] * anInt946 + 64;
            int j8 = anIntArray730[k2];
            if(j8 == 0)
            {
                aClass10_739.method274(50000 + k2, l4, -aClass19_883.method421(l4, i7), i7, 128, 256, k2 + 50000);
                anInt744++;
            }
            if(j8 == 1)
            {
                aClass10_739.method274(50000 + k2, l4, -aClass19_883.method421(l4, i7), i7, 128, 64, k2 + 50000);
                anInt744++;
            }
        }

        aClass6_Sub1_724.aBoolean335 = false;
        aClass6_Sub1_724.method212();
        aClass6_Sub1_724.aBoolean335 = super.aBoolean39;
        if(anInt809 == 3)
        {
            int l2 = 40 + (int)(Math.random() * 3D);
            int i5 = 40 + (int)(Math.random() * 7D);
            aClass10_739.method310(l2, i5, -50, -10, -50);
        }
        anInt958 = 0;
        anInt820 = 0;
        anInt766 = 0;
        if(aBoolean757)
        {
            if(aBoolean675 && !aBoolean789)
            {
                int i3 = anInt940;
                method78();
                if(anInt940 != i3)
                {
                    anInt714 = myPlayer.posX;
                    anInt715 = myPlayer.posY;
                }
            }
            aClass10_739.anInt390 = 3000;
            aClass10_739.anInt391 = 3000;
            aClass10_739.anInt392 = 1;
            aClass10_739.anInt393 = 2800;
            mapangle = anInt940 * 32;
            int j3 = anInt714 + anInt895;
            int j5 = anInt715 + anInt973;
            aClass10_739.method298(j3, -aClass19_883.method421(j3, j5), j5, xrotate, mapangle * 4, 0, 2000);
        } else
        {
            if(aBoolean675 && !aBoolean789)
                method78();
            if(FogOfWar)
            {
                if(!super.aBoolean39)
                {
                    aClass10_739.anInt390 = 2400;
                    aClass10_739.anInt391 = 2400;
                    aClass10_739.anInt392 = 1;
                    aClass10_739.anInt393 = 2300;
                } else
                {
                    aClass10_739.anInt390 = 2200;
                    aClass10_739.anInt391 = 2200;
                    aClass10_739.anInt392 = 1;
                    aClass10_739.anInt393 = 2100;
                }
            } else
            if(!super.aBoolean39)
            {
                aClass10_739.anInt390 = 50000;
                aClass10_739.anInt391 = 50000;
                aClass10_739.anInt392 = 1;
                aClass10_739.anInt393 = 50000;
            } else
            {
                aClass10_739.anInt390 = 50000;
                aClass10_739.anInt391 = 50000;
                aClass10_739.anInt392 = 1;
                aClass10_739.anInt393 = 50000;
            }
            int k3 = anInt714 + focusx;
            int k5 = anInt715 + focusy;
            aClass10_739.method298(k3, -aClass19_883.method421(k3, k5), k5, xrotate, mapangle * 4, 0, CameraZoom * 2);
        }
        aClass10_739.method286();
        method101();
        if(anInt670 > 0)
            aClass6_Sub1_724.method231(anInt671 - 8, anInt672 - 8, anInt948 + 14 + (24 - anInt670) / 6);
        if(anInt670 < 0)
            aClass6_Sub1_724.method231(anInt671 - 8, anInt672 - 8, anInt948 + 18 + (24 + anInt670) / 6);
        if(anInt749 != 0)
        {
            int l3 = anInt749 / 50;
            int l5 = l3 / 60;
            l3 %= 60;
            if(l3 < 10)
                aClass6_Sub1_724.FloatText("System update in: " + l5 + ":0" + l3, 256, anInt677 - 7, 1, 0xffff00);
            else
                aClass6_Sub1_724.FloatText("System update in: " + l5 + ":" + l3, 256, anInt677 - 7, 1, 0xffff00);
        }
        if(macroOn)
        {
            int i4 = (CurrentXPArray[2] - startXP) / 3;
            if(lockedFightMode == 0)
                i4 = ((CurrentXPArray[0] + CurrentXPArray[1] + CurrentXPArray[2]) - startXP) / 3;
            if(lockedFightMode == 1)
                i4 = (CurrentXPArray[2] - startXP) / 3;
            if(lockedFightMode == 2)
                i4 = (CurrentXPArray[0] - startXP) / 3;
            if(lockedFightMode == 3)
                i4 = (CurrentXPArray[1] - startXP) / 3;
            if(lockedFightMode == 0)
                aClass6_Sub1_724.FloatText("@or1@ <{ @whi@Fighting: @gre@" + Class1.NPCNameArray[selectedNPC] + " - @whi@Fightmode: @gre@" + lockedFightMode + "  @whi@-  " + "XP Gained: @gre@" + i4 + " @whi@on @gre@Attack, Defense & Strength@or1@ }>", 256, anInt677 - 7, 1, 65280);
            if(lockedFightMode == 1)
                aClass6_Sub1_724.FloatText("@or1@ <{ @whi@Fighting: @gre@" + Class1.NPCNameArray[selectedNPC] + " - @whi@Fightmode: @gre@" + lockedFightMode + "  @whi@-  " + "XP Gained: @gre@" + i4 + " @whi@on @gre@Strength@or1@ }>", 256, anInt677 - 7, 1, 65280);
            if(lockedFightMode == 2)
                aClass6_Sub1_724.FloatText("@or1@ <{ @whi@Fighting: @gre@" + Class1.NPCNameArray[selectedNPC] + " - @whi@Fightmode: @gre@" + lockedFightMode + "  @whi@-  " + "XP Gained: @gre@" + i4 + " @whi@on @gre@Attack@or1@ }>", 256, anInt677 - 7, 1, 65280);
            if(lockedFightMode == 3)
                aClass6_Sub1_724.FloatText("@or1@ <{ @whi@Fighting: @gre@" + Class1.NPCNameArray[selectedNPC] + " - @whi@Fightmode: @gre@" + lockedFightMode + "  @whi@-  " + "XP Gained: @gre@" + i4 + " @whi@on @gre@Defense@or1@ }>", 256, anInt677 - 7, 1, 65280);
        }
        if(fightMode != lockedFightMode && lockedFightMode != -1)
        {
            setmode(lockedFightMode);
            chatText2("@bot@Fixing Fightmode to LockedMode");
        }
        if(sleepword != null)
        {
            super.aString40 = sleepword;
            super.aString41 = sleepword;
        }
        if((super.nogfx || ((Class6) (aClass6_Sub1_724)).nogfxplz) && mouseClick > 0)
            mouseClick = 0;
        if(fatigue() >= sleepthresh && inventoryCount(1263) > 0 && !asleep)
        {
            useitemid(1263);
            chatText2("@BOT@Fatigue crossed sleepThresh - sleeping...");
            asleep = true;
        }
        gettime();
        int j4 = optionObjXArray[0] + myPlayerX1;
        int i6 = optionObjYArray[0] + myPlayerY1;
        if(j4 != MYLastMousePosX)
        {
            MYLastMousePosX = j4;
            if(i6 != MYLastMousePosY)
            {
                MYLastMousePosY = i6;
                XClient.sendPacketIG("@MOUSEPOS " + j4 + " " + i6);
            }
        }
        int j7 = posX();
        int k8 = posY();
        if(j7 != MYLastMousePosX)
        {
            MYLastMousePosX = j7;
            if(k8 != MYLastMousePosY)
            {
                MYLastMousePosY = k8;
                XClient.sendPacketIG("@MYPOS " + j7 + " " + k8);
            }
        }
        if(PacketStored)
        {
            parseData2(PacketStore);
            PacketStored = false;
        }
        if(WText1)
            aClass6_Sub1_724.FloatText(WText1Text, WText1X, WText1Y, 1, 0xffff00);
        if(WText2)
            aClass6_Sub1_724.FloatText(WText2Text, WText2X, WText2Y, 1, 0xffff00);
        if(WText3)
            aClass6_Sub1_724.FloatText(WText3Text, WText3X, WText3Y, 1, 0xffff00);
        if(WText4)
            aClass6_Sub1_724.FloatText(WText4Text, WText4X, WText4Y, 1, 0xffff00);
        if(WText5)
            aClass6_Sub1_724.FloatText(WText5Text, WText5X, WText5Y, 1, 0xffff00);
        if(WText6)
            aClass6_Sub1_724.FloatText(WText6Text, WText6X, WText6Y, 1, 0xffff00);
        if(WText7)
            aClass6_Sub1_724.FloatText(WText7Text, WText7X, WText7Y, 1, 0xffff00);
        if(WText8)
            aClass6_Sub1_724.FloatText(WText8Text, WText8X, WText8Y, 1, 0xffff00);
        if(WText9)
            aClass6_Sub1_724.FloatText(WText9Text, WText9X, WText9Y, 1, 0xffff00);
        if(!aBoolean717)
        {
            int k9 = 2203 - (myPlayerY2 + anInt807 + myPlayerY1);
            if(myPlayerX2 + anInt806 + myPlayerX1 >= 2640)
                k9 = -50;
            if(k9 > 0)
            {
                int i11 = 1 + k9 / 6;
                aClass6_Sub1_724.method231(453, anInt677 - 56, anInt948 + 13);
                aClass6_Sub1_724.FloatText("@dre@[@whi@Wilderness@dre@]", 465, anInt677 - 20, 1, 0xffff00);
                aClass6_Sub1_724.FloatText("@dre@[@whi@Level " + i11 + "@dre@]", 465, anInt677 - 7, 1, 0xffff00);
                if(anInt725 == 0)
                    anInt725 = 2;
            }
            if(anInt725 == 0 && k9 > -10 && k9 <= 0)
                anInt725 = 1;
        }
        if(anInt780 == 0)
        {
            for(int l9 = 0; l9 < 5; l9++)
                if(anIntArray935[l9] > 0)
                {
                    String s = aStringArray774[l9];
                    aClass6_Sub1_724.method257(s, 7, anInt677 - 18 - l9 * 12, 1, 0xffff00);
                }

        }
        aClass4_775.method172(anInt776);
        aClass4_775.method172(anInt778);
        aClass4_775.method172(anInt779);
        if(anInt780 == 1)
            aClass4_775.method171(anInt776);
        else
        if(anInt780 == 2)
            aClass4_775.method171(anInt778);
        else
        if(anInt780 == 3)
            aClass4_775.method171(anInt779);
        Class4.anInt225 = 2;
        aClass4_775.method142();
        Class4.anInt225 = 0;
        aClass6_Sub1_724.method233(((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 197, 3, anInt948, 128);
        CentralControls();
        aClass6_Sub1_724.aBoolean338 = false;
        ChatTypes();
        aClass6_Sub1_724.method211(aGraphics857, 0, 0);
    }

    void method109(int i, int j, int k, int l, int i1, int j1, int k1)
    {
        int l1 = anIntArray730[i1];
        int i2 = anIntArray972[i1];
        if(l1 == 0)
        {
            int j2 = 255 + i2 * 5 * 256;
            aClass6_Sub1_724.method213(i + k / 2, j + l / 2, 20 + i2 * 2, j2, 255 - i2 * 5);
        }
        if(l1 == 1)
        {
            int k2 = 0xff0000 + i2 * 5 * 256;
            aClass6_Sub1_724.method213(i + k / 2, j + l / 2, 10 + i2, k2, 255 - i2 * 5);
        }
    }

    public void method11(int i, int j, int k)
    {
        int l = Class1.anInt144;
        anIntArray981[anInt980] = j;
        anIntArray982[anInt980] = k;
        anInt980 = anInt980 + 1 & 0x1fff;
label0:
        for(int i1 = 10; i1 < 4000; i1++)
        {
            int j1 = anInt980 - i1 & 0x1fff;
            if(anIntArray981[j1] != j || anIntArray982[j1] != k)
                continue;
            boolean flag = false;
            int k1 = 1;
            do
            {
                if(k1 >= i1)
                    continue label0;
                int l1 = anInt980 - k1 & 0x1fff;
                int i2 = j1 - k1 & 0x1fff;
                if(anIntArray981[i2] != j || anIntArray982[i2] != k)
                    flag = true;
                if(anIntArray981[l1] != anIntArray981[i2] || anIntArray982[l1] != anIntArray982[i2])
                    continue label0;
                if(k1 == i1 - 1 && flag && anInt869 == 0 && anInt746 == 0)
                {
                    LogOutControls();
                    return;
                }
                k1++;
            } while(true);
        }

    }

    public void Options()
    {
        int i = Class1.anInt144;
        if(mouseClick != 0)
        {
            int j = 0;
            do
            {
                if(j >= optionCount)
                    break;
                int l = anInt752 + 2;
                int j1 = anInt753 + 27 + j * 15;
                if(super.mouseX > l - 2 && super.mouseY > j1 - 12 && super.mouseY < j1 + 4 && super.mouseX < (l - 3) + anInt754)
                {
                    optionPacketSender(anIntArray984[j]);
                    break;
                }
                j++;
            } while(true);
            mouseClick = 0;
            aBoolean854 = false;
            return;
        }
        if(super.mouseX < anInt752 - 10 || super.mouseY < anInt753 - 10 || super.mouseX > anInt752 + anInt754 + 10 || super.mouseY > anInt753 + anInt755 + 10)
        {
            aBoolean854 = false;
            return;
        }
        aClass6_Sub1_724.method214(anInt752, anInt753, anInt754, anInt755, 0xd0d0d0, 160);
        aClass6_Sub1_724.method257("WasteDBoT", anInt752 + 2, anInt753 + 12, 1, 65535);
        for(int k = 0; k < optionCount; k++)
        {
            int i1 = anInt752 + 2;
            int k1 = anInt753 + 27 + k * 15;
            int l1 = 0xffffff;
            if(super.mouseX > i1 - 2 && super.mouseY > k1 - 12 && super.mouseY < k1 + 4 && super.mouseX < (i1 - 3) + anInt754)
                l1 = 0xffff00;
            aClass6_Sub1_724.method257(optionNameArray[anIntArray984[k]] + " " + optionObjectArray[anIntArray984[k]], i1, k1, 1, l1);
        }

    }

    public void method111(int i, int j, int k)
    {
        if(k == 0)
        {
            method83(myPlayerX2, myPlayerY2, i, j - 1, i, j, false, true);
            return;
        }
        if(k == 1)
        {
            method83(myPlayerX2, myPlayerY2, i - 1, j, i, j, false, true);
            return;
        } else
        {
            method83(myPlayerX2, myPlayerY2, i, j, i, j, true, true);
            return;
        }
    }

    public boolean FileLoad2(int i)
    {
        int j = myPlayer.posX / 128;
        int k = myPlayer.posY / 128;
        for(int l = 2; l >= 1; l--)
        {
            if(i == 1 && ((aClass19_883.anIntArrayArray608[j][k - l] & 0x80) == 128 || (aClass19_883.anIntArrayArray608[j - l][k] & 0x80) == 128 || (aClass19_883.anIntArrayArray608[j - l][k - l] & 0x80) == 128))
                return false;
            if(i == 3 && ((aClass19_883.anIntArrayArray608[j][k + l] & 0x80) == 128 || (aClass19_883.anIntArrayArray608[j - l][k] & 0x80) == 128 || (aClass19_883.anIntArrayArray608[j - l][k + l] & 0x80) == 128))
                return false;
            if(i == 5 && ((aClass19_883.anIntArrayArray608[j][k + l] & 0x80) == 128 || (aClass19_883.anIntArrayArray608[j + l][k] & 0x80) == 128 || (aClass19_883.anIntArrayArray608[j + l][k + l] & 0x80) == 128))
                return false;
            if(i == 7 && ((aClass19_883.anIntArrayArray608[j][k - l] & 0x80) == 128 || (aClass19_883.anIntArrayArray608[j + l][k] & 0x80) == 128 || (aClass19_883.anIntArrayArray608[j + l][k - l] & 0x80) == 128))
                return false;
            if(i == 0 && (aClass19_883.anIntArrayArray608[j][k - l] & 0x80) == 128)
                return false;
            if(i == 2 && (aClass19_883.anIntArrayArray608[j - l][k] & 0x80) == 128)
                return false;
            if(i == 4 && (aClass19_883.anIntArrayArray608[j][k + l] & 0x80) == 128)
                return false;
            if(i == 6 && (aClass19_883.anIntArrayArray608[j + l][k] & 0x80) == 128)
                return false;
        }

        return true;
    }

    public void LoadStuff()
    {
        int i = Class1.anInt144;
        byte abyte0[] = UnPack("textures" + Class18.anInt578 + ".jag", "Textures", 50);
        if(abyte0 == null)
        {
            aBoolean922 = true;
            return;
        }
        byte abyte1[] = Class15.method366("index.dat", 0, abyte0);
        aClass10_739.method303(Class1.anInt61, 7, 11);
        for(int j = 0; j < Class1.anInt61; j++)
        {
            String s = Class1.aStringArray67[j];
            byte abyte2[] = Class15.method366(s + ".dat", 0, abyte0);
            aClass6_Sub1_724.method225(anInt952, abyte2, abyte1, 1);
            aClass6_Sub1_724.method216(0, 0, 128, 128, 0xff00ff);
            aClass6_Sub1_724.method231(0, 0, anInt952);
            int k = ((Class6) (aClass6_Sub1_724)).anIntArray328[anInt952];
            String s1 = Class1.aStringArray68[j];
            if(s1 != null && s1.length() > 0)
            {
                byte abyte3[] = Class15.method366(s1 + ".dat", 0, abyte0);
                aClass6_Sub1_724.method225(anInt952, abyte3, abyte1, 1);
                aClass6_Sub1_724.method231(0, 0, anInt952);
            }
            aClass6_Sub1_724.method230(anInt953 + j, 0, 0, k, k);
            int l = k * k;
            for(int i1 = 0; i1 < l; i1++)
                if(((Class6) (aClass6_Sub1_724)).anIntArrayArray321[anInt953 + j][i1] == 65280)
                    ((Class6) (aClass6_Sub1_724)).anIntArrayArray321[anInt953 + j][i1] = 0xff00ff;

            aClass6_Sub1_724.method227(anInt953 + j);
            aClass10_739.method304(j, ((Class6) (aClass6_Sub1_724)).aByteArrayArray322[anInt953 + j], ((Class6) (aClass6_Sub1_724)).anIntArrayArray323[anInt953 + j], k / 64 - 1);
        }

    }

    public void method114()
    {
        if(toolbar == 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 && super.mouseY < 35)
            toolbar = 1;
        if(toolbar == 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 33 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 33 && super.mouseY < 35)
        {
            toolbar = 2;
            anInt859 = (int)(Math.random() * 0.0D) - 0;
            anInt860 = (int)(Math.random() * 0.0D) - 0;
        }
        if(toolbar == 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 66 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 66 && super.mouseY < 35)
            toolbar = 3;
        if(toolbar == 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 99 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 99 && super.mouseY < 35)
            toolbar = 4;
        if(toolbar == 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 132 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 132 && super.mouseY < 35)
            toolbar = 5;
        if(toolbar == 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 165 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 165 && super.mouseY < 35)
            toolbar = 6;
        if(toolbar != 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 && super.mouseY < 26)
            toolbar = 1;
        if(toolbar != 0 && toolbar != 2 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 33 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 33 && super.mouseY < 26)
        {
            toolbar = 2;
            anInt859 = (int)(Math.random() * 0.0D) - 0;
            anInt860 = (int)(Math.random() * 0.0D) - 0;
        }
        if(toolbar != 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 66 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 66 && super.mouseY < 26)
            toolbar = 3;
        if(toolbar != 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 99 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 99 && super.mouseY < 26)
            toolbar = 4;
        if(toolbar != 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 132 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 132 && super.mouseY < 26)
            toolbar = 5;
        if(toolbar != 0 && super.mouseX >= ((Class6) (aClass6_Sub1_724)).anInt311 - 35 - 165 && super.mouseY >= 3 && super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 3 - 165 && super.mouseY < 26)
            toolbar = 6;
        if(toolbar == 1 && (super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 248 || super.mouseY > 36 + (anInt707 / 5) * 34))
            toolbar = 0;
        if(toolbar == 3 && (super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 199 || super.mouseY > 316))
            toolbar = 0;
        if((toolbar == 2 || toolbar == 4 || toolbar == 5) && (super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 199 || super.mouseY > 240))
            toolbar = 0;
        if(toolbar == 6 && (super.mouseX < ((Class6) (aClass6_Sub1_724)).anInt311 - 199 || super.mouseY > 311))
            toolbar = 0;
    }

    public void StatQuest(boolean flag)
    {
        int i = Class1.anInt144;
        int j = ((Class6) (aClass6_Sub1_724)).anInt311 - 199;
        int k = 36;
        aClass6_Sub1_724.method231(j - 49, 3, anInt948 + 3);
        char c = '\304';
        char c1 = '\u0113';
        int l;
        int i1 = l = Class6.method223(100, 100, 100);
        if(anInt828 == 0)
            i1 = Class6.method223(190, 190, 190);
        else
            l = Class6.method223(190, 190, 190);
        aClass6_Sub1_724.method214(j, k, c / 2, 24, i1, 128);
        aClass6_Sub1_724.method214(j + c / 2, k, c / 2, 24, l, 128);
        aClass6_Sub1_724.method214(j, k + 24, c, c1 - 24, Class6.method223(100, 100, 100), 128);
        aClass6_Sub1_724.method218(j, k + 24, c, 0);
        aClass6_Sub1_724.method219(j + c / 2, k, 24, 0);
        aClass6_Sub1_724.FloatText("Stats", j + c / 4, k + 16, 4, 0);
        aClass6_Sub1_724.FloatText("Quests", j + c / 4 + c / 2, k + 16, 4, 0);
        if(anInt828 == 0)
        {
            int j1 = 72;
            int l1 = -1;
            aClass6_Sub1_724.method257("Skills", j + 5, j1, 3, 0xffff00);
            j1 += 13;
            for(int i2 = 0; i2 < 9; i2++)
            {
                int i3 = 0xffffff;
                if(super.mouseX > j + 3 && super.mouseY >= j1 - 11 && super.mouseY < j1 + 2 && super.mouseX < j + 90)
                {
                    i3 = 0xff0000;
                    l1 = i2;
                }
                aClass6_Sub1_724.method257(StatNameArray[i2] + " @yel@" + CurrentStatLevelArray[i2] + "@red@/@yel@" + RealStatLevelArray[i2], j + 5, j1, 1, i3);
                i3 = 0xffffff;
                if(super.mouseX >= j + 90 && super.mouseY >= j1 - 13 - 11 && super.mouseY < (j1 - 13) + 2 && super.mouseX < j + 196)
                {
                    i3 = 0xff0000;
                    l1 = i2 + 9;
                }
                aClass6_Sub1_724.method257(StatNameArray[i2 + 9] + " @yel@" + CurrentStatLevelArray[i2 + 9] + "@red@/@yel@" + RealStatLevelArray[i2 + 9], (j + c / 2) - 5, j1 - 13, 1, i3);
                j1 += 13;
            }

            aClass6_Sub1_724.method257("Quest Points [@yel@" + anInt996 + "@whi@]", (j + c / 2) - 5, j1 - 13, 1, 0xffffff);
            j1 += 12;
            aClass6_Sub1_724.method257("Fatigue [@yel@" + (fatigue * 100) / 750 + "%@whi@]", j + 5, j1 - 13, 1, 0xffffff);
            j1 += 8;
            aClass6_Sub1_724.method257("Equipment Status", j + 5, j1, 3, 0xffff00);
            j1 += 12;
            for(int j2 = 0; j2 < 3; j2++)
            {
                aClass6_Sub1_724.method257(aStringArray932[j2] + " [@yel@" + anIntArray797[j2] + "@whi@]", j + 5, j1, 1, 0xffffff);
                if(j2 < 2)
                    aClass6_Sub1_724.method257(aStringArray932[j2 + 3] + " [@yel@" + anIntArray797[j2 + 3] + "@whi@]", j + c / 2 + 25, j1, 1, 0xffffff);
                j1 += 13;
            }

            j1 += 6;
            aClass6_Sub1_724.method218(j, j1 - 15, c, 0);
            if(l1 != -1)
            {
                aClass6_Sub1_724.method257("@yel@" + aStringArray795[l1] + "@whi@ skill", j + 5, j1, 1, 0xffff00);
                j1 += 12;
                int k2 = anIntArray686[0];
                for(int j3 = 0; j3 < 98; j3++)
                    if(CurrentXPArray[l1] >= anIntArray686[j3])
                        k2 = anIntArray686[j3 + 1];

                aClass6_Sub1_724.method257("Total xp [@yel@" + CurrentXPArray[l1] / 4 + "@whi@]", j + 5, j1, 1, 0xffffff);
                j1 += 12;
                aClass6_Sub1_724.method257("Next level at [@yel@" + k2 / 4 + "@whi@]", j + 5, j1, 1, 0xffffff);
            } else
            {
                aClass6_Sub1_724.method257("Overall levels", j + 5, j1, 1, 0xffff00);
                j1 += 12;
                int l2 = 0;
                for(int k3 = 0; k3 < 18; k3++)
                    l2 += RealStatLevelArray[k3];

                aClass6_Sub1_724.method257("Skill total [@yel@" + l2 + "@whi@]", j + 5, j1, 1, 0xffffff);
                j1 += 12;
                aClass6_Sub1_724.method257("Combat level [@yel@" + myPlayer.combatLevel + "@whi@]", j + 5, j1, 1, 0xffffff);
                j1 += 12;
            }
        }
        if(anInt828 == 1)
        {
            aClass4_826.method165(anInt827);
            aClass4_826.method167(anInt827, 0, "@whi@Quest-list (green=completed)");
            for(int k1 = 0; k1 < 50; k1++)
                aClass4_826.method167(anInt827, k1 + 1, (aBooleanArray716[k1] ? "@gre@" : "@red@") + aStringArray930[k1]);

            aClass4_826.method142();
        }
        if(!flag)
            return;
        j = super.mouseX - (((Class6) (aClass6_Sub1_724)).anInt311 - 199);
        k = super.mouseY - 36;
        if(j >= 0 && k >= 0 && j < c && k < c1)
        {
            if(anInt828 == 1)
                aClass4_826.method139(j + (((Class6) (aClass6_Sub1_724)).anInt311 - 199), k + 36, super.anInt36, super.anInt35);
            if(k <= 24 && mouseClick == 1)
            {
                if(j < 98)
                {
                    anInt828 = 0;
                    return;
                }
                if(j > 98)
                    anInt828 = 1;
            }
        }
    }

    public void ReportAbuse()
    {
        int i = Class1.anInt144;
        anInt863 = 0;
        int j = 135;
        for(int k = 0; k < 12; k++)
        {
            if(super.mouseX > 66 && super.mouseX < 446 && super.mouseY >= j - 12 && super.mouseY < j + 3)
                anInt863 = k + 1;
            j += 14;
        }

        if(mouseClick != 0 && anInt863 != 0)
        {
            mouseClick = 0;
            anInt986 = 2;
            super.aString40 = "";
            super.aString41 = "";
            return;
        }
        j += 15;
        if(mouseClick != 0)
        {
            mouseClick = 0;
            if(super.mouseX < 56 || super.mouseY < 35 || super.mouseX > 456 || super.mouseY > 325)
            {
                anInt986 = 0;
                return;
            }
            if(super.mouseX > 66 && super.mouseX < 446 && super.mouseY >= j - 15 && super.mouseY < j + 5)
            {
                anInt986 = 0;
                return;
            }
        }
        aClass6_Sub1_724.method216(56, 35, 400, 290, 0);
        aClass6_Sub1_724.method217(56, 35, 400, 290, 0xffffff);
        j = 50;
        aClass6_Sub1_724.FloatText("This form is for reporting players who are breaking our rules", 256, j, 1, 0xffffff);
        j += 15;
        aClass6_Sub1_724.FloatText("Using it sends a snapshot of the last 60 secs of activity to us", 256, j, 1, 0xffffff);
        j += 15;
        aClass6_Sub1_724.FloatText("If you misuse this form, you will be banned.", 256, j, 1, 0xff8000);
        j += 15;
        j += 10;
        aClass6_Sub1_724.FloatText("First indicate which of our 12 rules is being broken. For a detailed", 256, j, 1, 0xffff00);
        j += 15;
        aClass6_Sub1_724.FloatText("explanation of each rule please read the manual on our website.", 256, j, 1, 0xffff00);
        j += 15;
        int l;
        if(anInt863 == 1)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("1: Offensive language", 256, j, 1, l);
        j += 14;
        if(anInt863 == 2)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("2: Item scamming", 256, j, 1, l);
        j += 14;
        if(anInt863 == 3)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("3: Password scamming", 256, j, 1, l);
        j += 14;
        if(anInt863 == 4)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("4: Bug abuse", 256, j, 1, l);
        j += 14;
        if(anInt863 == 5)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("5: Jagex Staff impersonation", 256, j, 1, l);
        j += 14;
        if(anInt863 == 6)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("6: Account sharing/trading", 256, j, 1, l);
        j += 14;
        if(anInt863 == 7)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("7: Macroing", 256, j, 1, l);
        j += 14;
        if(anInt863 == 8)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("8: Mutiple logging in", 256, j, 1, l);
        j += 14;
        if(anInt863 == 9)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("9: Encouraging others to break rules", 256, j, 1, l);
        j += 14;
        if(anInt863 == 10)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("10: Misuse of customer support", 256, j, 1, l);
        j += 14;
        if(anInt863 == 11)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("11: Advertising / website", 256, j, 1, l);
        j += 14;
        if(anInt863 == 12)
        {
            aClass6_Sub1_724.method217(66, j - 12, 380, 15, 0xffffff);
            l = 0xff8000;
        } else
        {
            l = 0xffffff;
        }
        aClass6_Sub1_724.FloatText("12: Real world item trading", 256, j, 1, l);
        j += 14;
        j += 15;
        l = 0xffffff;
        if(super.mouseX > 196 && super.mouseX < 316 && super.mouseY > j - 15 && super.mouseY < j + 5)
            l = 0xffff00;
        aClass6_Sub1_724.FloatText("Click here to cancel", 256, j, 1, l);
    }

    public void Shop()
    {
        int i = Class1.anInt144;
        if(mouseClick != 0)
        {
            mouseClick = 0;
            int j = super.mouseX - 52;
            int k = super.mouseY - 44;
            if(j >= 0 && k >= 12 && j < 408 && k < 246)
            {
                int l = 0;
                for(int j1 = 0; j1 < 5; j1++)
                {
                    for(int i2 = 0; i2 < 8; i2++)
                    {
                        int i3 = 7 + i2 * 49;
                        int i4 = 28 + j1 * 34;
                        if(j > i3 && j < i3 + 49 && k > i4 && k < i4 + 34 && shopItemID[l] != -1)
                        {
                            selectedShopItem = l;
                            anInt904 = shopItemID[l];
                        }
                        l++;
                    }

                }

                if(selectedShopItem >= 0)
                {
                    int k1 = shopItemID[selectedShopItem];
                    if(k1 != -1)
                    {
                        if(shopItemCount[selectedShopItem] > 0 && j > 298 && k >= 204 && j < 408 && k <= 215)
                        {
                            int j2 = anInt900 + anIntArray738[selectedShopItem];
                            if(j2 < 10)
                                j2 = 10;
                            int j3 = (j2 * Class1.shopBaseWorth[k1]) / 100;
                            super.packets.packetID(157);
                            super.packets.variables343(shopItemID[selectedShopItem]);
                            super.packets.method332(j3);
                            super.packets.sendpacket();
                            System.out.println("BuyItem(" + shopItemID[selectedShopItem] + "," + j3 + ")");
                        }
                        if(inventoryCount(k1) > 0 && j > 2 && k >= 229 && j < 112 && k <= 240)
                        {
                            int k2 = anInt899 + anIntArray738[selectedShopItem];
                            if(k2 < 10)
                                k2 = 10;
                            int k3 = (k2 * Class1.shopBaseWorth[k1]) / 100;
                            super.packets.packetID(211);
                            super.packets.variables343(shopItemID[selectedShopItem]);
                            super.packets.method332(k3);
                            super.packets.sendpacket();
                            System.out.println("SellItem(" + shopItemID[selectedShopItem] + "," + k3 + ")");
                        }
                    }
                }
            } else
            {
                super.packets.packetID(56);
                super.packets.sendpacket();
                aBoolean727 = false;
                System.out.println("CloseShop()");
                XClient.sendPacket("SHOPWINDOW 0");
                return;
            }
        }
        byte byte0 = 52;
        byte byte1 = 44;
        aClass6_Sub1_724.method216(byte0, byte1, 408, 12, 192);
        int i1 = 0x989898;
        aClass6_Sub1_724.method214(byte0, byte1 + 12, 408, 17, i1, 160);
        aClass6_Sub1_724.method214(byte0, byte1 + 29, 8, 170, i1, 160);
        aClass6_Sub1_724.method214(byte0 + 399, byte1 + 29, 9, 170, i1, 160);
        aClass6_Sub1_724.method214(byte0, byte1 + 199, 408, 47, i1, 160);
        aClass6_Sub1_724.method257("Buying and selling items", byte0 + 1, byte1 + 10, 1, 0xffffff);
        int l1 = 0xffffff;
        if(super.mouseX > byte0 + 320 && super.mouseY >= byte1 && super.mouseX < byte0 + 408 && super.mouseY < byte1 + 12)
            l1 = 0xff0000;
        aClass6_Sub1_724.method254("Close window", byte0 + 406, byte1 + 10, 1, l1);
        aClass6_Sub1_724.method257("Shops stock in green", byte0 + 2, byte1 + 24, 1, 65280);
        aClass6_Sub1_724.method257("Number you own in blue", byte0 + 135, byte1 + 24, 1, 65535);
        aClass6_Sub1_724.method257("Your money: " + inventoryCount(10) + "gp", byte0 + 280, byte1 + 24, 1, 0xffff00);
        int l2 = 0xd0d0d0;
        int l3 = 0;
        for(int j4 = 0; j4 < 5; j4++)
        {
            for(int l4 = 0; l4 < 8; l4++)
            {
                int k5 = byte0 + 7 + l4 * 49;
                int j6 = byte1 + 28 + j4 * 34;
                if(selectedShopItem == l3)
                    aClass6_Sub1_724.method214(k5, j6, 49, 34, 0xff0000, 160);
                else
                    aClass6_Sub1_724.method214(k5, j6, 49, 34, l2, 160);
                aClass6_Sub1_724.method217(k5, j6, 50, 35, 0);
                if(shopItemID[l3] != -1)
                {
                    aClass6_Sub1_724.method247(k5, j6, 48, 32, anInt950 + Class1.anIntArray53[shopItemID[l3]], Class1.anIntArray58[shopItemID[l3]], 0, 0, false);
                    aClass6_Sub1_724.method257(String.valueOf(shopItemCount[l3]), k5 + 1, j6 + 10, 1, 65280);
                    aClass6_Sub1_724.method254(String.valueOf(inventoryCount(shopItemID[l3])), k5 + 47, j6 + 10, 1, 65535);
                }
                l3++;
            }

        }

        aClass6_Sub1_724.method218(byte0 + 5, byte1 + 222, 398, 0);
        if(selectedShopItem == -1)
        {
            aClass6_Sub1_724.FloatText("Select an object to buy or sell", byte0 + 204, byte1 + 214, 3, 0xffff00);
            return;
        }
        int k4 = shopItemID[selectedShopItem];
        if(k4 != -1)
        {
            if(shopItemCount[selectedShopItem] > 0)
            {
                int i5 = anInt900 + anIntArray738[selectedShopItem];
                if(i5 < 10)
                    i5 = 10;
                int l5 = (i5 * Class1.shopBaseWorth[k4]) / 100;
                aClass6_Sub1_724.method257("Buy a new " + Class1.itemNameArray[k4] + " for " + l5 + "gp", byte0 + 2, byte1 + 214, 1, 0xffff00);
                int k6 = 0xffffff;
                if(super.mouseX > byte0 + 298 && super.mouseY >= byte1 + 204 && super.mouseX < byte0 + 408 && super.mouseY <= byte1 + 215)
                    k6 = 0xff0000;
                aClass6_Sub1_724.method254("Click here to buy", byte0 + 405, byte1 + 214, 3, k6);
            } else
            {
                aClass6_Sub1_724.FloatText("This item is not currently available to buy", byte0 + 204, byte1 + 214, 3, 0xffff00);
            }
            if(inventoryCount(k4) > 0)
            {
                int j5 = anInt899 + anIntArray738[selectedShopItem];
                if(j5 < 10)
                    j5 = 10;
                int i6 = (j5 * Class1.shopBaseWorth[k4]) / 100;
                aClass6_Sub1_724.method254("Sell your " + Class1.itemNameArray[k4] + " for " + i6 + "gp", byte0 + 405, byte1 + 239, 1, 0xffff00);
                int l6 = 0xffffff;
                if(super.mouseX > byte0 + 2 && super.mouseY >= byte1 + 229 && super.mouseX < byte0 + 112 && super.mouseY <= byte1 + 240)
                    l6 = 0xff0000;
                aClass6_Sub1_724.method257("Click here to sell", byte0 + 2, byte1 + 239, 3, l6);
                return;
            }
            aClass6_Sub1_724.FloatText("You do not have any of this item to sell", byte0 + 204, byte1 + 239, 3, 0xffff00);
        }
    }

    public void chatText(String s, int i)
    {
        gettime();
        cal = new GregorianCalendar();
        int j = Class1.anInt144;
        if(i == 2 || i == 4 || i == 6)
        {
            for(; s.length() > 5 && s.charAt(0) == '@' && s.charAt(4) == '@'; s = s.substring(5));
            int k = s.indexOf(":");
            if(k != -1)
            {
                String s1 = s.substring(0, k);
                long l1 = Class15.method362(s1);
                for(int i1 = 0; i1 < super.anInt627; i1++)
                    if(super.aLongArray628[i1] == l1)
                        return;

            }
        }
        if(i == 2)
            s = currenttime + " " + "@yel@" + s;
        if(i == 3 || i == 4)
            s = currenttime + " " + "@whi@" + s;
        if(i == 5)
            s = currenttime + " " + " " + s;
        if(i == 6)
            s = currenttime + " " + "@cya@" + s;
        if(anInt780 != 0)
        {
            if(i == 4 || i == 3)
                anInt790 = 200;
            if(i == 2 && anInt780 != 1)
                anInt791 = 200;
            if(i == 5 && anInt780 != 2)
                anInt792 = 200;
            if(i == 6 && anInt780 != 3)
                anInt793 = 200;
            if(i == 3 && anInt780 != 0)
                anInt780 = 0;
            if(i == 6 && anInt780 != 3 && anInt780 != 0)
                anInt780 = 0;
        }
        for(int l = 4; l > 0; l--)
        {
            aStringArray774[l] = aStringArray774[l - 1];
            anIntArray935[l] = anIntArray935[l - 1];
        }

        aStringArray774[0] = s;
        anIntArray935[0] = 300;
        if(i == 2)
            if(aClass4_775.anIntArray187[anInt776] == aClass4_775.anIntArray188[anInt776] - 4)
                aClass4_775.method168(anInt776, s, true);
            else
                aClass4_775.method168(anInt776, s, false);
        if(i == 5)
            if(aClass4_775.anIntArray187[anInt778] == aClass4_775.anIntArray188[anInt778] - 4)
                aClass4_775.method168(anInt778, s, true);
            else
                aClass4_775.method168(anInt778, s, false);
        if(i == 6)
        {
            if(aClass4_775.anIntArray187[anInt779] == aClass4_775.anIntArray188[anInt779] - 4)
            {
                aClass4_775.method168(anInt779, s, true);
                return;
            }
            aClass4_775.method168(anInt779, s, false);
        }
    }

    void method119(int i, int j, int k, int l, int i1, int j1, int k1)
    {
        int l1 = Class1.anIntArray53[i1] + anInt950;
        int i2 = Class1.anIntArray58[i1];
        aClass6_Sub1_724.method247(i, j, k, l, l1, i2, 0, 0, false);
    }

    public void method120()
    {
        int i = Class1.anInt144;
        aClass4_830.method139(super.mouseX, super.mouseY, super.anInt36, super.anInt35);
        if(aClass4_830.method140(anInt694))
            do
                anInt871 = ((anInt871 - 1) + Class1.anInt123) % Class1.anInt123;
            while((Class1.anIntArray84[anInt871] & 3) != 1 || (Class1.anIntArray84[anInt871] & 4 * anInt878) == 0);
        if(aClass4_830.method140(anInt695))
            do
                anInt871 = (anInt871 + 1) % Class1.anInt123;
            while((Class1.anIntArray84[anInt871] & 3) != 1 || (Class1.anIntArray84[anInt871] & 4 * anInt878) == 0);
        if(aClass4_830.method140(anInt696))
            anInt874 = ((anInt874 - 1) + anIntArray885.length) % anIntArray885.length;
        if(aClass4_830.method140(anInt697))
            anInt874 = (anInt874 + 1) % anIntArray885.length;
        if(aClass4_830.method140(anInt698) || aClass4_830.method140(anInt699))
        {
            for(anInt878 = 3 - anInt878; (Class1.anIntArray84[anInt871] & 3) != 1 || (Class1.anIntArray84[anInt871] & 4 * anInt878) == 0; anInt871 = (anInt871 + 1) % Class1.anInt123);
            for(; (Class1.anIntArray84[anInt872] & 3) != 2 || (Class1.anIntArray84[anInt872] & 4 * anInt878) == 0; anInt872 = (anInt872 + 1) % Class1.anInt123);
        }
        if(aClass4_830.method140(anInt700))
            anInt875 = ((anInt875 - 1) + anIntArray832.length) % anIntArray832.length;
        if(aClass4_830.method140(anInt701))
            anInt875 = (anInt875 + 1) % anIntArray832.length;
        if(aClass4_830.method140(anInt702))
            anInt877 = ((anInt877 - 1) + anIntArray829.length) % anIntArray829.length;
        if(aClass4_830.method140(anInt703))
            anInt877 = (anInt877 + 1) % anIntArray829.length;
        if(aClass4_830.method140(anInt704))
            anInt876 = ((anInt876 - 1) + anIntArray832.length) % anIntArray832.length;
        if(aClass4_830.method140(anInt705))
            anInt876 = (anInt876 + 1) % anIntArray832.length;
        if(aClass4_830.method140(anInt706))
        {
            super.packets.packetID(16);
            super.packets.variables348(anInt878);
            super.packets.variables348(anInt871);
            super.packets.variables348(anInt872);
            super.packets.variables348(anInt873);
            super.packets.variables348(anInt874);
            super.packets.variables348(anInt875);
            super.packets.variables348(anInt876);
            super.packets.variables348(anInt877);
            super.packets.sendpacket();
            aClass6_Sub1_724.method212();
            aBoolean992 = false;
        }
    }

    public void BigLoad()
    {
        int i = Class1.anInt144;
        byte abyte0[] = UnPack("media" + Class18.anInt576 + ".jag", "2d graphics", 20);
        if(abyte0 == null)
        {
            aBoolean922 = true;
            return;
        }
        byte abyte1[] = Class15.method366("index.dat", 0, abyte0);
        aClass6_Sub1_724.method225(anInt948, Class15.method366("inv1.dat", 0, abyte0), abyte1, 1);
        aClass6_Sub1_724.method225(anInt948 + 1, Class15.method366("inv2.dat", 0, abyte0), abyte1, 6);
        aClass6_Sub1_724.method225(anInt948 + 9, Class15.method366("bubble.dat", 0, abyte0), abyte1, 1);
        aClass6_Sub1_724.method225(anInt948 + 10, Class15.method366("runescape.dat", 0, abyte0), abyte1, 1);
        aClass6_Sub1_724.method225(anInt948 + 11, Class15.method366("splat.dat", 0, abyte0), abyte1, 3);
        aClass6_Sub1_724.method225(anInt948 + 14, Class15.method366("icon.dat", 0, abyte0), abyte1, 8);
        aClass6_Sub1_724.method225(anInt948 + 22, Class15.method366("hbar.dat", 0, abyte0), abyte1, 1);
        aClass6_Sub1_724.method225(anInt948 + 23, Class15.method366("hbar2.dat", 0, abyte0), abyte1, 1);
        aClass6_Sub1_724.method225(anInt948 + 24, Class15.method366("compass.dat", 0, abyte0), abyte1, 1);
        aClass6_Sub1_724.method225(anInt948 + 25, Class15.method366("buttons.dat", 0, abyte0), abyte1, 2);
        aClass6_Sub1_724.method225(anInt949, Class15.method366("scrollbar.dat", 0, abyte0), abyte1, 2);
        aClass6_Sub1_724.method225(anInt949 + 2, Class15.method366("corners.dat", 0, abyte0), abyte1, 4);
        aClass6_Sub1_724.method225(anInt949 + 6, Class15.method366("arrows.dat", 0, abyte0), abyte1, 2);
        aClass6_Sub1_724.method225(anInt951, Class15.method366("projectile.dat", 0, abyte0), abyte1, Class1.anInt108);
        int j = Class1.anInt76;
        for(int k = 1; j > 0; k++)
        {
            int k1 = j;
            j -= 30;
            if(k1 > 30)
                k1 = 30;
            aClass6_Sub1_724.method225(anInt950 + (k - 1) * 30, Class15.method366("objects" + k + ".dat", 0, abyte0), abyte1, k1);
        }

        aClass6_Sub1_724.method228(anInt948);
        aClass6_Sub1_724.method228(anInt948 + 9);
        for(int l = 11; l <= 26; l++)
            aClass6_Sub1_724.method228(anInt948 + l);

        for(int i1 = 0; i1 < Class1.anInt108; i1++)
            aClass6_Sub1_724.method228(anInt951 + i1);

        for(int j1 = 0; j1 < Class1.anInt76; j1++)
            aClass6_Sub1_724.method228(anInt950 + j1);

    }

    public byte[] UnPack(String s, String s1, int i)
    {
        if(!aBoolean979)
            s = "./Data/" + s;
        byte abyte0[] = Class8.method265(s);
        if(abyte0 != null)
        {
            int j = ((abyte0[0] & 0xff) << 16) + ((abyte0[1] & 0xff) << 8) + (abyte0[2] & 0xff);
            int k = ((abyte0[3] & 0xff) << 16) + ((abyte0[4] & 0xff) << 8) + (abyte0[5] & 0xff);
            byte abyte1[] = new byte[abyte0.length - 6];
            for(int l = 0; l < abyte0.length - 6; l++)
                abyte1[l] = abyte0[l + 6];

            method15(i, "Unpacking " + s1);
            if(k != j)
            {
                byte abyte2[] = new byte[j];
                Class3.method130(abyte2, j, abyte1, k, 0);
                return abyte2;
            } else
            {
                return abyte1;
            }
        } else
        {
            return super.UnPack(s, s1, i);
        }
    }

    public Socket SocketJunk(String s, int i)
        throws IOException
    {
        if(Class8.anApplet370 != null)
        {
            Socket socket = Class8.method266(i);
            return socket;
        } else
        {
            Socket socket1 = new Socket(InetAddress.getByName(s), i);
            socket1.setSoTimeout(30000);
            socket1.setTcpNoDelay(true);
            return socket1;
        }
    }

    public void MemJunk()
    {
        if(aBoolean666)
            return;
        if(aBoolean890)
            return;
        if(aBoolean922)
            return;
        try
        {
            anInt918++;
            if(anInt947 == 0)
            {
                super.anInt12 = 0;
                EnterInfo();
            }
            if(anInt947 == 1)
            {
                super.anInt12++;
                ConnectionStuff();
            }
            super.anInt36 = 0;
            super.anInt38 = 0;
            anInt902++;
            if(anInt902 > 500)
            {
                anInt902 = 0;
                int i = (int)(Math.random() * 4D);
                if((i & 1) == 1)
                    anInt895 += anInt896;
                if((i & 2) == 2)
                    anInt973 += anInt974;
            }
            if(anInt895 < -50)
                anInt896 = 2;
            if(anInt895 > 50)
                anInt896 = -2;
            if(anInt973 < -50)
                anInt974 = 2;
            if(anInt973 > 50)
                anInt974 = -2;
            if(anInt790 > 0)
                anInt790--;
            if(anInt791 > 0)
                anInt791--;
            if(anInt792 > 0)
                anInt792--;
            if(anInt793 > 0)
            {
                anInt793--;
                return;
            }
        }
        catch(OutOfMemoryError outofmemoryerror)
        {
            method85();
            aBoolean890 = true;
        }
    }

    public void RunMoveable(Runnable runnable)
    {
        if(Class8.anApplet370 != null)
        {
            Class8.method267(runnable);
            return;
        } else
        {
            Thread thread = new Thread(runnable);
            thread.setDaemon(true);
            thread.start();
            return;
        }
    }

    public void method23()
    {
        anInt749 = 0;
        if(anInt746 != 0)
        {
            method39();
            return;
        } else
        {
            super.method23();
            return;
        }
    }

    public void method3()
    {
        method22();
        loggedout = true;
        method85();
        if(anInputStream_Sub1_901 != null)
            anInputStream_Sub1_901.method122();
    }

    public void method36(String s, String s1)
    {
        if(anInt690 == 1)
            aClass4_667.method169(anInt732, s + " " + s1);
        if(anInt690 == 2)
            aClass4_751.method169(anInt864, s + " " + s1);
        aString862 = s1;
        method70();
        method9();
    }

    public void method38()
    {
        int i = Class1.anInt144;
        anInt749 = 0;
        setmode(1);
        anInt746 = 0;
        anInt690 = 0;
        anInt947 = 1;
        SuperReset();
        aClass6_Sub1_724.method212();
        aClass6_Sub1_724.method211(aGraphics857, 0, 0);
        for(int j = 0; j < objCount; j++)
        {
            aClass10_739.method270(aClass5Array814[j]);
            aClass19_883.method434(objXArray[j], objYArray[j], objID[j]);
        }

        for(int k = 0; k < anInt855; k++)
        {
            aClass10_739.method270(aClass5Array781[k]);
            aClass19_883.method427(anIntArray747[k], anIntArray748[k], anIntArray740[k], anIntArray741[k]);
        }

        objCount = 0;
        anInt855 = 0;
        itemCount = 0;
        PlayerCount = 0;
        for(int l = 0; l < 4000; l++)
            aClass2Array891[l] = null;

        for(int i1 = 0; i1 < 500; i1++)
            PlayerArray[i1] = null;

        npccount = 0;
        for(int j1 = 0; j1 < 5000; j1++)
            aClass2Array957[j1] = null;

        for(int k1 = 0; k1 < 500; k1++)
            NPCArray[k1] = null;

        for(int l1 = 0; l1 < 50; l1++)
            aBooleanArray679[l1] = false;

        mouseClick = 0;
        super.anInt36 = 0;
        super.anInt35 = 0;
        aBoolean727 = false;
        aBoolean879 = false;
        aBoolean870 = false;
        super.anInt624 = 0;
    }

    public void method39()
    {
        anInt749 = 0;
        anInt690 = 0;
        anInt947 = 0;
        anInt746 = 0;
    }

    public void BigLoadError()
    {
        if(aBoolean922)
        {
            Graphics g = getGraphics();
            g.setColor(Color.black);
            g.fillRect(0, 0, 512, 356);
            g.setFont(new Font("Helvetica", 1, 16));
            g.setColor(Color.yellow);
            int i = 35;
            g.drawString("Sorry, an error has occured whilst loading WasteDBoT", 30, i);
            i += 50;
            g.setColor(Color.white);
            g.drawString("Try the following:", 30, i);
            i += 50;
            g.setColor(Color.white);
            g.setFont(new Font("Helvetica", 1, 12));
            g.drawString("1: Make sure you have unpacked data.zip to the right dir", 30, i);
            i += 30;
            g.drawString("2: Make sure you have data.zip...", 30, i);
            i += 30;
            g.drawString("3: Try using a different game-world", 30, i);
            i += 30;
            g.drawString("4: Try rebooting your computer", 30, i);
            i += 30;
            g.drawString("5: Try using another java", 30, i);
            method8(1);
            return;
        }
        if(aBoolean666)
        {
            Graphics g1 = getGraphics();
            g1.setColor(Color.black);
            g1.fillRect(0, 0, 512, 356);
            g1.setFont(new Font("Helvetica", 1, 20));
            g1.setColor(Color.white);
            g1.drawString("Error - unable to load game!", 50, 50);
            g1.drawString("To play RuneScape make sure you play from", 50, 100);
            g1.drawString("http://www.runescape.com", 50, 150);
            method8(1);
            return;
        }
        if(aBoolean890)
        {
            Graphics g2 = getGraphics();
            g2.setColor(Color.black);
            g2.fillRect(0, 0, 512, 356);
            g2.setFont(new Font("Helvetica", 1, 20));
            g2.setColor(Color.white);
            g2.drawString("Error - out of memory!", 50, 50);
            g2.drawString("I suggest getting a new computer", 50, 100);
            g2.drawString("much more powerful....", 50, 150);
            g2.drawString("RuneScape needs about 48meg of spare RAM", 50, 200);
            method8(1);
            return;
        }
        try
        {
            if(anInt947 == 0)
            {
                aClass6_Sub1_724.aBoolean338 = false;
                method70();
            }
            if(anInt947 == 1)
            {
                aClass6_Sub1_724.aBoolean338 = true;
                GameHandle();
                return;
            }
        }
        catch(OutOfMemoryError outofmemoryerror)
        {
            method85();
            aBoolean890 = true;
        }
    }

    public void LogBlock()
    {
        anInt746 = 0;
        chatText("@cya@Sorry, you can't logout at the moment", 3);
        XClient.sendPacket("LOGOUT BLOCK");
    }

    public void MainChatSYS(int i, int j, byte abyte0[])
    {
        int k = Class1.anInt144;
        if(i == 18)
        {
            anInt743 = PlayerCount;
            for(int l = 0; l < anInt743; l++)
                aClass2Array923[l] = PlayerArray[l];

            int i1 = 8;
            myPlayerX2 = Class15.method359(abyte0, i1, 11);
            i1 += 11;
            myPlayerY2 = Class15.method359(abyte0, i1, 13);
            i1 += 13;
            int i5 = Class15.method359(abyte0, i1, 4);
            i1 += 4;
            boolean flag1 = Loading(myPlayerX2, myPlayerY2);
            myPlayerX2 -= myPlayerX1;
            myPlayerY2 -= myPlayerY1;
            int j13 = myPlayerX2 * anInt946 + 64;
            int k16 = myPlayerY2 * anInt946 + 64;
            if(flag1)
            {
                myPlayer.anInt156 = 0;
                myPlayer.anInt155 = 0;
                myPlayer.posX = myPlayer.anIntArray157[0] = j13;
                myPlayer.posY = myPlayer.anIntArray158[0] = k16;
            }
            PlayerCount = 0;
            myPlayer = method76(anInt978, j13, k16, i5);
            int j19 = Class15.method359(abyte0, i1, 8);
            i1 += 8;
            for(int l22 = 0; l22 < j19; l22++)
            {
                Class2 class2_3 = aClass2Array923[l22 + 1];
                int l31 = Class15.method359(abyte0, i1, 1);
                i1++;
                if(l31 != 0)
                {
                    int k33 = Class15.method359(abyte0, i1, 1);
                    i1++;
                    if(k33 == 0)
                    {
                        int l34 = Class15.method359(abyte0, i1, 3);
                        i1 += 3;
                        int l35 = class2_3.anInt156;
                        int j36 = class2_3.anIntArray157[l35];
                        int l36 = class2_3.anIntArray158[l35];
                        if(l34 == 2 || l34 == 1 || l34 == 3)
                            j36 += anInt946;
                        if(l34 == 6 || l34 == 5 || l34 == 7)
                            j36 -= anInt946;
                        if(l34 == 4 || l34 == 3 || l34 == 5)
                            l36 += anInt946;
                        if(l34 == 0 || l34 == 1 || l34 == 7)
                            l36 -= anInt946;
                        class2_3.anInt154 = l34;
                        class2_3.anInt156 = l35 = (l35 + 1) % 10;
                        class2_3.anIntArray157[l35] = j36;
                        class2_3.anIntArray158[l35] = l36;
                    } else
                    {
                        int i35 = Class15.method359(abyte0, i1, 4);
                        if((i35 & 0xc) == 12)
                        {
                            i1 += 2;
                            continue;
                        }
                        class2_3.anInt154 = Class15.method359(abyte0, i1, 4);
                        i1 += 4;
                    }
                }
                PlayerArray[PlayerCount++] = class2_3;
            }

            int i23 = 0;
            do
            {
                if(i1 + 24 >= j * 8)
                    break;
                int j28 = Class15.method359(abyte0, i1, 11);
                i1 += 11;
                int i32 = Class15.method359(abyte0, i1, 5);
                i1 += 5;
                if(i32 > 15)
                    i32 -= 32;
                int l33 = Class15.method359(abyte0, i1, 5);
                i1 += 5;
                if(l33 > 15)
                    l33 -= 32;
                int j35 = Class15.method359(abyte0, i1, 4);
                i1 += 4;
                int i36 = Class15.method359(abyte0, i1, 1);
                i1++;
                int k36 = (myPlayerX2 + i32) * anInt946 + 64;
                int i37 = (myPlayerY2 + l33) * anInt946 + 64;
                method76(j28, k36, i37, j35);
                if(i36 == 0)
                    anIntArray815[i23++] = j28;
            } while(true);
            if(i23 > 0)
            {
                super.packets.packetID(118);
                super.packets.variables343(i23);
                for(int k28 = 0; k28 < i23; k28++)
                {
                    Class2 class2_4 = aClass2Array891[anIntArray815[k28]];
                    super.packets.variables343(class2_4.ID);
                    super.packets.variables343(class2_4.anInt148);
                }

                super.packets.sendpacket();
                i23 = 0;
            }
            return;
        }
        if(i == 181)
        {
            for(int j1 = 1; j1 < j;)
                if(Class15.method353(abyte0[j1]) == 255)
                {
                    int j5 = 0;
                    int k9 = myPlayerX2 + abyte0[j1 + 1] >> 3;
                    int k13 = myPlayerY2 + abyte0[j1 + 2] >> 3;
                    j1 += 3;
                    for(int l16 = 0; l16 < itemCount; l16++)
                    {
                        int k19 = (itemXArray[l16] >> 3) - k9;
                        int j23 = (itemYArray[l16] >> 3) - k13;
                        if(k19 == 0 && j23 == 0)
                            continue;
                        if(l16 != j5)
                        {
                            itemXArray[j5] = itemXArray[l16];
                            itemYArray[j5] = itemYArray[l16];
                            itemIDArray[j5] = itemIDArray[l16];
                            anIntArray773[j5] = anIntArray773[l16];
                        }
                        j5++;
                    }

                    itemCount = j5;
                } else
                {
                    int k5 = Class15.method354(abyte0, j1);
                    j1 += 2;
                    int l9 = myPlayerX2 + abyte0[j1++];
                    int l13 = myPlayerY2 + abyte0[j1++];
                    if((k5 & 0x8000) == 0)
                    {
                        itemXArray[itemCount] = l9;
                        itemYArray[itemCount] = l13;
                        itemIDArray[itemCount] = k5;
                        anIntArray773[itemCount] = 0;
                        int i17 = 0;
                        do
                        {
                            if(i17 >= objCount)
                                break;
                            if(objXArray[i17] == l9 && objYArray[i17] == l13)
                            {
                                anIntArray773[itemCount] = Class1.anIntArray66[objID[i17]];
                                break;
                            }
                            i17++;
                        } while(true);
                        itemCount++;
                    } else
                    {
                        k5 &= 0x7fff;
                        int j17 = 0;
                        for(int l19 = 0; l19 < itemCount; l19++)
                            if(itemXArray[l19] != l9 || itemYArray[l19] != l13 || itemIDArray[l19] != k5)
                            {
                                if(l19 != j17)
                                {
                                    itemXArray[j17] = itemXArray[l19];
                                    itemYArray[j17] = itemYArray[l19];
                                    itemIDArray[j17] = itemIDArray[l19];
                                    anIntArray773[j17] = anIntArray773[l19];
                                }
                                j17++;
                            } else
                            {
                                k5 = -123;
                            }

                        itemCount = j17;
                    }
                }

            return;
        }
        if(i == 238)
        {
            int k1 = 1;
            do
            {
                if(k1 >= j)
                    break;
                if(Class15.method353(abyte0[k1]) == 255)
                {
                    int l5 = 0;
                    int i10 = myPlayerX2 + abyte0[k1 + 1] >> 3;
                    int i14 = myPlayerY2 + abyte0[k1 + 2] >> 3;
                    k1 += 3;
                    for(int k17 = 0; k17 < objCount; k17++)
                    {
                        int i20 = (objXArray[k17] >> 3) - i10;
                        int k23 = (objYArray[k17] >> 3) - i14;
                        if(i20 != 0 || k23 != 0)
                        {
                            if(k17 != l5)
                            {
                                aClass5Array814[l5] = aClass5Array814[k17];
                                aClass5Array814[l5].anInt257 = l5;
                                objXArray[l5] = objXArray[k17];
                                objYArray[l5] = objYArray[k17];
                                objID[l5] = objID[k17];
                                anIntArray763[l5] = anIntArray763[k17];
                            }
                            l5++;
                        } else
                        {
                            aClass10_739.method270(aClass5Array814[k17]);
                            aClass19_883.method434(objXArray[k17], objYArray[k17], objID[k17]);
                        }
                    }

                    objCount = l5;
                } else
                {
                    int i6 = Class15.method354(abyte0, k1);
                    k1 += 2;
                    int j10 = myPlayerX2 + abyte0[k1++];
                    int j14 = myPlayerY2 + abyte0[k1++];
                    int l17 = 0;
                    for(int j20 = 0; j20 < objCount; j20++)
                        if(objXArray[j20] != j10 || objYArray[j20] != j14)
                        {
                            if(j20 != l17)
                            {
                                aClass5Array814[l17] = aClass5Array814[j20];
                                aClass5Array814[l17].anInt257 = l17;
                                objXArray[l17] = objXArray[j20];
                                objYArray[l17] = objYArray[j20];
                                objID[l17] = objID[j20];
                                anIntArray763[l17] = anIntArray763[j20];
                            }
                            l17++;
                        } else
                        {
                            aClass10_739.method270(aClass5Array814[j20]);
                            aClass19_883.method434(objXArray[j20], objYArray[j20], objID[j20]);
                        }

                    objCount = l17;
                    if(i6 != 60000)
                    {
                        int k20 = aClass19_883.method402(j10, j14);
                        int l23;
                        int l28;
                        if(k20 == 0 || k20 == 4)
                        {
                            l23 = Class1.anIntArray63[i6];
                            l28 = Class1.anIntArray64[i6];
                        } else
                        {
                            l28 = Class1.anIntArray63[i6];
                            l23 = Class1.anIntArray64[i6];
                        }
                        int j32 = ((j10 + j10 + l23) * anInt946) / 2;
                        int i34 = ((j14 + j14 + l28) * anInt946) / 2;
                        int k35 = Class1.anIntArray62[i6];
                        Class5 class5_1 = aClass5Array994[k35].method204();
                        aClass10_739.method269(class5_1);
                        class5_1.anInt257 = objCount;
                        class5_1.method189(0, k20 * 32, 0);
                        class5_1.method191(j32, -aClass19_883.method421(j32, i34), i34);
                        class5_1.method185(true, 48, 48, -50, -10, -50);
                        aClass19_883.method407(j10, j14, i6);
                        if(i6 == 74)
                            class5_1.method191(0, -480, 0);
                        objXArray[objCount] = j10;
                        objYArray[objCount] = j14;
                        objID[objCount] = i6;
                        anIntArray763[objCount] = k20;
                        aClass5Array814[objCount++] = class5_1;
                    }
                }
            } while(true);
            return;
        }
        if(i == 171)
        {
            int l1 = 1;
            inventoryItemCounter = abyte0[l1++] & 0xff;
            for(int j6 = 0; j6 < inventoryItemCounter; j6++)
            {
                int k10 = Class15.method354(abyte0, l1);
                l1 += 2;
                inventoryItemID[j6] = k10 & 0x7fff;
                anIntArray711[j6] = k10 / 32768;
                if(Class1.anIntArray55[k10 & 0x7fff] == 0)
                {
                    anIntArray710[j6] = Class15.method358(abyte0, l1);
                    if(anIntArray710[j6] >= 128)
                        l1 += 4;
                    else
                        l1++;
                } else
                {
                    anIntArray710[j6] = 1;
                }
            }

            return;
        }
        if(i == 139)
        {
            int i2 = Class15.method354(abyte0, 1);
            int k6 = 3;
            for(int l10 = 0; l10 < i2; l10++)
            {
                int k14 = Class15.method354(abyte0, k6);
                k6 += 2;
                Class2 class2_1 = aClass2Array891[k14];
                byte byte2 = abyte0[k6];
                k6++;
                if(byte2 == 0)
                {
                    int i24 = Class15.method354(abyte0, k6);
                    k6 += 2;
                    if(class2_1 != null)
                    {
                        class2_1.anInt163 = 150;
                        class2_1.anInt162 = i24;
                    }
                    continue;
                }
                if(byte2 == 1)
                {
                    byte byte3 = abyte0[k6];
                    k6++;
                    if(class2_1 != null)
                    {
                        String s2 = Class16.ChatFilter(Class17.method399(abyte0, k6, byte3));
                        boolean flag3 = false;
                        for(int j34 = 0; j34 < super.anInt627; j34++)
                            if(super.aLongArray628[j34] == class2_1.aLong145)
                                flag3 = true;

                        if(!flag3)
                        {
                            class2_1.anInt161 = 150;
                            class2_1.lastChatMessage = s2;
                            chatText("@yel@[" + class2_1.name + "] " + class2_1.lastChatMessage, 2);
                            playerChat = "PLAYERCHAT " + class2_1.name + ":" + s2;
                            XClient.sendPacketIG(playerChat);
                        }
                    }
                    k6 += byte3;
                    continue;
                }
                if(byte2 == 2)
                {
                    int j24 = Class15.method353(abyte0[k6]);
                    k6++;
                    int i29 = Class15.method353(abyte0[k6]);
                    k6++;
                    int k32 = Class15.method353(abyte0[k6]);
                    k6++;
                    if(class2_1 == null)
                        continue;
                    class2_1.anInt164 = j24;
                    class2_1.anInt165 = i29;
                    class2_1.anInt166 = k32;
                    class2_1.anInt167 = 200;
                    if(class2_1 == myPlayer)
                    {
                        CurrentStatLevelArray[3] = i29;
                        RealStatLevelArray[3] = k32;
                        aBoolean908 = false;
                        aBoolean745 = false;
                    }
                    continue;
                }
                if(byte2 == 3)
                {
                    int k24 = Class15.method354(abyte0, k6);
                    k6 += 2;
                    int j29 = Class15.method354(abyte0, k6);
                    k6 += 2;
                    if(class2_1 != null)
                    {
                        class2_1.anInt173 = k24;
                        class2_1.anInt175 = j29;
                        class2_1.anInt174 = -1;
                        class2_1.anInt176 = anInt897;
                    }
                    continue;
                }
                if(byte2 == 4)
                {
                    int l24 = Class15.method354(abyte0, k6);
                    k6 += 2;
                    int k29 = Class15.method354(abyte0, k6);
                    k6 += 2;
                    if(class2_1 != null)
                    {
                        class2_1.anInt173 = l24;
                        class2_1.anInt174 = k29;
                        class2_1.anInt175 = -1;
                        class2_1.anInt176 = anInt897;
                    }
                    continue;
                }
                if(byte2 == 5)
                {
                    if(class2_1 != null)
                    {
                        class2_1.anInt148 = Class15.method354(abyte0, k6);
                        k6 += 2;
                        class2_1.aLong145 = Class15.method356(abyte0, k6);
                        k6 += 8;
                        class2_1.name = Class15.method363(class2_1.aLong145);
                        int i25 = Class15.method353(abyte0[k6]);
                        k6++;
                        for(int l29 = 0; l29 < i25; l29++)
                        {
                            class2_1.anIntArray159[l29] = Class15.method353(abyte0[k6]);
                            k6++;
                        }

                        for(int i30 = i25; i30 < 12; i30++)
                            class2_1.anIntArray159[i30] = 0;

                        class2_1.anInt169 = abyte0[k6++] & 0xff;
                        class2_1.anInt170 = abyte0[k6++] & 0xff;
                        class2_1.anInt171 = abyte0[k6++] & 0xff;
                        class2_1.anInt172 = abyte0[k6++] & 0xff;
                        class2_1.combatLevel = abyte0[k6++] & 0xff;
                        class2_1.anInt179 = abyte0[k6++] & 0xff;
                    } else
                    {
                        k6 += 14;
                        int j25 = Class15.method353(abyte0[k6]);
                        k6 += j25 + 1;
                    }
                    continue;
                }
                if(byte2 != 6)
                    continue;
                byte byte4 = abyte0[k6];
                k6++;
                if(class2_1 != null)
                {
                    String s3 = Class17.method399(abyte0, k6, byte4);
                    class2_1.anInt161 = 150;
                    class2_1.lastChatMessage = s3;
                    if(class2_1 == myPlayer)
                    {
                        chatText("@yel@[" + class2_1.name + "] " + class2_1.lastChatMessage, 5);
                        myChat = "MYCHAT " + class2_1.name + ":" + s3;
                        XClient.sendPacketIG(myChat);
                    }
                }
                k6 += byte4;
            }

            return;
        }
        if(i == 29)
        {
            int j2 = 1;
            do
            {
                if(j2 >= j)
                    break;
                if(Class15.method353(abyte0[j2]) == 255)
                {
                    int l6 = 0;
                    int i11 = myPlayerX2 + abyte0[j2 + 1] >> 3;
                    int l14 = myPlayerY2 + abyte0[j2 + 2] >> 3;
                    j2 += 3;
                    for(int i18 = 0; i18 < anInt855; i18++)
                    {
                        int l20 = (anIntArray747[i18] >> 3) - i11;
                        int k25 = (anIntArray748[i18] >> 3) - l14;
                        if(l20 != 0 || k25 != 0)
                        {
                            if(i18 != l6)
                            {
                                aClass5Array781[l6] = aClass5Array781[i18];
                                aClass5Array781[l6].anInt257 = l6 + 10000;
                                anIntArray747[l6] = anIntArray747[i18];
                                anIntArray748[l6] = anIntArray748[i18];
                                anIntArray740[l6] = anIntArray740[i18];
                                anIntArray741[l6] = anIntArray741[i18];
                            }
                            l6++;
                        } else
                        {
                            aClass10_739.method270(aClass5Array781[i18]);
                            aClass19_883.method427(anIntArray747[i18], anIntArray748[i18], anIntArray740[i18], anIntArray741[i18]);
                        }
                    }

                    anInt855 = l6;
                } else
                {
                    int i7 = Class15.method354(abyte0, j2);
                    j2 += 2;
                    int j11 = myPlayerX2 + abyte0[j2++];
                    int i15 = myPlayerY2 + abyte0[j2++];
                    byte byte1 = abyte0[j2++];
                    int i21 = 0;
                    for(int l25 = 0; l25 < anInt855; l25++)
                        if(anIntArray747[l25] != j11 || anIntArray748[l25] != i15 || anIntArray740[l25] != byte1)
                        {
                            if(l25 != i21)
                            {
                                aClass5Array781[i21] = aClass5Array781[l25];
                                aClass5Array781[i21].anInt257 = i21 + 10000;
                                anIntArray747[i21] = anIntArray747[l25];
                                anIntArray748[i21] = anIntArray748[l25];
                                anIntArray740[i21] = anIntArray740[l25];
                                anIntArray741[i21] = anIntArray741[l25];
                            }
                            i21++;
                        } else
                        {
                            aClass10_739.method270(aClass5Array781[l25]);
                            aClass19_883.method427(anIntArray747[l25], anIntArray748[l25], anIntArray740[l25], anIntArray741[l25]);
                        }

                    anInt855 = i21;
                    if(i7 != 65535)
                    {
                        aClass19_883.method415(j11, i15, byte1, i7);
                        Class5 class5 = method106(j11, i15, byte1, i7, anInt855);
                        aClass5Array781[anInt855] = class5;
                        anIntArray747[anInt855] = j11;
                        anIntArray748[anInt855] = i15;
                        anIntArray741[anInt855] = i7;
                        anIntArray740[anInt855++] = byte1;
                    }
                }
            } while(true);
            return;
        }
        if(i == 152)
        {
            anInt906 = npccount;
            npccount = 0;
            for(int k2 = 0; k2 < anInt906; k2++)
                aClass2Array822[k2] = NPCArray[k2];

            int l2 = 8;
            int j7 = Class15.method359(abyte0, l2, 8);
            l2 += 8;
            for(int k11 = 0; k11 < j7; k11++)
            {
                Class2 class2 = aClass2Array822[k11];
                int j18 = Class15.method359(abyte0, l2, 1);
                l2++;
                if(j18 != 0)
                {
                    int j21 = Class15.method359(abyte0, l2, 1);
                    l2++;
                    if(j21 == 0)
                    {
                        int i26 = Class15.method359(abyte0, l2, 3);
                        l2 += 3;
                        int j30 = class2.anInt156;
                        int l32 = class2.anIntArray157[j30];
                        int k34 = class2.anIntArray158[j30];
                        if(i26 == 2 || i26 == 1 || i26 == 3)
                            l32 += anInt946;
                        if(i26 == 6 || i26 == 5 || i26 == 7)
                            l32 -= anInt946;
                        if(i26 == 4 || i26 == 3 || i26 == 5)
                            k34 += anInt946;
                        if(i26 == 0 || i26 == 1 || i26 == 7)
                            k34 -= anInt946;
                        class2.anInt154 = i26;
                        class2.anInt156 = j30 = (j30 + 1) % 10;
                        class2.anIntArray157[j30] = l32;
                        class2.anIntArray158[j30] = k34;
                    } else
                    {
                        int j26 = Class15.method359(abyte0, l2, 4);
                        if((j26 & 0xc) == 12)
                        {
                            l2 += 2;
                            continue;
                        }
                        class2.anInt154 = Class15.method359(abyte0, l2, 4);
                        l2 += 4;
                    }
                }
                NPCArray[npccount++] = class2;
            }

            while(l2 + 34 < j * 8) 
            {
                int l11 = Class15.method359(abyte0, l2, 12);
                l2 += 12;
                int j15 = Class15.method359(abyte0, l2, 5);
                l2 += 5;
                if(j15 > 15)
                    j15 -= 32;
                int k18 = Class15.method359(abyte0, l2, 5);
                l2 += 5;
                if(k18 > 15)
                    k18 -= 32;
                int k21 = Class15.method359(abyte0, l2, 4);
                l2 += 4;
                int k26 = (myPlayerX2 + j15) * anInt946 + 64;
                int k30 = (myPlayerY2 + k18) * anInt946 + 64;
                int i33 = Class15.method359(abyte0, l2, 10);
                l2 += 10;
                if(i33 >= Class1.anInt122)
                    i33 = 24;
                method107(l11, k26, k30, k21, i33);
            }
            return;
        }
        if(i == 159)
        {
            int i3 = Class15.method354(abyte0, 1);
            int k7 = 3;
            for(int i12 = 0; i12 < i3; i12++)
            {
                int k15 = Class15.method354(abyte0, k7);
                k7 += 2;
                Class2 class2_2 = aClass2Array957[k15];
                int l21 = Class15.method353(abyte0[k7]);
                k7++;
                if(l21 == 1)
                {
                    int l26 = Class15.method354(abyte0, k7);
                    k7 += 2;
                    byte byte5 = abyte0[k7];
                    k7++;
                    if(class2_2 != null)
                    {
                        String s4 = Class17.method399(abyte0, k7, byte5);
                        class2_2.anInt161 = 150;
                        class2_2.lastChatMessage = s4;
                        if(l26 == myPlayer.ID)
                        {
                            chatText("@yel@[" + Class1.NPCNameArray[class2_2.combatlvl] + "] " + class2_2.lastChatMessage, 5);
                            NPCChat = "NPCCHAT " + Class1.NPCNameArray[class2_2.combatlvl] + ":" + s4;
                            XClient.sendPacketIG(NPCChat);
                        }
                    }
                    k7 += byte5;
                    continue;
                }
                if(l21 != 2)
                    continue;
                int i27 = Class15.method353(abyte0[k7]);
                k7++;
                int l30 = Class15.method353(abyte0[k7]);
                k7++;
                int j33 = Class15.method353(abyte0[k7]);
                k7++;
                if(class2_2 != null)
                {
                    class2_2.anInt164 = i27;
                    class2_2.anInt165 = l30;
                    class2_2.anInt166 = j33;
                    class2_2.anInt167 = 200;
                }
            }

            return;
        }
        if(i == 55)
        {
            answerMenu = true;
            XClient.sendPacket("ANSWERMENU 1");
            int j3 = Class15.method353(abyte0[1]);
            anInt929 = j3;
            int l7 = 2;
            for(int j12 = 0; j12 < j3; j12++)
            {
                int l15 = Class15.method353(abyte0[l7]);
                l7++;
                aStringArray913[j12] = new String(abyte0, l7, l15);
                l7 += l15;
            }

            return;
        }
        if(i == 93)
        {
            answerMenu = false;
            XClient.sendPacket("ANSWERMENU 0");
            return;
        }
        if(i == 167)
        {
            aBoolean717 = true;
            anInt978 = Class15.method354(abyte0, 1);
            anInt806 = Class15.method354(abyte0, 3);
            anInt807 = Class15.method354(abyte0, 5);
            anInt785 = Class15.method354(abyte0, 7);
            anInt808 = Class15.method354(abyte0, 9);
            anInt807 -= anInt785 * anInt808;
            return;
        }
        if(i == 205)
        {
            int k3 = 1;
            for(int i8 = 0; i8 < 18; i8++)
                CurrentStatLevelArray[i8] = Class15.method353(abyte0[k3++]);

            for(int j8 = 0; j8 < 18; j8++)
                RealStatLevelArray[j8] = Class15.method353(abyte0[k3++]);

            for(int k8 = 0; k8 < 18; k8++)
            {
                CurrentXPArray[k8] = Class15.method355(abyte0, k3);
                k3 += 4;
            }

            anInt996 = Class15.method353(abyte0[k3++]);
            return;
        }
        if(i == 79)
        {
            for(int l3 = 0; l3 < 5; l3++)
                anIntArray797[l3] = Class15.method353(abyte0[1 + l3]);

            return;
        }
        if(i == 72)
        {
            anInt993 = 250;
            return;
        }
        if(i == 246)
        {
            int i4 = (j - 1) / 4;
            for(int l8 = 0; l8 < i4; l8++)
            {
                int k12 = myPlayerX2 + Class15.method357(abyte0, 1 + l8 * 4) >> 3;
                int i16 = myPlayerY2 + Class15.method357(abyte0, 3 + l8 * 4) >> 3;
                int l18 = 0;
                for(int i22 = 0; i22 < itemCount; i22++)
                {
                    int j27 = (itemXArray[i22] >> 3) - k12;
                    int i31 = (itemYArray[i22] >> 3) - i16;
                    if(j27 == 0 && i31 == 0)
                        continue;
                    if(i22 != l18)
                    {
                        itemXArray[l18] = itemXArray[i22];
                        itemYArray[l18] = itemYArray[i22];
                        itemIDArray[l18] = itemIDArray[i22];
                        anIntArray773[l18] = anIntArray773[i22];
                    }
                    l18++;
                }

                itemCount = l18;
                l18 = 0;
                for(int j22 = 0; j22 < objCount; j22++)
                {
                    int k27 = (objXArray[j22] >> 3) - k12;
                    int j31 = (objYArray[j22] >> 3) - i16;
                    if(k27 != 0 || j31 != 0)
                    {
                        if(j22 != l18)
                        {
                            aClass5Array814[l18] = aClass5Array814[j22];
                            aClass5Array814[l18].anInt257 = l18;
                            objXArray[l18] = objXArray[j22];
                            objYArray[l18] = objYArray[j22];
                            objID[l18] = objID[j22];
                            anIntArray763[l18] = anIntArray763[j22];
                        }
                        l18++;
                    } else
                    {
                        aClass10_739.method270(aClass5Array814[j22]);
                        aClass19_883.method434(objXArray[j22], objYArray[j22], objID[j22]);
                    }
                }

                objCount = l18;
                l18 = 0;
                for(int k22 = 0; k22 < anInt855; k22++)
                {
                    int l27 = (anIntArray747[k22] >> 3) - k12;
                    int k31 = (anIntArray748[k22] >> 3) - i16;
                    if(l27 != 0 || k31 != 0)
                    {
                        if(k22 != l18)
                        {
                            aClass5Array781[l18] = aClass5Array781[k22];
                            aClass5Array781[l18].anInt257 = l18 + 10000;
                            anIntArray747[l18] = anIntArray747[k22];
                            anIntArray748[l18] = anIntArray748[k22];
                            anIntArray740[l18] = anIntArray740[k22];
                            anIntArray741[l18] = anIntArray741[k22];
                        }
                        l18++;
                    } else
                    {
                        aClass10_739.method270(aClass5Array781[k22]);
                        aClass19_883.method427(anIntArray747[k22], anIntArray748[k22], anIntArray740[k22], anIntArray741[k22]);
                    }
                }

                anInt855 = l18;
            }

            return;
        }
        if(i == 237)
        {
            aBoolean992 = true;
            return;
        }
        if(i == 240)
        {
            int j4 = Class15.method354(abyte0, 1);
            if(aClass2Array891[j4] != null)
                aString682 = aClass2Array891[j4].name;
            aBoolean856 = true;
            hasAccepted = false;
            tradeWindow2 = false;
            tradePosCount = 0;
            anInt886 = 0;
            return;
        }
        if(i == 3)
        {
            aBoolean856 = false;
            tradeWindow = false;
            return;
        }
        if(i == 245)
        {
            anInt886 = abyte0[1] & 0xff;
            int k4 = 2;
            for(int i9 = 0; i9 < anInt886; i9++)
            {
                anIntArray887[i9] = Class15.method354(abyte0, k4);
                k4 += 2;
                anIntArray888[i9] = Class15.method355(abyte0, k4);
                k4 += 4;
            }

            hasAccepted = false;
            tradeWindow2 = false;
            return;
        }
        if(i != 207)
            break MISSING_BLOCK_LABEL_5866;
        byte byte0 = abyte0[1];
        if(byte0 == 1)
        {
            hasAccepted = true;
            return;
        }
        int l4;
        String s;
        int j9;
        boolean flag;
        int l12;
        int j16;
        int i19;
        boolean flag2;
        int i28;
        try
        {
            hasAccepted = false;
            return;
        }
        catch(RuntimeException runtimeexception)
        {
            if(anInt933 < 3)
            {
                super.packets.packetID(46);
                super.packets.method347(runtimeexception.toString());
                super.packets.sendpacket();
                super.packets.packetID(46);
                super.packets.method347("p-type:" + i + " p-size:" + j);
                super.packets.sendpacket();
                super.packets.packetID(46);
                super.packets.method347("rx:" + myPlayerX2 + " ry:" + myPlayerY2 + " num3l:" + objCount);
                super.packets.sendpacket();
                String s1 = "";
                for(int i13 = 0; i13 < 80 && i13 < j; i13++)
                    s1 = s1 + abyte0[i13] + " ";

                super.packets.packetID(46);
                super.packets.method347(s1);
                super.packets.sendpacket();
                anInt933++;
            }
        }
        break MISSING_BLOCK_LABEL_8555;
        if(i == 153)
        {
            aBoolean727 = true;
            XClient.sendPacket("SHOPWINDOW 1");
            l4 = 1;
            j9 = abyte0[l4++] & 0xff;
            l12 = abyte0[l4++];
            anInt899 = abyte0[l4++] & 0xff;
            anInt900 = abyte0[l4++] & 0xff;
            for(j16 = 0; j16 < 40; j16++)
                shopItemID[j16] = -1;

            for(j16 = 0; j16 < j9; j16++)
            {
                shopItemID[j16] = Class15.method354(abyte0, l4);
                l4 += 2;
                shopItemCount[j16] = Class15.method354(abyte0, l4);
                l4 += 2;
                anIntArray738[j16] = abyte0[l4++];
            }

            if(l12 == 1)
            {
                j16 = 39;
                for(i19 = 0; i19 < inventoryItemCounter && j16 >= j9; i19++)
                {
                    flag2 = false;
                    i28 = 0;
                    do
                    {
                        if(i28 >= 40)
                            break;
                        if(shopItemID[i28] == inventoryItemID[i19])
                        {
                            flag2 = true;
                            break;
                        }
                        i28++;
                    } while(true);
                    if(inventoryItemID[i19] == 10)
                        flag2 = true;
                    if(!flag2)
                    {
                        shopItemID[j16] = inventoryItemID[i19] & 0x7fff;
                        shopItemCount[j16] = 0;
                        anIntArray738[j16] = 0;
                        j16--;
                    }
                }

            }
            if(selectedShopItem >= 0 && selectedShopItem < 40 && shopItemID[selectedShopItem] != anInt904)
            {
                selectedShopItem = -1;
                anInt904 = -2;
            }
            return;
        }
        if(i == 243)
        {
            aBoolean727 = false;
            System.out.println("CloseShop()");
            XClient.sendPacket("SHOPWINDOW 0");
            return;
        }
        if(i != 118)
            break MISSING_BLOCK_LABEL_6264;
        l4 = abyte0[1];
        if(l4 == 1)
        {
            tradeWindow2 = true;
            return;
        }
        tradeWindow2 = false;
        return;
        if(i == 105)
        {
            aBoolean675 = Class15.method353(abyte0[1]) == 1;
            aBoolean767 = Class15.method353(abyte0[2]) == 1;
            aBoolean853 = Class15.method353(abyte0[3]) == 1;
            return;
        }
        if(i == 140)
        {
            for(l4 = 0; l4 < j - 1; l4++)
            {
                flag = abyte0[l4 + 1] == 1;
                if(!aBooleanArray679[l4] && flag)
                    method97("prayeron");
                if(aBooleanArray679[l4] && !flag)
                    method97("prayeroff");
                aBooleanArray679[l4] = flag;
            }

            return;
        }
        if(i == 164)
        {
            for(l4 = 0; l4 < 50; l4++)
                aBooleanArray716[l4] = abyte0[l4 + 1] == 1;

            return;
        }
        if(i == 120)
        {
            aBoolean879 = true;
            XClient.sendPacket("BANKWINDOW 1");
            l4 = 1;
            anInt936 = abyte0[l4++] & 0xff;
            anInt916 = abyte0[l4++] & 0xff;
            for(flag = false; flag < anInt936; flag++)
            {
                anIntArray816[flag] = Class15.method354(abyte0, l4);
                l4 += 2;
                anIntArray817[flag] = Class15.method358(abyte0, l4);
                if(anIntArray817[flag] >= 128)
                    l4 += 4;
                else
                    l4++;
            }

            method72();
            return;
        }
        if(i == 226)
        {
            aBoolean879 = false;
            System.out.println("CloseBank()");
            XClient.sendPacket("BANKWINDOW 0");
            return;
        }
        if(i == 108)
        {
            l4 = abyte0[1] & 0xff;
            CurrentXPArray[l4] = Class15.method355(abyte0, 2);
            return;
        }
        if(i == 23)
        {
            l4 = Class15.method354(abyte0, 1);
            if(aClass2Array891[l4] != null)
                aString824 = aClass2Array891[l4].name;
            aBoolean917 = true;
            anInt910 = 0;
            anInt959 = 0;
            aBoolean668 = false;
            duelWindow2 = false;
            aBoolean718 = false;
            aBoolean719 = false;
            aBoolean720 = false;
            aBoolean721 = false;
            return;
        }
        if(i == 10)
        {
            aBoolean917 = false;
            duelWindow = false;
            return;
        }
        if(i == 13)
        {
            tradeWindow = true;
            tradeFinished = false;
            aBoolean856 = false;
            l4 = 1;
            aLong847 = Class15.method356(abyte0, l4);
            l4 += 8;
            anInt691 = abyte0[l4++] & 0xff;
            for(flag = false; flag < anInt691; flag++)
            {
                anIntArray692[flag] = Class15.method354(abyte0, l4);
                l4 += 2;
                anIntArray693[flag] = Class15.method355(abyte0, l4);
                l4 += 4;
            }

            anInt836 = abyte0[l4++] & 0xff;
            for(flag = false; flag < anInt836; flag++)
            {
                anIntArray837[flag] = Class15.method354(abyte0, l4);
                l4 += 2;
                anIntArray838[flag] = Class15.method355(abyte0, l4);
                l4 += 4;
            }

            return;
        }
        if(i == 75)
        {
            anInt959 = abyte0[1] & 0xff;
            l4 = 2;
            for(flag = false; flag < anInt959; flag++)
            {
                anIntArray960[flag] = Class15.method354(abyte0, l4);
                l4 += 2;
                anIntArray961[flag] = Class15.method355(abyte0, l4);
                l4 += 4;
            }

            aBoolean668 = false;
            duelWindow2 = false;
            return;
        }
        if(i == 119)
        {
            if(abyte0[1] == 1)
                aBoolean718 = true;
            else
                aBoolean718 = false;
            if(abyte0[2] == 1)
                aBoolean719 = true;
            else
                aBoolean719 = false;
            if(abyte0[3] == 1)
                aBoolean720 = true;
            else
                aBoolean720 = false;
            if(abyte0[4] == 1)
                aBoolean721 = true;
            else
                aBoolean721 = false;
            aBoolean668 = false;
            duelWindow2 = false;
            return;
        }
        if(i == 172)
        {
            l4 = 1;
            flag = abyte0[l4++] & 0xff;
            l12 = Class15.method354(abyte0, l4);
            l4 += 2;
            j16 = Class15.method358(abyte0, l4);
            if(j16 >= 128)
                l4 += 4;
            else
                l4++;
            if(j16 == 0)
            {
                anInt936--;
                for(i19 = ((flag) ? 1 : 0); i19 < anInt936; i19++)
                {
                    anIntArray816[i19] = anIntArray816[i19 + 1];
                    anIntArray817[i19] = anIntArray817[i19 + 1];
                }

            } else
            {
                anIntArray816[flag] = l12;
                anIntArray817[flag] = j16;
                if(flag >= anInt936)
                    anInt936 = flag + 1;
            }
            method72();
            return;
        }
        if(i == 242)
        {
            l4 = 1;
            flag = true;
            l12 = abyte0[l4++] & 0xff;
            j16 = Class15.method354(abyte0, l4);
            l4 += 2;
            if(Class1.anIntArray55[j16 & 0x7fff] == 0)
            {
                flag = Class15.method358(abyte0, l4);
                if(flag >= 128)
                    l4 += 4;
                else
                    l4++;
            }
            inventoryItemID[l12] = j16 & 0x7fff;
            anIntArray711[l12] = j16 / 32768;
            anIntArray710[l12] = ((flag) ? 1 : 0);
            if(l12 >= inventoryItemCounter)
                inventoryItemCounter = l12 + 1;
            return;
        }
        if(i == 104)
        {
            l4 = abyte0[1] & 0xff;
            inventoryItemCounter--;
            for(flag = l4; flag < inventoryItemCounter; flag++)
            {
                inventoryItemID[flag] = inventoryItemID[flag + 1];
                anIntArray710[flag] = anIntArray710[flag + 1];
                anIntArray711[flag] = anIntArray711[flag + 1];
            }

            return;
        }
        if(i == 99)
        {
            l4 = 1;
            flag = abyte0[l4++] & 0xff;
            CurrentStatLevelArray[flag] = Class15.method353(abyte0[l4++]);
            RealStatLevelArray[flag] = Class15.method353(abyte0[l4++]);
            CurrentXPArray[flag] = Class15.method355(abyte0, l4);
            l4 += 4;
            return;
        }
        if(i != 210)
            break MISSING_BLOCK_LABEL_7581;
        l4 = abyte0[1];
        if(l4 == 1)
        {
            aBoolean668 = true;
            return;
        }
        aBoolean668 = false;
        return;
        if(i != 235)
            break MISSING_BLOCK_LABEL_7611;
        l4 = abyte0[1];
        if(l4 == 1)
        {
            duelWindow2 = true;
            return;
        }
        duelWindow2 = false;
        return;
        if(i == 255)
        {
            duelWindow = true;
            duelFinished = false;
            aBoolean917 = false;
            l4 = 1;
            aLong907 = Class15.method356(abyte0, l4);
            l4 += 8;
            anInt786 = abyte0[l4++] & 0xff;
            for(flag = false; flag < anInt786; flag++)
            {
                anIntArray787[flag] = Class15.method354(abyte0, l4);
                l4 += 2;
                anIntArray788[flag] = Class15.method355(abyte0, l4);
                l4 += 4;
            }

            anInt663 = abyte0[l4++] & 0xff;
            for(flag = false; flag < anInt663; flag++)
            {
                anIntArray664[flag] = Class15.method354(abyte0, l4);
                l4 += 2;
                anIntArray665[flag] = Class15.method355(abyte0, l4);
                l4 += 4;
            }

            anInt988 = abyte0[l4++] & 0xff;
            anInt989 = abyte0[l4++] & 0xff;
            anInt990 = abyte0[l4++] & 0xff;
            anInt991 = abyte0[l4++] & 0xff;
            return;
        }
        if(i == 250)
        {
            s = new String(abyte0, 1, j - 1);
            method97(s);
            return;
        }
        if(i == 252)
        {
            if(anInt833 < 50)
            {
                s = abyte0[1] & 0xff;
                flag = abyte0[2] + myPlayerX2;
                l12 = abyte0[3] + myPlayerY2;
                anIntArray730[anInt833] = s;
                anIntArray972[anInt833] = 0;
                anIntArray881[anInt833] = ((flag) ? 1 : 0);
                anIntArray934[anInt833] = l12;
                anInt833++;
            }
            return;
        }
        if(i == 176)
        {
            if(!aBoolean849)
            {
                anInt782 = Class15.method355(abyte0, 1);
                anInt898 = Class15.method354(abyte0, 5);
                anInt685 = abyte0[7] & 0xff;
                anInt924 = Class15.method354(abyte0, 8);
                aBoolean908 = true;
                XClient.sendPacket("USER " + username);
                aBoolean849 = true;
                aString894 = null;
            }
            return;
        }
        if(i == 146)
        {
            aString681 = new String(abyte0, 1, j - 1);
            aBoolean745 = true;
            aBoolean680 = false;
            return;
        }
        if(i == 138)
        {
            aString681 = new String(abyte0, 1, j - 1);
            aBoolean745 = true;
            aBoolean680 = true;
            return;
        }
        if(i == 84)
        {
            fatigue = Class15.method354(abyte0, 1);
            return;
        }
        if(i == 51)
        {
            if(!aBoolean870)
                anInt893 = fatigue;
            aBoolean870 = true;
            super.aString40 = "";
            super.aString41 = "";
            aClass6_Sub1_724.method226(anInt952 + 1, abyte0);
            aString846 = null;
            savePic(abyte0);
            XClient.sendPacket("SLEEPING 1");
            isSleeping = true;
            return;
        }
        if(i == 21)
        {
            anInt893 = Class15.method354(abyte0, 1);
            return;
        }
        if(i == 125)
        {
            aBoolean870 = false;
            XClient.sendPacket("SLEEPING 0");
            isSleeping = false;
            asleep = false;
            return;
        }
        if(i == 127)
        {
            aString846 = "Incorrect... retry";
            return;
        }
        if(i == 113)
        {
            anInt749 = Class15.method354(abyte0, 1) * 32;
            return;
        }
    }

    public void chatText2(String s)
    {
        if(s.startsWith("@bor@"))
        {
            chatText(s, 4);
            return;
        }
        if(s.startsWith("@bot@"))
        {
            chatText("@dre@[@red@WasteDBoT@dre@] @whi@" + s, 5);
            return;
        }
        if(s.startsWith("@que@"))
        {
            chatText("@whi@" + s, 6);
            return;
        }
        if(s.startsWith("@pri@"))
        {
            chatText(s, 6);
            return;
        } else
        {
            chatText(s, 3);
            return;
        }
    }

    public int method44()
    {
        return Class8.anInt371;
    }

    public static void main(String args[])
    {
        mudclient mudclient1 = new mudclient();
        mudclient1.aBoolean979 = false;
        if(args.length > 0 && args[0].equals("members"))
            mudclient1.members = true;
        if(args.length > 1)
        {
            mudclient _tmp = mudclient1;
            Applet_Sub1_Sub1.Server = args[1];
        }
        if(args.length > 2)
        {
            mudclient _tmp1 = mudclient1;
            Applet_Sub1_Sub1.ServerPort = Integer.parseInt(args[2]);
        }
        mudclient1.method6(mudclient1.anInt676, mudclient1.anInt677 + 11, "WasteDBoT by Phate & Lormsby", false);
        mudclient1.anInt32 = 10;
    }

    public void method46()
    {
        int i = Class1.anInt144;
        if(mouseClick != 0)
        {
            int j = 0;
            do
            {
                if(j >= anInt929)
                    break;
                if(super.mouseX < aClass6_Sub1_724.method263(aStringArray913[j], 1) && super.mouseY > j * 12 && super.mouseY < 12 + j * 12)
                {
                    super.packets.packetID(203);
                    super.packets.variables348(j);
                    super.packets.sendpacket();
                    System.out.println("Answer(" + j + ")");
                    break;
                }
                j++;
            } while(true);
            mouseClick = 0;
            answerMenu = false;
            XClient.sendPacket("ANSWERMENU 0");
            return;
        }
        for(int k = 0; k < anInt929; k++)
        {
            int l = 65535;
            if(super.mouseX < aClass6_Sub1_724.method263(aStringArray913[k], 1) && super.mouseY > k * 12 && super.mouseY < 12 + k * 12)
                l = 0xff0000;
            aClass6_Sub1_724.method257(aStringArray913[k], 6, 12 + k * 12, 1, l);
        }

    }

    public void AbuseMenu()
    {
        if(super.aString41.length() > 0)
        {
            String s = super.aString41.trim();
            super.aString40 = "";
            super.aString41 = "";
            if(s.length() > 0)
            {
                long l = Class15.method362(s);
                super.packets.packetID(180);
                super.packets.method342(l);
                super.packets.variables348(anInt863);
                super.packets.variables348(aBoolean810 ? 1 : 0);
                super.packets.sendpacket();
            }
            anInt986 = 0;
            return;
        }
        aClass6_Sub1_724.method216(56, 130, 400, 100, 0);
        aClass6_Sub1_724.method217(56, 130, 400, 100, 0xffffff);
        int i = 160;
        aClass6_Sub1_724.FloatText("Now type the name of the offending player, and press enter", 256, i, 1, 0xffff00);
        i += 18;
        aClass6_Sub1_724.FloatText("Name: " + super.aString40 + "*", 256, i, 4, 0xffffff);
        if(super.anInt637 > 0)
        {
            i = 207;
            if(aBoolean810)
                aClass6_Sub1_724.FloatText("Moderator option: Mute player for 48 hours: <ON>", 256, i, 1, 0xff8000);
            else
                aClass6_Sub1_724.FloatText("Moderator option: Mute player for 48 hours: <OFF>", 256, i, 1, 0xffffff);
            if(super.mouseX > 106 && super.mouseX < 406 && super.mouseY > i - 13 && super.mouseY < i + 2 && mouseClick == 1)
            {
                mouseClick = 0;
                aBoolean810 = !aBoolean810;
            }
        }
        i = 222;
        int j = 0xffffff;
        if(super.mouseX > 196 && super.mouseX < 316 && super.mouseY > i - 13 && super.mouseY < i + 2)
        {
            j = 0xffff00;
            if(mouseClick == 1)
            {
                mouseClick = 0;
                anInt986 = 0;
            }
        }
        aClass6_Sub1_724.FloatText("Click here to cancel", 256, i, 1, j);
        if(mouseClick == 1 && (super.mouseX < 56 || super.mouseX > 456 || super.mouseY < 130 || super.mouseY > 230))
        {
            mouseClick = 0;
            anInt986 = 0;
        }
    }

    public static String Currency(int i)
    {
        int j = Class1.anInt144;
        String s = String.valueOf(i);
        for(int k = s.length() - 3; k > 0; k -= 3)
            s = s.substring(0, k) + "," + s.substring(k);

        if(s.length() > 8)
            s = "@gre@" + s.substring(0, s.length() - 8) + " million @whi@(" + s + ")";
        else
        if(s.length() > 4)
            s = "@cya@" + s.substring(0, s.length() - 4) + "K @whi@(" + s + ")";
        return s;
    }

    public void CloseWindow()
    {
        char c = '\u0190';
        char c1 = 'd';
        if(aBoolean680)
        {
            c1 = '\u01C2';
            c1 = '\u012C';
        }
        aClass6_Sub1_724.method216(256 - c / 2, 167 - c1 / 2, c, c1, 0);
        aClass6_Sub1_724.method217(256 - c / 2, 167 - c1 / 2, c, c1, 0xffffff);
        aClass6_Sub1_724.method256(aString681, 256, (167 - c1 / 2) + 20, 1, 0xffffff, c - 40);
        int i = 157 + c1 / 2;
        int j = 0xffffff;
        if(super.mouseY > i - 12 && super.mouseY <= i && super.mouseX > 106 && super.mouseX < 406)
            j = 0xff0000;
        aClass6_Sub1_724.FloatText("Click here to close window", 256, i, 1, j);
        if(mouseClick == 1)
        {
            if(j == 0xff0000)
                aBoolean745 = false;
            if((super.mouseX < 256 - c / 2 || super.mouseX > 256 + c / 2) && (super.mouseY < 167 - c1 / 2 || super.mouseY > 167 + c1 / 2))
                aBoolean745 = false;
        }
        mouseClick = 0;
    }

    public void MisUser()
    {
        anInt947 = 0;
        anInt690 = 0;
        username = "";
        password = "";
        aString861 = "Please enter a username:";
        aString862 = "*" + username + "*";
        PlayerCount = 0;
        npccount = 0;
    }

    public void DuelTradeJunk()
    {
        int i = Class1.anInt144;
        if(mouseClick != 0 && anInt819 == 0)
            anInt819 = 1;
        if(anInt819 > 0)
        {
            int j = super.mouseX - 22;
            int k = super.mouseY - 36;
            if(j >= 0 && k >= 0 && j < 468 && k < 262)
            {
                if(j > 216 && k > 30 && j < 462 && k < 235)
                {
                    int l = (j - 217) / 49 + ((k - 31) / 34) * 5;
                    if(l >= 0 && l < inventoryItemCounter)
                    {
                        boolean flag = false;
                        int i2 = 0;
                        int k4 = inventoryItemID[l];
label0:
                        for(int l5 = 0; l5 < tradePosCount; l5++)
                        {
                            if(tradeItemID[l5] != k4)
                                continue;
                            if(Class1.anIntArray55[k4] == 0)
                            {
                                int i7 = 0;
                                do
                                {
                                    if(i7 >= anInt819)
                                        continue label0;
                                    if(tradeItemCount[l5] < anIntArray710[l])
                                        tradeItemCount[l5]++;
                                    flag = true;
                                    i7++;
                                } while(true);
                            }
                            i2++;
                        }

                        if(inventoryCount(k4) <= i2)
                            flag = true;
                        if(Class1.anIntArray59[k4] == 1)
                        {
                            chatText("This object cannot be traded with other players", 3);
                            flag = true;
                        }
                        if(!flag && tradePosCount < 12)
                        {
                            tradeItemID[tradePosCount] = k4;
                            tradeItemCount[tradePosCount] = 1;
                            tradePosCount++;
                            flag = true;
                        }
                        if(flag)
                        {
                            super.packets.packetID(116);
                            super.packets.variables348(tradePosCount);
                            for(int i6 = 0; i6 < tradePosCount; i6++)
                            {
                                super.packets.variables343(tradeItemID[i6]);
                                super.packets.method332(tradeItemCount[i6]);
                            }

                            super.packets.sendpacket();
                            hasAccepted = false;
                            tradeWindow2 = false;
                        }
                    }
                }
                if(j > 8 && k > 30 && j < 205 && k < 133)
                {
                    int i1 = (j - 9) / 49 + ((k - 31) / 34) * 4;
                    if(i1 >= 0 && i1 < tradePosCount)
                    {
                        int k1 = tradeItemID[i1];
                        int j2 = 0;
                        do
                        {
                            if(j2 >= anInt819)
                                break;
                            if(Class1.anIntArray55[k1] == 0 && tradeItemCount[i1] > 1)
                            {
                                tradeItemCount[i1]--;
                            } else
                            {
                                tradePosCount--;
                                anInt818 = 0;
                                for(int l4 = i1; l4 < tradePosCount; l4++)
                                {
                                    tradeItemID[l4] = tradeItemID[l4 + 1];
                                    tradeItemCount[l4] = tradeItemCount[l4 + 1];
                                }

                                break;
                            }
                            j2++;
                        } while(true);
                        super.packets.packetID(116);
                        super.packets.variables348(tradePosCount);
                        for(int k2 = 0; k2 < tradePosCount; k2++)
                        {
                            super.packets.variables343(tradeItemID[k2]);
                            super.packets.method332(tradeItemCount[k2]);
                        }

                        super.packets.sendpacket();
                        hasAccepted = false;
                        tradeWindow2 = false;
                    }
                }
                if(j >= 217 && k >= 238 && j <= 286 && k <= 259)
                {
                    tradeWindow2 = true;
                    super.packets.packetID(38);
                    System.out.println("AcceptTrade1()");
                    super.packets.sendpacket();
                }
                if(j >= 394 && k >= 238 && j < 463 && k < 259)
                {
                    aBoolean856 = false;
                    super.packets.packetID(178);
                    System.out.println("DeclineTrade()");
                    super.packets.sendpacket();
                }
            } else
            if(mouseClick != 0)
            {
                aBoolean856 = false;
                super.packets.packetID(178);
                System.out.println("DeclineTrade()");
                super.packets.sendpacket();
            }
            mouseClick = 0;
            anInt819 = 0;
        }
        if(!aBoolean856)
            return;
        byte byte0 = 22;
        byte byte1 = 36;
        aClass6_Sub1_724.method216(byte0, byte1, 468, 12, 192);
        int j1 = 0x989898;
        aClass6_Sub1_724.method214(byte0, byte1 + 12, 468, 18, j1, 160);
        aClass6_Sub1_724.method214(byte0, byte1 + 30, 8, 248, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 205, byte1 + 30, 11, 248, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 462, byte1 + 30, 6, 248, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 133, 197, 22, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 258, 197, 20, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 216, byte1 + 235, 246, 43, j1, 160);
        int l1 = 0xd0d0d0;
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 30, 197, 103, l1, 160);
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 155, 197, 103, l1, 160);
        aClass6_Sub1_724.method214(byte0 + 216, byte1 + 30, 246, 205, l1, 160);
        for(int l2 = 0; l2 < 4; l2++)
            aClass6_Sub1_724.method218(byte0 + 8, byte1 + 30 + l2 * 34, 197, 0);

        for(int i3 = 0; i3 < 4; i3++)
            aClass6_Sub1_724.method218(byte0 + 8, byte1 + 155 + i3 * 34, 197, 0);

        for(int j3 = 0; j3 < 7; j3++)
            aClass6_Sub1_724.method218(byte0 + 216, byte1 + 30 + j3 * 34, 246, 0);

        for(int k3 = 0; k3 < 6; k3++)
        {
            if(k3 < 5)
                aClass6_Sub1_724.method219(byte0 + 8 + k3 * 49, byte1 + 30, 103, 0);
            if(k3 < 5)
                aClass6_Sub1_724.method219(byte0 + 8 + k3 * 49, byte1 + 155, 103, 0);
            aClass6_Sub1_724.method219(byte0 + 216 + k3 * 49, byte1 + 30, 205, 0);
        }

        aClass6_Sub1_724.method257("Trading with: " + aString682, byte0 + 1, byte1 + 10, 1, 0xffffff);
        aClass6_Sub1_724.method257("Your Offer", byte0 + 9, byte1 + 27, 4, 0xffffff);
        aClass6_Sub1_724.method257("Opponent's Offer", byte0 + 9, byte1 + 152, 4, 0xffffff);
        aClass6_Sub1_724.method257("Your Inventory", byte0 + 216, byte1 + 27, 4, 0xffffff);
        if(!tradeWindow2)
            aClass6_Sub1_724.method231(byte0 + 217, byte1 + 238, anInt948 + 25);
        aClass6_Sub1_724.method231(byte0 + 394, byte1 + 238, anInt948 + 26);
        if(hasAccepted)
        {
            aClass6_Sub1_724.FloatText("Other player", byte0 + 341, byte1 + 246, 1, 0xffffff);
            aClass6_Sub1_724.FloatText("has accepted", byte0 + 341, byte1 + 256, 1, 0xffffff);
        }
        if(tradeWindow2)
        {
            aClass6_Sub1_724.FloatText("Waiting for", byte0 + 217 + 35, byte1 + 246, 1, 0xffffff);
            aClass6_Sub1_724.FloatText("other player", byte0 + 217 + 35, byte1 + 256, 1, 0xffffff);
        }
        for(int l3 = 0; l3 < inventoryItemCounter; l3++)
        {
            int i5 = 217 + byte0 + (l3 % 5) * 49;
            int j6 = 31 + byte1 + (l3 / 5) * 34;
            aClass6_Sub1_724.method247(i5, j6, 48, 32, anInt950 + Class1.anIntArray53[inventoryItemID[l3]], Class1.anIntArray58[inventoryItemID[l3]], 0, 0, false);
            if(Class1.anIntArray55[inventoryItemID[l3]] == 0)
                aClass6_Sub1_724.method257(String.valueOf(anIntArray710[l3]), i5 + 1, j6 + 10, 1, 0xffff00);
        }

        for(int i4 = 0; i4 < tradePosCount; i4++)
        {
            int j5 = 9 + byte0 + (i4 % 4) * 49;
            int k6 = 31 + byte1 + (i4 / 4) * 34;
            aClass6_Sub1_724.method247(j5, k6, 48, 32, anInt950 + Class1.anIntArray53[tradeItemID[i4]], Class1.anIntArray58[tradeItemID[i4]], 0, 0, false);
            if(Class1.anIntArray55[tradeItemID[i4]] == 0)
                aClass6_Sub1_724.method257(String.valueOf(tradeItemCount[i4]), j5 + 1, k6 + 10, 1, 0xffff00);
            if(super.mouseX > j5 && super.mouseX < j5 + 48 && super.mouseY > k6 && super.mouseY < k6 + 32)
                aClass6_Sub1_724.method257(Class1.itemNameArray[tradeItemID[i4]] + ": @whi@" + Class1.aStringArray110[tradeItemID[i4]], byte0 + 8, byte1 + 273, 1, 0xffff00);
        }

        for(int j4 = 0; j4 < anInt886; j4++)
        {
            int k5 = 9 + byte0 + (j4 % 4) * 49;
            int l6 = 156 + byte1 + (j4 / 4) * 34;
            aClass6_Sub1_724.method247(k5, l6, 48, 32, anInt950 + Class1.anIntArray53[anIntArray887[j4]], Class1.anIntArray58[anIntArray887[j4]], 0, 0, false);
            if(Class1.anIntArray55[anIntArray887[j4]] == 0)
                aClass6_Sub1_724.method257(String.valueOf(anIntArray888[j4]), k5 + 1, l6 + 10, 1, 0xffff00);
            if(super.mouseX > k5 && super.mouseX < k5 + 48 && super.mouseY > l6 && super.mouseY < l6 + 32)
                aClass6_Sub1_724.method257(Class1.itemNameArray[anIntArray887[j4]] + ": @whi@" + Class1.aStringArray110[anIntArray887[j4]], byte0 + 8, byte1 + 273, 1, 0xffff00);
        }

    }

    public void MenuOptions()
    {
        int i = Class1.anInt144;
        aClass4_858 = new Class4(aClass6_Sub1_724, 50);
        int j = 40;
        if(!members)
        {
            aClass4_858.method156(256, 190 + j, "WasteDBoT 1.0 :: Java Client", 5, true);
            aClass4_858.method156(256, 207 + j, "Phate of Wasted Coders Inc", 4, true);
            aClass4_858.method156(256, 280 + j, "Choose your server from the Client", 4, true);
            aClass4_858.method157(156, 240 + j, 120, 35);
            aClass4_858.method157(356, 240 + j, 120, 35);
            aClass4_858.method156(156, 240 + j, "Information", 5, false);
            aClass4_858.method156(356, 240 + j, "Log in", 5, false);
            anInt850 = aClass4_858.method164(156, 240 + j, 120, 35);
            anInt851 = aClass4_858.method164(356, 240 + j, 120, 35);
        } else
        {
            aClass4_858.method156(256, 200 + j, "WasteDBoT", 4, true);
            aClass4_858.method156(256, 215 + j, "Lormsby & Phate", 4, true);
            aClass4_858.method157(256, 290, 180, 35);
            aClass4_858.method156(256, 290, "Login", 4, false);
            anInt851 = aClass4_858.method164(256, 250 + j, 200, 35);
        }
        aClass4_667 = new Class4(aClass6_Sub1_724, 50);
        j = 230;
        if(anInt731 == 0)
        {
            aClass4_667.method156(256, j + 8, "WasteDBoT 1.0 - Phate", 4, true);
            j += 20;
            aClass4_667.method156(256, j + 8, "This is the java client for 'WasteDBoT'", 4, true);
        }
        j += 20;
        aClass4_667.method156(256, j + 8, "You must have WasteDBoT.exe running", 4, true);
        j += 30;
        aClass4_667.method157(256, j + 17, 150, 34);
        aClass4_667.method156(256, j + 17, "Ok", 5, false);
        anInt733 = aClass4_667.method164(256, j + 17, 150, 34);
        aClass4_751 = new Class4(aClass6_Sub1_724, 50);
        j = 230;
        anInt864 = aClass4_751.method156(256, j - 10, "Please enter your username and password", 4, true);
        j += 28;
        aClass4_751.method157(140, j, 200, 40);
        aClass4_751.method156(140, j - 10, "Username:", 4, false);
        intUsername = aClass4_751.method162(140, j + 10, 200, 40, 4, 12, false, false);
        j += 47;
        aClass4_751.method157(190, j, 200, 40);
        aClass4_751.method156(190, j - 10, "Password:", 4, false);
        intPassword = aClass4_751.method162(190, j + 10, 200, 40, 4, 20, true, false);
        j -= 55;
        aClass4_751.method157(410, j, 120, 25);
        aClass4_751.method156(410, j, "Ok", 4, false);
        anInt867 = aClass4_751.method164(410, j, 120, 25);
        j += 30;
        aClass4_751.method157(410, j, 120, 25);
        aClass4_751.method156(410, j, "Cancel", 4, false);
        intCancel = aClass4_751.method164(410, j, 120, 25);
        j += 30;
        aClass4_751.method157(410, 310, 120, 25);
        aClass4_751.method156(390, 310, "World:", 4, false);
        serv = aClass4_751.method162(430, 310, 120, 25, 4, 2, false, false);
        aClass4_751.method173(intUsername);
    }

    public void SpellPray(boolean flag)
    {
        int i = Class1.anInt144;
        int j = ((Class6) (aClass6_Sub1_724)).anInt311 - 199;
        int k = 36;
        aClass6_Sub1_724.method231(j - 49, 3, anInt948 + 4);
        char c = '\304';
        char c1 = '\266';
        int l;
        int i1 = l = Class6.method223(160, 160, 160);
        if(anInt800 == 0)
            i1 = Class6.method223(220, 220, 220);
        else
            l = Class6.method223(220, 220, 220);
        aClass6_Sub1_724.method214(j, k, c / 2, 24, i1, 128);
        aClass6_Sub1_724.method214(j + c / 2, k, c / 2, 24, l, 128);
        aClass6_Sub1_724.method214(j, k + 24, c, 90, Class6.method223(190, 190, 190), 128);
        aClass6_Sub1_724.method214(j, k + 24 + 90, c, c1 - 90 - 24, Class6.method223(100, 100, 100), 128);
        aClass6_Sub1_724.method218(j, k + 24, c, 0);
        aClass6_Sub1_724.method219(j + c / 2, k, 24, 0);
        aClass6_Sub1_724.method218(j, k + 113, c, 0);
        aClass6_Sub1_724.FloatText("Magic", j + c / 4, k + 16, 4, 0);
        aClass6_Sub1_724.FloatText("Prayers", j + c / 4 + c / 2, k + 16, 4, 0);
        if(anInt800 == 0)
        {
            aClass4_798.method165(anInt799);
            int j1 = 0;
            for(int j2 = 0; j2 < Class1.anInt120; j2++)
            {
                String s = "@yel@";
                int j4 = 0;
                do
                {
                    if(j4 >= Class1.anIntArray97[j2])
                        break;
                    int i5 = Class1.anIntArrayArray99[j2][j4];
                    if(!method104(i5, Class1.anIntArrayArray100[j2][j4]))
                    {
                        s = "@whi@";
                        break;
                    }
                    j4++;
                } while(true);
                j4 = CurrentStatLevelArray[6];
                if(Class1.anIntArray96[j2] > j4)
                    s = "@bla@";
                aClass4_798.method167(anInt799, j1++, s + "Level " + Class1.anIntArray96[j2] + ": " + Class1.spellNameArray[j2]);
            }

            aClass4_798.method142();
            int k2 = aClass4_798.method174(anInt799);
            if(k2 != -1)
            {
                aClass6_Sub1_724.method257("Level " + Class1.anIntArray96[k2] + ": " + Class1.spellNameArray[k2], j + 2, k + 124, 1, 0xffff00);
                aClass6_Sub1_724.method257(Class1.aStringArray119[k2], j + 2, k + 136, 0, 0xffffff);
                for(int l3 = 0; l3 < Class1.anIntArray97[k2]; l3++)
                {
                    int k4 = Class1.anIntArrayArray99[k2][l3];
                    aClass6_Sub1_724.method231(j + 2 + l3 * 44, k + 150, anInt950 + Class1.anIntArray53[k4]);
                    int j5 = inventoryCount(k4);
                    int k5 = Class1.anIntArrayArray100[k2][l3];
                    String s2 = "@red@";
                    if(method104(k4, k5))
                        s2 = "@gre@";
                    aClass6_Sub1_724.method257(s2 + j5 + "/" + k5, j + 2 + l3 * 44, k + 150, 1, 0xffffff);
                }

            } else
            {
                aClass6_Sub1_724.method257("Point at a spell for a description", j + 2, k + 124, 1, 0);
            }
        }
        if(anInt800 == 1)
        {
            aClass4_798.method165(anInt799);
            int k1 = 0;
            for(int l2 = 0; l2 < Class1.anInt95; l2++)
            {
                String s1 = "@whi@";
                if(Class1.anIntArray88[l2] > RealStatLevelArray[5])
                    s1 = "@bla@";
                if(aBooleanArray679[l2])
                    s1 = "@gre@";
                aClass4_798.method167(anInt799, k1++, s1 + "Level " + Class1.anIntArray88[l2] + ": " + Class1.aStringArray137[l2]);
            }

            aClass4_798.method142();
            int i3 = aClass4_798.method174(anInt799);
            if(i3 != -1)
            {
                aClass6_Sub1_724.FloatText("Level " + Class1.anIntArray88[i3] + ": " + Class1.aStringArray137[i3], j + c / 2, k + 130, 1, 0xffff00);
                aClass6_Sub1_724.FloatText(Class1.aStringArray138[i3], j + c / 2, k + 145, 0, 0xffffff);
                aClass6_Sub1_724.FloatText("Drain rate: " + Class1.anIntArray89[i3], j + c / 2, k + 160, 1, 0);
            } else
            {
                aClass6_Sub1_724.method257("Point at a prayer for a description", j + 2, k + 124, 1, 0);
            }
        }
        if(!flag)
            return;
        j = super.mouseX - (((Class6) (aClass6_Sub1_724)).anInt311 - 199);
        k = super.mouseY - 36;
        if(j >= 0 && k >= 0 && j < 196 && k < 182)
        {
            aClass4_798.method139(j + (((Class6) (aClass6_Sub1_724)).anInt311 - 199), k + 36, super.anInt36, super.anInt35);
            if(k <= 24 && mouseClick == 1)
                if(j < 98 && anInt800 == 1)
                {
                    anInt800 = 0;
                    aClass4_798.method166(anInt799);
                } else
                if(j > 98 && anInt800 == 0)
                {
                    anInt800 = 1;
                    aClass4_798.method166(anInt799);
                }
            if(mouseClick == 1 && anInt800 == 0)
            {
                int l1 = aClass4_798.method174(anInt799);
                if(l1 != -1)
                {
                    int j3 = CurrentStatLevelArray[6];
                    if(Class1.anIntArray96[l1] > j3)
                    {
                        chatText("Your magic ability is not high enough for this spell", 3);
                    } else
                    {
                        int i4 = 0;
                        do
                        {
                            if(i4 >= Class1.anIntArray97[l1])
                                break;
                            int l4 = Class1.anIntArrayArray99[l1][i4];
                            if(!method104(l4, Class1.anIntArrayArray100[l1][i4]))
                            {
                                chatText("You don't have all the reagents you need for this spell", 3);
                                i4 = -1;
                                break;
                            }
                            i4++;
                        } while(true);
                        if(i4 == Class1.anIntArray97[l1])
                        {
                            selectedSpell = l1;
                            selectedItem = -1;
                        }
                    }
                }
            }
            if(mouseClick == 1 && anInt800 == 1)
            {
                int i2 = aClass4_798.method174(anInt799);
                if(i2 != -1)
                {
                    int k3 = RealStatLevelArray[5];
                    if(Class1.anIntArray88[i2] > k3)
                        chatText("Your prayer ability is not high enough for this prayer", 3);
                    else
                    if(CurrentStatLevelArray[5] == 0)
                        chatText("You have run out of prayer points. Return to a church to recharge", 3);
                    else
                    if(aBooleanArray679[i2])
                    {
                        super.packets.packetID(164);
                        super.packets.variables348(i2);
                        super.packets.sendpacket();
                        aBooleanArray679[i2] = false;
                        method97("prayeroff");
                    } else
                    {
                        super.packets.packetID(17);
                        super.packets.variables348(i2);
                        super.packets.sendpacket();
                        aBooleanArray679[i2] = true;
                        method97("prayeron");
                    }
                }
            }
            mouseClick = 0;
        }
    }

    public String method54(int i)
    {
        if(Class8.anApplet370 != null)
            return Class8.method268(Class15.method361(i));
        else
            return Class15.method361(i);
    }

    public void method55(int i, int j, int k, int l, boolean flag)
    {
        if(method84(i, j, k, l, k, l, false, flag))
        {
            return;
        } else
        {
            method83(i, j, k, l, k, l, true, flag);
            return;
        }
    }

    public void ItemOptions(boolean flag)
    {
        int i = Class1.anInt144;
        int j = ((Class6) (aClass6_Sub1_724)).anInt311 - 248;
        aClass6_Sub1_724.method231(j, 3, anInt948 + 1);
        for(int k = 0; k < anInt707; k++)
        {
            int k1 = j + (k % 5) * 49;
            int i2 = 36 + (k / 5) * 34;
            if(k < inventoryItemCounter && anIntArray711[k] == 1)
                aClass6_Sub1_724.method214(k1, i2, 49, 34, 0xff0000, 128);
            else
                aClass6_Sub1_724.method214(k1, i2, 49, 34, Class6.method223(181, 181, 181), 128);
            if(k >= inventoryItemCounter)
                continue;
            aClass6_Sub1_724.method247(k1, i2, 48, 32, anInt950 + Class1.anIntArray53[inventoryItemID[k]], Class1.anIntArray58[inventoryItemID[k]], 0, 0, false);
            if(Class1.anIntArray55[inventoryItemID[k]] == 0)
                aClass6_Sub1_724.method257(String.valueOf(anIntArray710[k]), k1 + 1, i2 + 10, 1, 0xffff00);
        }

        for(int l = 1; l <= 4; l++)
            aClass6_Sub1_724.method219(j + l * 49, 36, (anInt707 / 5) * 34, 0);

        for(int i1 = 1; i1 <= anInt707 / 5 - 1; i1++)
            aClass6_Sub1_724.method218(j, 36 + i1 * 34, 245, 0);

        if(!flag)
            return;
        j = super.mouseX - (((Class6) (aClass6_Sub1_724)).anInt311 - 248);
        int j1 = super.mouseY - 36;
        if(j >= 0 && j1 >= 0 && j < 248 && j1 < (anInt707 / 5) * 34)
        {
            int l1 = j / 49 + (j1 / 34) * 5;
            if(l1 < inventoryItemCounter)
            {
                int j2 = inventoryItemID[l1];
                if(selectedSpell >= 0)
                {
                    if(Class1.spellType[selectedSpell] == 3)
                    {
                        optionNameArray[optionCount] = "Cast " + Class1.spellNameArray[selectedSpell] + " on";
                        optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[j2];
                        optionIDArray[optionCount] = 600;
                        optionObjIDArray[optionCount] = l1;
                        optionObjNameArray[optionCount] = selectedSpell;
                        optionCount++;
                        return;
                    }
                } else
                {
                    if(selectedItem >= 0)
                    {
                        optionNameArray[optionCount] = "Use " + selectedItem + " with";
                        optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[j2];
                        optionIDArray[optionCount] = 610;
                        optionObjIDArray[optionCount] = l1;
                        optionObjNameArray[optionCount] = selectedItem;
                        optionCount++;
                        return;
                    }
                    if(anIntArray711[l1] == 1)
                    {
                        optionNameArray[optionCount] = "Remove";
                        optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[j2];
                        optionIDArray[optionCount] = 620;
                        optionObjIDArray[optionCount] = l1;
                        optionCount++;
                    } else
                    if(Class1.anIntArray57[j2] != 0)
                    {
                        if((Class1.anIntArray57[j2] & 0x18) != 0)
                            optionNameArray[optionCount] = "Wield";
                        else
                            optionNameArray[optionCount] = "Wear";
                        optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[j2];
                        optionIDArray[optionCount] = 630;
                        optionObjIDArray[optionCount] = l1;
                        optionCount++;
                    }
                    if(!Class1.itemCommand[j2].equals(""))
                    {
                        optionNameArray[optionCount] = Class1.itemCommand[j2];
                        optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[j2];
                        optionIDArray[optionCount] = 640;
                        optionObjIDArray[optionCount] = l1;
                        optionCount++;
                    }
                    optionNameArray[optionCount] = "Use";
                    optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[j2];
                    optionIDArray[optionCount] = 650;
                    optionObjIDArray[optionCount] = l1;
                    optionCount++;
                    optionNameArray[optionCount] = "Drop";
                    optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[j2];
                    optionIDArray[optionCount] = 660;
                    optionObjIDArray[optionCount] = l1;
                    optionCount++;
                    optionNameArray[optionCount] = "Examine";
                    optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[j2];
                    optionIDArray[optionCount] = 3600;
                    optionObjIDArray[optionCount] = j2;
                    optionCount++;
                }
            }
        }
    }

    public void EnterInfo()
    {
        if(PacketStored)
        {
            parseData2(PacketStore);
            PacketStored = false;
        }
        if(super.anInt636 > 0)
            super.anInt636--;
        if(anInt690 == 0)
        {
            aClass4_858.method139(super.mouseX, super.mouseY, super.anInt36, super.anInt35);
            if(aClass4_858.method140(anInt850))
                anInt690 = 1;
            if(aClass4_858.method140(anInt851))
            {
                anInt690 = 2;
                aClass4_751.method169(anInt864, "Please enter your username and password");
                aClass4_751.method169(intUsername, "");
                aClass4_751.method169(serv, "");
                aClass4_751.method169(intPassword, "");
                aClass4_751.method173(intUsername);
                return;
            }
        } else
        if(anInt690 == 1)
        {
            aClass4_667.method139(super.mouseX, super.mouseY, super.anInt36, super.anInt35);
            if(aClass4_667.method140(anInt733))
            {
                anInt690 = 0;
                return;
            }
        } else
        if(anInt690 == 2)
        {
            aClass4_751.method139(super.mouseX, super.mouseY, super.anInt36, super.anInt35);
            if(aClass4_751.method140(intCancel))
                anInt690 = 0;
            if(aClass4_751.method140(intUsername))
                aClass4_751.method173(intPassword);
            if(aClass4_751.method140(intPassword))
                aClass4_751.method173(serv);
            if(aClass4_751.method140(serv) || aClass4_751.method140(anInt867))
            {
                username = aClass4_751.method170(intUsername);
                password = aClass4_751.method170(intPassword);
                server = aClass4_751.method170(serv);
                if(server.equals("51") || server.equals("52") || server.equals("53") || server.equals("54") || server.equals("55") || server.equals("56"))
                {
                    changeworld(Integer.parseInt(server));
                    login();
                } else
                {
                    method36("Invalid Server", "");
                }
            }
        }
    }

    public int inventoryCount(int i)
    {
        int j = Class1.anInt144;
        int k = 0;
        for(int l = 0; l < inventoryItemCounter; l++)
        {
            if(inventoryItemID[l] != i)
                continue;
            if(Class1.anIntArray55[i] == 1)
                k++;
            else
                k += anIntArray710[l];
        }

        return k;
    }

    public void CharDesign()
    {
        aClass4_830 = new Class4(aClass6_Sub1_724, 100);
        aClass4_830.method156(256, 10, "Please design Your Character", 4, true);
        int i = 140;
        int j = 34;
        i += 116;
        j -= 10;
        aClass4_830.method156(i - 55, j + 110, "Front", 3, true);
        aClass4_830.method156(i, j + 110, "Side", 3, true);
        aClass4_830.method156(i + 55, j + 110, "Back", 3, true);
        byte byte0 = 54;
        j += 145;
        aClass4_830.method158(i - byte0, j, 53, 41);
        aClass4_830.method156(i - byte0, j - 8, "Head", 1, true);
        aClass4_830.method156(i - byte0, j + 8, "Type", 1, true);
        aClass4_830.method159(i - byte0 - 40, j, Class4.anInt221 + 7);
        anInt694 = aClass4_830.method164(i - byte0 - 40, j, 20, 20);
        aClass4_830.method159((i - byte0) + 40, j, Class4.anInt221 + 6);
        anInt695 = aClass4_830.method164((i - byte0) + 40, j, 20, 20);
        aClass4_830.method158(i + byte0, j, 53, 41);
        aClass4_830.method156(i + byte0, j - 8, "Hair", 1, true);
        aClass4_830.method156(i + byte0, j + 8, "Color", 1, true);
        aClass4_830.method159((i + byte0) - 40, j, Class4.anInt221 + 7);
        anInt696 = aClass4_830.method164((i + byte0) - 40, j, 20, 20);
        aClass4_830.method159(i + byte0 + 40, j, Class4.anInt221 + 6);
        anInt697 = aClass4_830.method164(i + byte0 + 40, j, 20, 20);
        j += 50;
        aClass4_830.method158(i - byte0, j, 53, 41);
        aClass4_830.method156(i - byte0, j, "Gender", 1, true);
        aClass4_830.method159(i - byte0 - 40, j, Class4.anInt221 + 7);
        anInt698 = aClass4_830.method164(i - byte0 - 40, j, 20, 20);
        aClass4_830.method159((i - byte0) + 40, j, Class4.anInt221 + 6);
        anInt699 = aClass4_830.method164((i - byte0) + 40, j, 20, 20);
        aClass4_830.method158(i + byte0, j, 53, 41);
        aClass4_830.method156(i + byte0, j - 8, "Top", 1, true);
        aClass4_830.method156(i + byte0, j + 8, "Color", 1, true);
        aClass4_830.method159((i + byte0) - 40, j, Class4.anInt221 + 7);
        anInt700 = aClass4_830.method164((i + byte0) - 40, j, 20, 20);
        aClass4_830.method159(i + byte0 + 40, j, Class4.anInt221 + 6);
        anInt701 = aClass4_830.method164(i + byte0 + 40, j, 20, 20);
        j += 50;
        aClass4_830.method158(i - byte0, j, 53, 41);
        aClass4_830.method156(i - byte0, j - 8, "Skin", 1, true);
        aClass4_830.method156(i - byte0, j + 8, "Color", 1, true);
        aClass4_830.method159(i - byte0 - 40, j, Class4.anInt221 + 7);
        anInt702 = aClass4_830.method164(i - byte0 - 40, j, 20, 20);
        aClass4_830.method159((i - byte0) + 40, j, Class4.anInt221 + 6);
        anInt703 = aClass4_830.method164((i - byte0) + 40, j, 20, 20);
        aClass4_830.method158(i + byte0, j, 53, 41);
        aClass4_830.method156(i + byte0, j - 8, "Bottom", 1, true);
        aClass4_830.method156(i + byte0, j + 8, "Color", 1, true);
        aClass4_830.method159((i + byte0) - 40, j, Class4.anInt221 + 7);
        anInt704 = aClass4_830.method164((i + byte0) - 40, j, 20, 20);
        aClass4_830.method159(i + byte0 + 40, j, Class4.anInt221 + 6);
        anInt705 = aClass4_830.method164(i + byte0 + 40, j, 20, 20);
        j += 82;
        j -= 35;
        aClass4_830.method157(i, j, 200, 30);
        aClass4_830.method156(i, j, "Accept", 4, false);
        anInt706 = aClass4_830.method164(i, j, 200, 30);
    }

    public void OptsMenu(boolean flag)
    {
        int i = Class1.anInt144;
        int j = ((Class6) (aClass6_Sub1_724)).anInt311 - 199;
        int k = 36;
        aClass6_Sub1_724.method231(j - 49, 3, anInt948 + 6);
        char c = '\304';
        aClass6_Sub1_724.method214(j, 36, c, 65, Class6.method223(100, 100, 100), 160);
        aClass6_Sub1_724.method214(j, 101, c, 65, Class6.method223(100, 100, 100), 160);
        aClass6_Sub1_724.method214(j, 166, c, 95, Class6.method223(100, 100, 100), 160);
        aClass6_Sub1_724.method214(j, 261, c, 40, Class6.method223(100, 100, 100), 160);
        int l = j + 3;
        int i1 = k + 15;
        aClass6_Sub1_724.method257("@yel@WasteDBoT Settings", l, i1, 1, 0);
        i1 += 15;
        int j1 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            j1 = 0xff0000;
        if(lefty)
            aClass6_Sub1_724.method257("Left Click Attack [@gre@On@whi@]", l, i1, 1, j1);
        else
            aClass6_Sub1_724.method257("Left Click Attack [@red@Off@whi@]", l, i1, 1, j1);
        i1 += 15;
        int k1 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            k1 = 0xff0000;
        if(FogOfWar)
            aClass6_Sub1_724.method257("Fog Of War [@gre@On@whi@]", l, i1, 1, k1);
        else
            aClass6_Sub1_724.method257("Fog Of War [@red@Off@whi@]", l, i1, 1, k1);
        i1 += 15;
        int l1 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            l1 = 0xff0000;
        if(ShowCombat)
            aClass6_Sub1_724.method257("Fight Mode Visible [@gre@On@whi@]", l, i1, 1, l1);
        else
            aClass6_Sub1_724.method257("Fight Mode Visible [@red@Off@whi@]", l, i1, 1, l1);
        i1 += 15;
        int i2 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            i2 = 0xff0000;
        if(HideGFX)
            aClass6_Sub1_724.method257("Hide Graphics [@gre@On@whi@]", l, i1, 1, i2);
        else
            aClass6_Sub1_724.method257("Hide Graphics [@red@Off@whi@]", l, i1, 1, i2);
        i1 += 5;
        aClass6_Sub1_724.method257("", l, i1, 0, 0xffffff);
        i1 += 15;
        aClass6_Sub1_724.method257("@yel@Commands", l, i1, 1, 0xffffff);
        i1 += 15;
        int j2 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            j2 = 0xff0000;
        aClass6_Sub1_724.method257("Fix Map Perfect North", l, i1, 1, j2);
        i1 += 15;
        int k2 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            k2 = 0xff0000;
        aClass6_Sub1_724.method257("Fix Privacy Settings", l, i1, 1, k2);
        i1 += 15;
        int l2 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            l2 = 0xff0000;
        aClass6_Sub1_724.method257("Stop Current Script", l, i1, 1, l2);
        aClass6_Sub1_724.method257("", j + 3, i1, 1, 0);
        i1 += 15;
        aClass6_Sub1_724.method257("@yel@Privacy Settings", j + 3, i1, 1, 0);
        i1 += 15;
        int i3 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            i3 = 0xff0000;
        if(super.anInt629 == 0)
            aClass6_Sub1_724.method257("Block chat messages [@red@Off@whi@]", j + 3, i1, 1, i3);
        else
            aClass6_Sub1_724.method257("Block chat messages [@gre@On@whi@]", j + 3, i1, 1, i3);
        i1 += 15;
        int j3 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            j3 = 0xff0000;
        if(super.anInt630 == 0)
            aClass6_Sub1_724.method257("Block private messages [@red@Off@whi@]", j + 3, i1, 1, j3);
        else
            aClass6_Sub1_724.method257("Block private messages [@gre@On@whi@]", j + 3, i1, 1, j3);
        i1 += 15;
        int k3 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            k3 = 0xff0000;
        if(super.anInt631 == 0)
            aClass6_Sub1_724.method257("Block trade requests [@red@Off@whi@]", j + 3, i1, 1, k3);
        else
            aClass6_Sub1_724.method257("Block trade requests [@gre@On@whi@]", j + 3, i1, 1, k3);
        i1 += 15;
        int l3 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            l3 = 0xff0000;
        if(super.anInt632 == 0)
            aClass6_Sub1_724.method257("Block duel requests [@red@Off@whi@]", j + 3, i1, 1, l3);
        else
            aClass6_Sub1_724.method257("Block duel requests [@gre@On@whi@]", j + 3, i1, 1, l3);
        i1 += 15;
        i1 += 15;
        aClass6_Sub1_724.method257("Logout if not autoing", l, i1, 1, 0);
        i1 += 15;
        int i4 = 0xffffff;
        if(super.mouseX > l && super.mouseX < l + c && super.mouseY > i1 - 12 && super.mouseY < i1 + 4)
            i4 = 0xff0000;
        aClass6_Sub1_724.method257("Click here to logout", j + 3, i1, 1, i4);
        if(!flag)
            return;
        j = super.mouseX - (((Class6) (aClass6_Sub1_724)).anInt311 - 199);
        k = super.mouseY - 36;
        if(j >= 0 && k >= 0 && j < 196 && k < 265)
        {
            int j4 = ((Class6) (aClass6_Sub1_724)).anInt311 - 199;
            byte byte0 = 36;
            char c1 = '\304';
            int k4 = j4 + 3;
            int l4 = byte0 + 30;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                lefty = !lefty;
                if(lefty)
                    chatText2("@bot@Left click attack - Enabled");
                else
                    chatText2("@bot@Left click attack - Disabled");
                super.packets.packetID(66);
                super.packets.variables348(0);
                super.packets.variables348(aBoolean675 ? 1 : 0);
                super.packets.sendpacket();
            }
            l4 += 15;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                FogOfWar = !FogOfWar;
                if(FogOfWar)
                    chatText2("@bot@Fog Of War - Enabled");
                else
                    chatText2("@bot@Fog Of War - Disabled");
                super.packets.packetID(66);
                super.packets.variables348(2);
                super.packets.variables348(aBoolean767 ? 1 : 0);
                super.packets.sendpacket();
            }
            l4 += 15;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                ShowCombat = !ShowCombat;
                if(ShowCombat)
                    chatText2("@bot@Fight Mode Visible - Enabled");
                else
                    chatText2("@bot@Fight Mode Visible - Disabled");
                super.packets.packetID(66);
                super.packets.variables348(3);
                super.packets.variables348(aBoolean853 ? 1 : 0);
                super.packets.sendpacket();
            }
            l4 += 15;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                HideGFX = !HideGFX;
                if(HideGFX)
                    chatText2("@bot@Hide Graphics - Enabled");
                else
                    chatText2("@bot@Hide Graphics - Disabled");
            }
            l4 += 15;
            l4 += 15;
            l4 += 5;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                mapangle = 128;
                CameraZoom = 700;
                xrotate = 912;
                chatText2("@bot@Map Fixed");
                XClient.sendPacket("CMD FIXMAP");
            }
            l4 += 15;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                chatText2("@bot@Privacy settings fixed");
                super.anInt629 = 0;
                super.anInt630 = 0;
                super.anInt631 = 0;
                super.anInt632 = 0;
            }
            l4 += 15;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                chatText2("@bot@Stopping WasteD BoT Script");
                XClient.sendPacket("CMD STOPSCRIPT");
            }
            boolean flag1 = false;
            l4 += 25;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                super.anInt629 = 1 - super.anInt629;
                flag1 = true;
            }
            l4 += 15;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                super.anInt630 = 1 - super.anInt630;
                flag1 = true;
            }
            l4 += 15;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                super.anInt631 = 1 - super.anInt631;
                flag1 = true;
            }
            l4 += 15;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
            {
                super.anInt632 = 1 - super.anInt632;
                flag1 = true;
            }
            l4 += 15;
            if(flag1)
                method28(super.anInt629, super.anInt630, super.anInt631, super.anInt632);
            l4 += 15;
            l4 += 15;
            if(super.mouseX > k4 && super.mouseX < k4 + c1 && super.mouseY > l4 - 12 && super.mouseY < l4 + 4 && mouseClick == 1)
                LogOutControls();
            mouseClick = 0;
        }
    }

    public void method61()
    {
        aClass6_Sub1_724.aBoolean335 = false;
        aClass6_Sub1_724.method212();
        aClass4_830.method142();
        int i = 140;
        int j = 50;
        i += 116;
        j -= 25;
        aClass6_Sub1_724.method235(i - 32 - 55, j, 64, 102, Class1.anIntArray87[anInt873], anIntArray832[anInt876]);
        aClass6_Sub1_724.method247(i - 32 - 55, j, 64, 102, Class1.anIntArray87[anInt872], anIntArray832[anInt875], anIntArray829[anInt877], 0, false);
        aClass6_Sub1_724.method247(i - 32 - 55, j, 64, 102, Class1.anIntArray87[anInt871], anIntArray885[anInt874], anIntArray829[anInt877], 0, false);
        aClass6_Sub1_724.method235(i - 32, j, 64, 102, Class1.anIntArray87[anInt873] + 6, anIntArray832[anInt876]);
        aClass6_Sub1_724.method247(i - 32, j, 64, 102, Class1.anIntArray87[anInt872] + 6, anIntArray832[anInt875], anIntArray829[anInt877], 0, false);
        aClass6_Sub1_724.method247(i - 32, j, 64, 102, Class1.anIntArray87[anInt871] + 6, anIntArray885[anInt874], anIntArray829[anInt877], 0, false);
        aClass6_Sub1_724.method235((i - 32) + 55, j, 64, 102, Class1.anIntArray87[anInt873] + 12, anIntArray832[anInt876]);
        aClass6_Sub1_724.method247((i - 32) + 55, j, 64, 102, Class1.anIntArray87[anInt872] + 12, anIntArray832[anInt875], anIntArray829[anInt877], 0, false);
        aClass6_Sub1_724.method247((i - 32) + 55, j, 64, 102, Class1.anIntArray87[anInt871] + 12, anIntArray885[anInt874], anIntArray829[anInt877], 0, false);
        aClass6_Sub1_724.method231(0, anInt677, anInt948 + 22);
        aClass6_Sub1_724.method211(aGraphics857, 0, 0);
    }

    public void Actions()
    {
        int i = Class1.anInt144;
        int j = 2203 - (myPlayerY2 + anInt807 + myPlayerY1);
        if(myPlayerX2 + anInt806 + myPlayerX1 >= 2640)
            j = -50;
        int k = -1;
        for(int l = 0; l < objCount; l++)
            aBooleanArray662[l] = false;

        for(int i1 = 0; i1 < anInt855; i1++)
            aBooleanArray831[i1] = false;

        int j1 = aClass10_739.method278();
        Class5 aclass5[] = aClass10_739.method280();
        int ai[] = aClass10_739.method279();
        for(int k1 = 0; k1 < j1 && optionCount <= 200; k1++)
        {
            int i2 = ai[k1];
            Class5 class5 = aclass5[k1];
            if(class5.anIntArray258[i2] > 65535 && (class5.anIntArray258[i2] < 0x30d40 || class5.anIntArray258[i2] > 0x493e0))
                continue;
            if(class5 == aClass10_739.aClass5_433)
            {
                int j2 = class5.anIntArray258[i2] % 10000;
                int i3 = class5.anIntArray258[i2] / 10000;
                if(i3 == 1)
                {
                    String s = "";
                    int l3 = 0;
                    if(myPlayer.combatLevel > 0 && PlayerArray[j2].combatLevel > 0)
                        l3 = myPlayer.combatLevel - PlayerArray[j2].combatLevel;
                    if(l3 < 0)
                        s = "@or1@";
                    if(l3 < -3)
                        s = "@or2@";
                    if(l3 < -6)
                        s = "@or3@";
                    if(l3 < -9)
                        s = "@red@";
                    if(l3 > 0)
                        s = "@gr1@";
                    if(l3 > 3)
                        s = "@gr2@";
                    if(l3 > 6)
                        s = "@gr3@";
                    if(l3 > 9)
                        s = "@gre@";
                    s = " " + s + "(level-" + PlayerArray[j2].combatLevel + ")";
                    if(selectedSpell >= 0)
                    {
                        if(Class1.spellType[selectedSpell] == 1 || Class1.spellType[selectedSpell] == 2)
                        {
                            optionNameArray[optionCount] = "Cast " + Class1.spellNameArray[selectedSpell] + " on";
                            optionObjectArray[optionCount] = "@whi@" + PlayerArray[j2].name + "[" + j2 + "]" + s;
                            optionIDArray[optionCount] = 800;
                            optionObjXArray[optionCount] = PlayerArray[j2].posX;
                            optionObjYArray[optionCount] = PlayerArray[j2].posY;
                            optionObjIDArray[optionCount] = PlayerArray[j2].ID;
                            optionObjNameArray[optionCount] = selectedSpell;
                            optionCount++;
                        }
                        continue;
                    }
                    if(selectedItem >= 0)
                    {
                        optionNameArray[optionCount] = "Use " + selectedItem + " with";
                        optionObjectArray[optionCount] = "@whi@" + PlayerArray[j2].name + "[" + j2 + "]" + s;
                        optionIDArray[optionCount] = 810;
                        optionObjXArray[optionCount] = PlayerArray[j2].posX;
                        optionObjYArray[optionCount] = PlayerArray[j2].posY;
                        optionObjIDArray[optionCount] = PlayerArray[j2].ID;
                        optionObjNameArray[optionCount] = selectedItem;
                        optionCount++;
                        continue;
                    }
                    if(j > 0 && (PlayerArray[j2].posY - 64) / anInt946 + anInt807 + myPlayerY1 < 2203)
                    {
                        optionNameArray[optionCount] = "Attack";
                        optionObjectArray[optionCount] = "@whi@" + PlayerArray[j2].name + "[" + j2 + "]" + s;
                        if(!lefty)
                        {
                            if(l3 >= 0 && l3 < 5)
                                optionIDArray[optionCount] = 805;
                            else
                                optionIDArray[optionCount] = 2805;
                        } else
                        if(lefty)
                            if(l3 >= 0 && l3 < 5)
                                optionIDArray[optionCount] = 805;
                            else
                                optionIDArray[optionCount] = 805;
                        optionObjXArray[optionCount] = PlayerArray[j2].posX;
                        optionObjYArray[optionCount] = PlayerArray[j2].posY;
                        optionObjIDArray[optionCount] = PlayerArray[j2].ID;
                        optionCount++;
                    } else
                    if(members)
                    {
                        optionNameArray[optionCount] = "Duel with";
                        optionObjectArray[optionCount] = "@whi@" + PlayerArray[j2].name + "[" + j2 + "]" + s;
                        optionObjXArray[optionCount] = PlayerArray[j2].posX;
                        optionObjYArray[optionCount] = PlayerArray[j2].posY;
                        optionIDArray[optionCount] = 2806;
                        optionObjIDArray[optionCount] = PlayerArray[j2].ID;
                        optionCount++;
                    }
                    optionNameArray[optionCount] = "Trade with";
                    optionObjectArray[optionCount] = "@whi@" + PlayerArray[j2].name + "[" + j2 + "]" + s;
                    optionIDArray[optionCount] = 2810;
                    optionObjIDArray[optionCount] = PlayerArray[j2].ID;
                    optionCount++;
                    optionNameArray[optionCount] = "Follow";
                    optionObjectArray[optionCount] = "@whi@" + PlayerArray[j2].name + "[" + j2 + "]" + s;
                    optionIDArray[optionCount] = 2820;
                    optionObjIDArray[optionCount] = PlayerArray[j2].ID;
                    optionCount++;
                    optionNameArray[optionCount] = "Select";
                    optionObjectArray[optionCount] = "@whi@" + PlayerArray[j2].name + s;
                    optionIDArray[optionCount] = 9999;
                    optionObjIDArray[optionCount] = PlayerArray[j2].ID;
                    optionCount++;
                    continue;
                }
                if(i3 == 2)
                {
                    if(selectedSpell >= 0)
                    {
                        if(Class1.spellType[selectedSpell] == 3)
                        {
                            optionNameArray[optionCount] = "Cast " + Class1.spellNameArray[selectedSpell] + " on";
                            optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[itemIDArray[j2]];
                            optionIDArray[optionCount] = 200;
                            optionObjXArray[optionCount] = itemXArray[j2];
                            optionObjYArray[optionCount] = itemYArray[j2];
                            optionObjIDArray[optionCount] = itemIDArray[j2];
                            optionObjNameArray[optionCount] = selectedSpell;
                            optionCount++;
                        }
                        continue;
                    }
                    if(selectedItem >= 0)
                    {
                        optionNameArray[optionCount] = "Use " + selectedItem + " with";
                        optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[itemIDArray[j2]] + "[" + j2 + "]";
                        optionIDArray[optionCount] = 210;
                        optionObjXArray[optionCount] = itemXArray[j2];
                        optionObjYArray[optionCount] = itemYArray[j2];
                        optionObjIDArray[optionCount] = itemIDArray[j2];
                        optionObjNameArray[optionCount] = selectedItem;
                        optionCount++;
                    } else
                    {
                        optionNameArray[optionCount] = "Take";
                        optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[itemIDArray[j2]] + "[" + j2 + "]";
                        optionIDArray[optionCount] = 220;
                        optionObjXArray[optionCount] = itemXArray[j2];
                        optionObjYArray[optionCount] = itemYArray[j2];
                        optionObjIDArray[optionCount] = itemIDArray[j2];
                        optionCount++;
                        optionNameArray[optionCount] = "Examine";
                        optionObjectArray[optionCount] = "@lre@" + Class1.itemNameArray[itemIDArray[j2]] + "[" + j2 + "]";
                        optionIDArray[optionCount] = 3200;
                        optionObjIDArray[optionCount] = itemIDArray[j2];
                        optionCount++;
                    }
                    continue;
                }
                if(i3 != 3)
                    continue;
                String s1 = "";
                int i4 = -1;
                int j4 = NPCArray[j2].combatlvl;
                if(Class1.anIntArray116[j4] > 0)
                {
                    int k4 = (Class1.NPCAttack[j4] + Class1.NPCDefense[j4] + Class1.NPCStrength[j4] + Class1.NPCHitpoints[j4]) / 4;
                    int l4 = (RealStatLevelArray[0] + RealStatLevelArray[1] + RealStatLevelArray[2] + RealStatLevelArray[3] + 27) / 4;
                    i4 = l4 - k4;
                    s1 = "@yel@";
                    if(i4 < 0)
                        s1 = "@or1@";
                    if(i4 < -3)
                        s1 = "@or2@";
                    if(i4 < -6)
                        s1 = "@or3@";
                    if(i4 < -9)
                        s1 = "@red@";
                    if(i4 > 0)
                        s1 = "@gr1@";
                    if(i4 > 3)
                        s1 = "@gr2@";
                    if(i4 > 6)
                        s1 = "@gr3@";
                    if(i4 > 9)
                        s1 = "@gre@";
                    s1 = " " + s1 + "(level-" + k4 + ")";
                }
                if(selectedSpell >= 0)
                {
                    if(Class1.spellType[selectedSpell] == 2)
                    {
                        optionNameArray[optionCount] = "Cast " + Class1.spellNameArray[selectedSpell] + " on";
                        optionObjectArray[optionCount] = "@yel@" + Class1.NPCNameArray[NPCArray[j2].combatlvl];
                        optionIDArray[optionCount] = 700;
                        optionObjXArray[optionCount] = NPCArray[j2].posX;
                        optionObjYArray[optionCount] = NPCArray[j2].posY;
                        optionObjIDArray[optionCount] = NPCArray[j2].ID;
                        optionObjNameArray[optionCount] = selectedSpell;
                        optionCount++;
                    }
                    continue;
                }
                if(selectedItem >= 0)
                {
                    optionNameArray[optionCount] = "Use " + selectedItem + " with";
                    optionObjectArray[optionCount] = "@yel@" + Class1.NPCNameArray[NPCArray[j2].combatlvl];
                    optionIDArray[optionCount] = 710;
                    optionObjXArray[optionCount] = NPCArray[j2].posX;
                    optionObjYArray[optionCount] = NPCArray[j2].posY;
                    optionObjIDArray[optionCount] = NPCArray[j2].ID;
                    optionObjNameArray[optionCount] = selectedItem;
                    optionCount++;
                    continue;
                }
                if(Class1.anIntArray116[j4] > 0)
                {
                    optionNameArray[optionCount] = "Attack";
                    optionObjectArray[optionCount] = "@yel@" + Class1.NPCNameArray[NPCArray[j2].combatlvl] + s1 + " [" + NPCArray[j2].combatlvl + "]";
                    if(!lefty)
                    {
                        if(i4 >= 0)
                            optionIDArray[optionCount] = 715;
                        else
                            optionIDArray[optionCount] = 2715;
                    } else
                    if(lefty)
                        if(i4 >= 0)
                            optionIDArray[optionCount] = 715;
                        else
                            optionIDArray[optionCount] = 715;
                    optionObjXArray[optionCount] = NPCArray[j2].posX;
                    optionObjYArray[optionCount] = NPCArray[j2].posY;
                    optionObjIDArray[optionCount] = NPCArray[j2].ID;
                    optionCount++;
                }
                optionNameArray[optionCount] = "Talk-to";
                optionObjectArray[optionCount] = "@yel@" + Class1.NPCNameArray[NPCArray[j2].combatlvl] + " [" + NPCArray[j2].combatlvl + "]";
                optionIDArray[optionCount] = 720;
                optionObjXArray[optionCount] = NPCArray[j2].posX;
                optionObjYArray[optionCount] = NPCArray[j2].posY;
                optionObjIDArray[optionCount] = NPCArray[j2].ID;
                optionCount++;
                if(!Class1.aStringArray129[j4].equals(""))
                {
                    optionNameArray[optionCount] = Class1.aStringArray129[j4];
                    optionObjectArray[optionCount] = "@yel@" + Class1.NPCNameArray[NPCArray[j2].combatlvl];
                    optionIDArray[optionCount] = 725;
                    optionObjXArray[optionCount] = NPCArray[j2].posX;
                    optionObjYArray[optionCount] = NPCArray[j2].posY;
                    optionObjIDArray[optionCount] = NPCArray[j2].ID;
                    optionCount++;
                }
                optionNameArray[optionCount] = "Examine";
                optionObjectArray[optionCount] = "@yel@" + Class1.NPCNameArray[NPCArray[j2].combatlvl] + " [" + NPCArray[j2].combatlvl + "]";
                optionIDArray[optionCount] = 3700;
                optionObjIDArray[optionCount] = NPCArray[j2].combatlvl;
                optionCount++;
                optionNameArray[optionCount] = "Select";
                optionObjectArray[optionCount] = "@yel@" + Class1.NPCNameArray[NPCArray[j2].combatlvl] + " [" + NPCArray[j2].combatlvl + "]";
                optionIDArray[optionCount] = 4300;
                optionObjIDArray[optionCount] = NPCArray[j2].combatlvl;
                optionCount++;
                continue;
            }
            if(class5 != null && class5.anInt257 >= 10000)
            {
                int k2 = class5.anInt257 - 10000;
                int j3 = anIntArray741[k2];
                if(aBooleanArray831[k2])
                    continue;
                if(selectedSpell >= 0)
                {
                    if(Class1.spellType[selectedSpell] == 4)
                    {
                        optionNameArray[optionCount] = "Cast " + Class1.spellNameArray[selectedSpell] + " on";
                        optionObjectArray[optionCount] = "@cya@" + Class1.objNameArray[j3];
                        optionIDArray[optionCount] = 300;
                        optionObjXArray[optionCount] = anIntArray747[k2];
                        optionObjYArray[optionCount] = anIntArray748[k2];
                        optionObjIDArray[optionCount] = anIntArray740[k2];
                        optionObjNameArray[optionCount] = selectedSpell;
                        optionCount++;
                    }
                } else
                if(selectedItem >= 0)
                {
                    optionNameArray[optionCount] = "Use " + selectedItem + " with";
                    optionObjectArray[optionCount] = "@cya@" + Class1.objNameArray[j3];
                    optionIDArray[optionCount] = 310;
                    optionObjXArray[optionCount] = anIntArray747[k2];
                    optionObjYArray[optionCount] = anIntArray748[k2];
                    optionObjIDArray[optionCount] = anIntArray740[k2];
                    optionObjNameArray[optionCount] = selectedItem;
                    optionCount++;
                } else
                {
                    if(!Class1.aStringArray72[j3].equalsIgnoreCase("WalkTo"))
                    {
                        optionNameArray[optionCount] = Class1.aStringArray72[j3];
                        optionObjectArray[optionCount] = "@cya@" + Class1.objNameArray[j3] + "[" + j3 + "]" + "[" + k2 + "]";
                        optionIDArray[optionCount] = 320;
                        optionObjXArray[optionCount] = anIntArray747[k2];
                        optionObjYArray[optionCount] = anIntArray748[k2];
                        optionObjIDArray[optionCount] = anIntArray740[k2];
                        optionCount++;
                    }
                    if(!Class1.objCommandName[j3].equalsIgnoreCase("Examine"))
                    {
                        optionNameArray[optionCount] = Class1.objCommandName[j3];
                        optionObjectArray[optionCount] = "@cya@" + Class1.objNameArray[j3] + "[" + j3 + "]" + "[" + k2 + "]";
                        optionIDArray[optionCount] = 2300;
                        optionObjXArray[optionCount] = anIntArray747[k2];
                        optionObjYArray[optionCount] = anIntArray748[k2];
                        optionObjIDArray[optionCount] = anIntArray740[k2];
                        optionCount++;
                    }
                    optionNameArray[optionCount] = "Examine";
                    optionObjectArray[optionCount] = "@cya@" + Class1.objNameArray[j3] + "[" + j3 + "]";
                    optionIDArray[optionCount] = 3300;
                    optionObjIDArray[optionCount] = j3;
                    optionCount++;
                }
                aBooleanArray831[k2] = true;
                continue;
            }
            if(class5 != null && class5.anInt257 >= 0)
            {
                int l2 = class5.anInt257;
                int k3 = objID[l2];
                objid = objID[class5.anInt257];
                if(aBooleanArray662[l2])
                    continue;
                if(selectedSpell >= 0)
                {
                    if(Class1.spellType[selectedSpell] == 5)
                    {
                        optionNameArray[optionCount] = "Cast " + Class1.spellNameArray[selectedSpell] + " on";
                        optionObjectArray[optionCount] = "@cya@" + Class1.aStringArray91[k3] + "[" + k3 + "]" + "[" + l2 + "]";
                        optionIDArray[optionCount] = 400;
                        optionObjXArray[optionCount] = objXArray[l2];
                        optionObjYArray[optionCount] = objYArray[l2];
                        optionObjIDArray[optionCount] = anIntArray763[l2];
                        optionObjNameArray[optionCount] = objID[l2];
                        anIntArray805[optionCount] = selectedSpell;
                        optionCount++;
                    }
                } else
                if(selectedItem >= 0)
                {
                    optionNameArray[optionCount] = "Use " + selectedItem + " with";
                    optionObjectArray[optionCount] = "@cya@" + Class1.aStringArray91[k3] + "[" + k3 + "]" + "[" + l2 + "]";
                    optionIDArray[optionCount] = 410;
                    optionObjXArray[optionCount] = objXArray[l2];
                    optionObjYArray[optionCount] = objYArray[l2];
                    optionObjIDArray[optionCount] = anIntArray763[l2];
                    optionObjNameArray[optionCount] = objID[l2];
                    anIntArray805[optionCount] = selectedItem;
                    optionCount++;
                } else
                {
                    if(!Class1.aStringArray93[k3].equalsIgnoreCase("WalkTo"))
                    {
                        optionNameArray[optionCount] = Class1.aStringArray93[k3];
                        optionObjectArray[optionCount] = "@cya@" + Class1.aStringArray91[k3] + "[" + k3 + "]" + "[" + l2 + "]";
                        optionIDArray[optionCount] = 420;
                        optionObjXArray[optionCount] = objXArray[l2];
                        optionObjYArray[optionCount] = objYArray[l2];
                        optionObjIDArray[optionCount] = anIntArray763[l2];
                        optionObjNameArray[optionCount] = objID[l2];
                        optionCount++;
                    }
                    if(!Class1.aStringArray94[k3].equalsIgnoreCase("Examine"))
                    {
                        optionNameArray[optionCount] = Class1.aStringArray94[k3];
                        optionObjectArray[optionCount] = "@cya@" + Class1.aStringArray91[k3] + "[" + k3 + "]" + "[" + l2 + "]";
                        optionIDArray[optionCount] = 2400;
                        optionObjXArray[optionCount] = objXArray[l2];
                        optionObjYArray[optionCount] = objYArray[l2];
                        optionObjIDArray[optionCount] = anIntArray763[l2];
                        optionObjNameArray[optionCount] = objID[l2];
                        optionCount++;
                    }
                    optionNameArray[optionCount] = "Examine";
                    optionObjectArray[optionCount] = "@cya@" + Class1.aStringArray91[k3] + "[" + k3 + "]" + "[" + l2 + "]";
                    optionIDArray[optionCount] = 3400;
                    optionObjIDArray[optionCount] = k3;
                    optionCount++;
                }
                aBooleanArray662[l2] = true;
                continue;
            }
            if(i2 >= 0)
                i2 = class5.anIntArray258[i2] - 0x30d40;
            if(i2 >= 0)
                k = i2;
        }

        if(selectedSpell >= 0 && Class1.spellType[selectedSpell] <= 1)
        {
            optionNameArray[optionCount] = "Cast " + Class1.spellNameArray[selectedSpell] + " on self";
            optionObjectArray[optionCount] = "";
            optionIDArray[optionCount] = 1000;
            optionObjIDArray[optionCount] = selectedSpell;
            optionCount++;
        }
        if(k != -1)
        {
            int l1 = k;
            if(selectedSpell >= 0)
            {
                if(Class1.spellType[selectedSpell] == 6)
                {
                    optionNameArray[optionCount] = "Cast " + Class1.spellNameArray[selectedSpell] + " on ground";
                    optionObjectArray[optionCount] = "";
                    optionIDArray[optionCount] = 900;
                    optionObjXArray[optionCount] = aClass19_883.tileXArray[l1];
                    optionObjYArray[optionCount] = aClass19_883.tileYArray[l1];
                    optionObjIDArray[optionCount] = selectedSpell;
                    optionCount++;
                    return;
                }
            } else
            if(selectedItem < 0)
            {
                optionNameArray[optionCount] = "Walk here";
                optionObjectArray[optionCount] = "";
                optionIDArray[optionCount] = 920;
                optionObjXArray[optionCount] = aClass19_883.tileXArray[l1];
                optionObjYArray[optionCount] = aClass19_883.tileYArray[l1];
                chosenx = aClass19_883.tileXArray[l1];
                choseny = aClass19_883.tileYArray[l1];
                optionCount++;
            }
        }
    }

    public void WildEnter()
    {
        int i = 97;
        aClass6_Sub1_724.method216(86, 77, 340, 180, 0);
        aClass6_Sub1_724.method217(86, 77, 340, 180, 0xffffff);
        aClass6_Sub1_724.FloatText("Warning! Proceed with caution", 256, i, 4, 0xff0000);
        i += 26;
        aClass6_Sub1_724.FloatText("If you go much further north you will enter the", 256, i, 1, 0xffffff);
        i += 13;
        aClass6_Sub1_724.FloatText("wilderness. This a very dangerous area where", 256, i, 1, 0xffffff);
        i += 13;
        aClass6_Sub1_724.FloatText("other players can attack you!", 256, i, 1, 0xffffff);
        i += 22;
        aClass6_Sub1_724.FloatText("The further north you go the more dangerous it", 256, i, 1, 0xffffff);
        i += 13;
        aClass6_Sub1_724.FloatText("becomes, but the more treasure you will find.", 256, i, 1, 0xffffff);
        i += 22;
        aClass6_Sub1_724.FloatText("In the wilderness an indicator at the bottom-right", 256, i, 1, 0xffffff);
        i += 13;
        aClass6_Sub1_724.FloatText("of the screen will show the current level of danger", 256, i, 1, 0xffffff);
        i += 22;
        int j = 0xffffff;
        if(super.mouseY > i - 12 && super.mouseY <= i && super.mouseX > 181 && super.mouseX < 331)
            j = 0xff0000;
        aClass6_Sub1_724.FloatText("Click here to close window", 256, i, 1, j);
        if(mouseClick != 0)
        {
            if(super.mouseY > i - 12 && super.mouseY <= i && super.mouseX > 181 && super.mouseX < 331)
                anInt725 = 2;
            if(super.mouseX < 86 || super.mouseX > 426 || super.mouseY < 77 || super.mouseY > 257)
                anInt725 = 2;
            mouseClick = 0;
        }
    }

    public void AnimModels()
    {
        int i = Class1.anInt144;
        Class1.method124("torcha2");
        Class1.method124("torcha3");
        Class1.method124("torcha4");
        Class1.method124("skulltorcha2");
        Class1.method124("skulltorcha3");
        Class1.method124("skulltorcha4");
        Class1.method124("firea2");
        Class1.method124("firea3");
        Class1.method124("fireplacea2");
        Class1.method124("fireplacea3");
        Class1.method124("firespell2");
        Class1.method124("firespell3");
        Class1.method124("lightning2");
        Class1.method124("lightning3");
        Class1.method124("clawspell2");
        Class1.method124("clawspell3");
        Class1.method124("clawspell4");
        Class1.method124("clawspell5");
        Class1.method124("spellcharge2");
        Class1.method124("spellcharge3");
        if(method7())
        {
            byte abyte0[] = UnPack("models" + Class18.anInt577 + ".jag", "3d models", 60);
            if(abyte0 == null)
            {
                aBoolean922 = true;
                return;
            }
            for(int k = 0; k < Class1.anInt74; k++)
            {
                int l = Class15.method364(Class1.aStringArray126[k] + ".ob3", abyte0);
                if(l != 0)
                    aClass5Array994[k] = new Class5(abyte0, l, true);
                else
                    aClass5Array994[k] = new Class5(1, 1);
                if(Class1.aStringArray126[k].equals("giantcrystal"))
                    aClass5Array994[k].aBoolean256 = true;
            }

            return;
        }
        method15(70, "Loading 3d models");
        for(int j = 0; j < Class1.anInt74; j++)
        {
            aClass5Array994[j] = new Class5("../gamedata/models/" + Class1.aStringArray126[j] + ".ob2");
            if(Class1.aStringArray126[j].equals("giantcrystal"))
                aClass5Array994[j].aBoolean256 = true;
        }

    }

    public void CentralControls()
    {
        int i = Class1.anInt144;
        if(anInt746 != 0)
        {
            LogOutSucceess();
            XClient.sendPacket("LOGOUT MENU");
        } else
        if(aBoolean745)
            CloseWindow();
        else
        if(aBoolean879 && anInt869 == 0)
            method81();
        else
        if(aBoolean727 && anInt869 == 0)
            Shop();
        else
        if(tradeWindow)
            TradeFinish();
        else
        if(aBoolean856)
            DuelTradeJunk();
        else
        if(duelWindow)
            duel();
        else
        if(aBoolean917)
            DuelOpts();
        else
        if(anInt986 == 1)
            ReportAbuse();
        else
        if(anInt986 == 2)
            AbuseMenu();
        else
        if(anInt931 != 0)
        {
            ListIgnFrie();
        } else
        {
            if(answerMenu)
                method46();
            if(ShowCombat)
                CombatStyle();
            if(myPlayer.status == 8 || myPlayer.status == 9)
                CombatStyle();
            method114();
            boolean flag = !answerMenu && !aBoolean854;
            if(flag)
                optionCount = 0;
            if(toolbar == 0 && flag)
                Actions();
            if(toolbar == 1)
                ItemOptions(flag);
            if(toolbar == 2)
                method103(flag);
            if(toolbar == 3)
                StatQuest(flag);
            if(toolbar == 4)
                SpellPray(flag);
            if(toolbar == 5)
                FriendsActions(flag);
            if(toolbar == 6)
                OptsMenu(flag);
            if(!aBoolean854 && !answerMenu)
                TargetStuff();
            if(aBoolean854 && !answerMenu)
                Options();
        }
        mouseClick = 0;
    }

    public void SuperReset()
    {
        super.aString42 = "";
        super.aString43 = "";
    }

    public void WelcomeWindow()
    {
        int i = Class1.anInt144;
        int j = 65;
        if(anInt685 != 201)
            j += 60;
        if(anInt924 > 0)
            j += 60;
        if(anInt782 != 0)
            j += 45;
        int k = 167 - j / 2;
        aClass6_Sub1_724.method216(56, 167 - j / 2, 400, j, 0);
        aClass6_Sub1_724.method217(56, 167 - j / 2, 400, j, 0xffffff);
        k += 20;
        aClass6_Sub1_724.FloatText("Welcome to @gre@WasteDBoT @whi@" + username, 256, k, 4, 0xffff00);
        k += 30;
        String s;
        if(anInt898 == 0)
            s = "earlier today";
        else
        if(anInt898 == 1)
            s = "yesterday";
        else
            s = anInt898 + " days ago";
        if(anInt782 != 0)
        {
            aClass6_Sub1_724.FloatText("You last logged in " + s, 256, k, 1, 0xffffff);
            k += 15;
            if(aString894 == null)
                aString894 = method54(anInt782);
            aClass6_Sub1_724.FloatText("from: " + aString894, 256, k, 1, 0xffffff);
            k += 15;
            k += 15;
        }
        if(anInt924 > 0)
        {
            int l = 0xffffff;
            aClass6_Sub1_724.FloatText("Jagex staff will NEVER email you. We use the", 256, k, 1, l);
            k += 15;
            aClass6_Sub1_724.FloatText("message-centre on this website instead.", 256, k, 1, l);
            k += 15;
            if(anInt924 == 1)
                aClass6_Sub1_724.FloatText("You have @yel@0@whi@ unread messages in your message-centre", 256, k, 1, 0xffffff);
            else
                aClass6_Sub1_724.FloatText("You have @gre@" + (anInt924 - 1) + " unread messages @whi@in your message-centre", 256, k, 1, 0xffffff);
            k += 15;
            k += 15;
        }
        if(anInt685 != 201)
        {
            if(anInt685 == 200)
            {
                aClass6_Sub1_724.FloatText("You have not yet set any password recovery questions.", 256, k, 1, 0xff8000);
                k += 15;
                aClass6_Sub1_724.FloatText("We strongly recommend you do so now to secure your account.", 256, k, 1, 0xff8000);
                k += 15;
                aClass6_Sub1_724.FloatText("Do this from the 'account management' area on our front webpage", 256, k, 1, 0xff8000);
                k += 15;
            } else
            {
                String s1;
                if(anInt685 == 0)
                    s1 = "Earlier today";
                else
                if(anInt685 == 1)
                    s1 = "Yesterday";
                else
                    s1 = anInt685 + " days ago";
                aClass6_Sub1_724.FloatText(s1 + " you changed your recovery questions", 256, k, 1, 0xff8000);
                k += 15;
                aClass6_Sub1_724.FloatText("If you do not remember making this change then cancel it immediately", 256, k, 1, 0xff8000);
                k += 15;
                aClass6_Sub1_724.FloatText("Do this from the 'account management' area on our front webpage", 256, k, 1, 0xff8000);
                k += 15;
            }
            k += 15;
        }
        int i1 = 0xffffff;
        if(super.mouseY > k - 12 && super.mouseY <= k && super.mouseX > 106 && super.mouseX < 406)
            i1 = 0xff0000;
        aClass6_Sub1_724.FloatText("Click here to close window", 256, k, 1, i1);
        if(mouseClick == 1)
        {
            if(i1 == 0xff0000)
                aBoolean908 = false;
            if((super.mouseX < 86 || super.mouseX > 426) && (super.mouseY < 167 - j / 2 || super.mouseY > 167 + j / 2))
                aBoolean908 = false;
        }
        mouseClick = 0;
    }

    void method68(int i, int j, int k, int l, int i1, int j1, int k1)
    {
        int l1 = Class1.anInt144;
        Class2 class2 = NPCArray[i1];
        int i2 = class2.status + (mapangle + 16) / 32 & 7;
        boolean flag = false;
        int j2 = i2;
        if(j2 == 5)
        {
            j2 = 3;
            flag = true;
        } else
        if(j2 == 6)
        {
            j2 = 2;
            flag = true;
        } else
        if(j2 == 7)
        {
            j2 = 1;
            flag = true;
        }
        int k2 = j2 * 3 + anIntArray726[(class2.anInt152 / Class1.anIntArray105[class2.combatlvl]) % 4];
        if(class2.status == 8)
        {
            j2 = 5;
            i2 = 2;
            flag = false;
            i -= (Class1.anIntArray107[class2.combatlvl] * k1) / 100;
            k2 = j2 * 3 + anIntArray939[(anInt918 / (Class1.anIntArray106[class2.combatlvl] - 1)) % 8];
        } else
        if(class2.status == 9)
        {
            j2 = 5;
            i2 = 2;
            flag = true;
            i += (Class1.anIntArray107[class2.combatlvl] * k1) / 100;
            k2 = j2 * 3 + anIntArray909[(anInt918 / Class1.anIntArray106[class2.combatlvl]) % 8];
        }
        for(int l2 = 0; l2 < 12; l2++)
        {
            int k3 = anIntArrayArray684[i2][l2];
            int i4 = Class1.anIntArrayArray90[class2.combatlvl][k3];
            if(i4 < 0)
                continue;
            int j4 = 0;
            int k4 = 0;
            int l4 = k2;
            if(flag && j2 >= 1 && j2 <= 3 && Class1.anIntArray86[i4] == 1)
                l4 += 15;
            if(j2 == 5 && Class1.anIntArray85[i4] != 1)
                continue;
            int i5 = l4 + Class1.anIntArray87[i4];
            j4 = (j4 * k) / ((Class6) (aClass6_Sub1_724)).anIntArray328[i5];
            k4 = (k4 * l) / ((Class6) (aClass6_Sub1_724)).anIntArray329[i5];
            int j5 = (k * ((Class6) (aClass6_Sub1_724)).anIntArray328[i5]) / ((Class6) (aClass6_Sub1_724)).anIntArray328[Class1.anIntArray87[i4]];
            j4 -= (j5 - k) / 2;
            int k5 = Class1.anIntArray83[i4];
            int l5 = 0;
            if(k5 == 1)
            {
                k5 = Class1.anIntArray130[class2.combatlvl];
                l5 = Class1.anIntArray133[class2.combatlvl];
            } else
            if(k5 == 2)
            {
                k5 = Class1.anIntArray131[class2.combatlvl];
                l5 = Class1.anIntArray133[class2.combatlvl];
            } else
            if(k5 == 3)
            {
                k5 = Class1.anIntArray132[class2.combatlvl];
                l5 = Class1.anIntArray133[class2.combatlvl];
            }
            aClass6_Sub1_724.method247(i + j4, j + k4, j5, l, i5, k5, l5, j1, flag);
        }

        if(class2.anInt161 > 0)
        {
            anIntArray967[anInt820] = aClass6_Sub1_724.method263(class2.lastChatMessage, 1) / 2;
            if(anIntArray967[anInt820] > 150)
                anIntArray967[anInt820] = 150;
            anIntArray968[anInt820] = (aClass6_Sub1_724.method263(class2.lastChatMessage, 1) / 300) * aClass6_Sub1_724.method261(1);
            anIntArray965[anInt820] = i + k / 2;
            anIntArray966[anInt820] = j;
            aStringArray821[anInt820++] = class2.lastChatMessage;
        }
        if(class2.status == 8 || class2.status == 9 || class2.anInt167 != 0)
        {
            if(class2.anInt167 > 0)
            {
                int i3 = i;
                if(class2.status == 8)
                    i3 -= (20 * k1) / 100;
                else
                if(class2.status == 9)
                    i3 += (20 * k1) / 100;
                int l3 = (class2.anInt165 * 30) / class2.anInt166;
                anIntArray687[anInt766] = i3 + k / 2;
                anIntArray688[anInt766] = j;
                anIntArray689[anInt766++] = l3;
            }
            if(class2.anInt167 > 150)
            {
                int j3 = i;
                if(class2.status == 8)
                    j3 -= (10 * k1) / 100;
                else
                if(class2.status == 9)
                    j3 += (10 * k1) / 100;
                aClass6_Sub1_724.method231((j3 + k / 2) - 12, (j + l / 2) - 12, anInt948 + 12);
                aClass6_Sub1_724.FloatText(String.valueOf(class2.anInt164), (j3 + k / 2) - 1, j + l / 2 + 5, 3, 0xffffff);
            }
        }
    }

    public void ChatTypes()
    {
        aClass6_Sub1_724.method231(0, anInt677 - 4, anInt948 + 23);
        int i = Class6.method223(200, 200, 255);
        if(anInt780 == 0)
            i = Class6.method223(255, 200, 50);
        if(anInt790 % 30 > 15)
            i = Class6.method223(255, 50, 50);
        aClass6_Sub1_724.FloatText("All messages", 54, anInt677 + 6, 0, i);
        i = Class6.method223(200, 200, 255);
        if(anInt780 == 1)
            i = Class6.method223(255, 200, 50);
        if(anInt791 % 30 > 15)
            i = Class6.method223(255, 50, 50);
        aClass6_Sub1_724.FloatText("Chat history", 155, anInt677 + 6, 0, i);
        i = Class6.method223(200, 200, 255);
        if(anInt780 == 2)
            i = Class6.method223(255, 200, 50);
        if(anInt792 % 30 > 15)
            i = Class6.method223(255, 50, 50);
        aClass6_Sub1_724.FloatText("Quest History", 255, anInt677 + 6, 0, i);
        i = Class6.method223(200, 200, 255);
        if(anInt780 == 3)
            i = Class6.method223(255, 200, 50);
        if(anInt793 % 30 > 15)
            i = Class6.method223(255, 50, 50);
        aClass6_Sub1_724.FloatText("Private History", 355, anInt677 + 6, 0, i);
        aClass6_Sub1_724.FloatText("WasteD BoT", 457, anInt677 + 6, 0, 0xffffff);
    }

    public void method70()
    {
        int i = Class1.anInt144;
        aBoolean849 = false;
        aClass6_Sub1_724.aBoolean335 = false;
        aClass6_Sub1_724.method212();
        if(anInt690 == 0 || anInt690 == 1 || anInt690 == 2 || anInt690 == 3)
        {
            int j = (anInt918 * 2) % 3072;
            if(j < 1024)
            {
                aClass6_Sub1_724.method231(0, 10, anInt954);
                if(j > 768)
                    aClass6_Sub1_724.method233(0, 10, anInt954 + 1, j - 768);
            } else
            if(j < 2048)
            {
                aClass6_Sub1_724.method231(0, 10, anInt954 + 1);
                if(j > 1792)
                    aClass6_Sub1_724.method233(0, 10, anInt948 + 10, j - 1792);
            } else
            {
                aClass6_Sub1_724.method231(0, 10, anInt948 + 10);
                if(j > 2816)
                    aClass6_Sub1_724.method233(0, 10, anInt954, j - 2816);
            }
        }
        if(anInt690 == 0)
            aClass4_858.method142();
        if(anInt690 == 1)
            aClass4_667.method142();
        if(anInt690 == 2)
            aClass4_751.method142();
        aClass6_Sub1_724.method231(0, anInt677, anInt948 + 22);
        aClass6_Sub1_724.method211(aGraphics857, 0, 0);
    }

    public void LogOutControls()
    {
        if(anInt947 == 0)
            return;
        if(anInt869 > 450)
        {
            chatText("@cya@You can't logout during combat!", 3);
            XClient.sendPacket("LOGOUT BLOCK");
            return;
        }
        if(anInt869 > 0)
        {
            chatText("@cya@You can't logout for 10 seconds after combat", 3);
            XClient.sendPacket("LOGOUT BLOCK");
            return;
        } else
        {
            super.packets.packetID(168);
            super.packets.sendpacket();
            anInt746 = 1000;
            return;
        }
    }

    public void NoBotCon()
    {
        aClass6_Sub1_724.method216(126, 137, 260, 60, 0);
        aClass6_Sub1_724.method217(126, 137, 260, 60, 0xffffff);
        aClass6_Sub1_724.FloatText("No WasteDBoT Con", 256, 173, 5, 0xffffff);
    }

    public void method72()
    {
        int i = Class1.anInt144;
        anInt889 = anInt936;
        for(int j = 0; j < anInt936; j++)
        {
            bankItemID[j] = anIntArray816[j];
            bankItemCount[j] = anIntArray817[j];
        }

        for(int k = 0; k < inventoryItemCounter && anInt889 < anInt916; k++)
        {
            int l = inventoryItemID[k];
            boolean flag = false;
            int i1 = 0;
            do
            {
                if(i1 >= anInt889)
                    break;
                if(bankItemID[i1] == l)
                {
                    flag = true;
                    break;
                }
                i1++;
            } while(true);
            if(!flag)
            {
                bankItemID[anInt889] = l;
                bankItemCount[anInt889] = 0;
                anInt889++;
            }
        }

    }

    public void ConfigPile()
    {
        byte abyte0[] = UnPack("config" + Class18.anInt574 + ".jag", "Configuration", 10);
        if(abyte0 == null)
        {
            aBoolean922 = true;
            return;
        }
        Class1.method129(abyte0, members);
        byte abyte1[] = UnPack("filter" + Class18.anInt581 + ".jag", "Chat system", 15);
        if(abyte1 == null)
        {
            aBoolean922 = true;
            return;
        } else
        {
            byte abyte2[] = Class15.method366("fragmentsenc.txt", 0, abyte1);
            byte abyte3[] = Class15.method366("badenc.txt", 0, abyte1);
            byte abyte4[] = Class15.method366("hostenc.txt", 0, abyte1);
            byte abyte5[] = Class15.method366("tldlist.txt", 0, abyte1);
            Class16.method368(new Class13(abyte2), new Class13(abyte3), new Class13(abyte4), new Class13(abyte5));
            return;
        }
    }

    public void method74(int i, int j, int k)
    {
        aClass6_Sub1_724.method220(i, j, k);
        aClass6_Sub1_724.method220(i - 1, j, k);
        aClass6_Sub1_724.method220(i + 1, j, k);
        aClass6_Sub1_724.method220(i, j - 1, k);
        aClass6_Sub1_724.method220(i, j + 1, k);
    }

    public void ListIgnFrie()
    {
        if(mouseClick != 0)
        {
            mouseClick = 0;
            if(anInt931 == 1 && (super.mouseX < 106 || super.mouseY < 145 || super.mouseX > 406 || super.mouseY > 215))
            {
                anInt931 = 0;
                return;
            }
            if(anInt931 == 2 && (super.mouseX < 6 || super.mouseY < 145 || super.mouseX > 506 || super.mouseY > 215))
            {
                anInt931 = 0;
                return;
            }
            if(anInt931 == 3 && (super.mouseX < 106 || super.mouseY < 145 || super.mouseX > 406 || super.mouseY > 215))
            {
                anInt931 = 0;
                return;
            }
            if(super.mouseX > 236 && super.mouseX < 276 && super.mouseY > 193 && super.mouseY < 213)
            {
                anInt931 = 0;
                return;
            }
        }
        int i = 145;
        if(anInt931 == 1)
        {
            aClass6_Sub1_724.method216(106, i, 300, 70, 0);
            aClass6_Sub1_724.method217(106, i, 300, 70, 0xffffff);
            i += 20;
            aClass6_Sub1_724.FloatText("Enter name to add to friends list", 256, i, 4, 0xffffff);
            i += 20;
            aClass6_Sub1_724.FloatText(super.aString40 + "*", 256, i, 4, 0xffffff);
            if(super.aString41.length() > 0)
            {
                String s = super.aString41.trim();
                super.aString40 = "";
                super.aString41 = "";
                anInt931 = 0;
                if(s.length() > 0 && Class15.method362(s) != myPlayer.aLong145)
                    method31(s);
            }
        }
        if(anInt931 == 2)
        {
            aClass6_Sub1_724.method216(6, i, 500, 70, 0);
            aClass6_Sub1_724.method217(6, i, 500, 70, 0xffffff);
            i += 20;
            aClass6_Sub1_724.FloatText("Enter message to send to " + Class15.method363(aLong928), 256, i, 4, 0xffffff);
            i += 20;
            aClass6_Sub1_724.FloatText(super.aString42 + "*", 256, i, 4, 0xffffff);
            if(super.aString43.length() > 0)
            {
                String s1 = super.aString43;
                super.aString42 = "";
                super.aString43 = "";
                anInt931 = 0;
                int k = Class17.method400(s1);
                method33(aLong928, Class17.aByteArray569, k);
                s1 = Class17.method399(Class17.aByteArray569, 0, k);
                s1 = Class16.ChatFilter(s1);
                chatText2("@pri@@cya@You tell [@yel@ " + Class15.method363(aLong928) + "@cya@] " + s1);
                super.lastPM = "LASTPM TO " + Class15.method363(aLong928) + ":" + s1;
                XClient.sendPacketIG(super.lastPM);
            }
        }
        if(anInt931 == 3)
        {
            aClass6_Sub1_724.method216(106, i, 300, 70, 0);
            aClass6_Sub1_724.method217(106, i, 300, 70, 0xffffff);
            i += 20;
            aClass6_Sub1_724.FloatText("Enter name to add to ignore list", 256, i, 4, 0xffffff);
            i += 20;
            aClass6_Sub1_724.FloatText(super.aString40 + "*", 256, i, 4, 0xffffff);
            if(super.aString41.length() > 0)
            {
                String s2 = super.aString41.trim();
                super.aString40 = "";
                super.aString41 = "";
                anInt931 = 0;
                if(s2.length() > 0 && Class15.method362(s2) != myPlayer.aLong145)
                    method29(s2);
            }
        }
        int j = 0xffffff;
        if(super.mouseX > 236 && super.mouseX < 276 && super.mouseY > 193 && super.mouseY < 213)
            j = 0xffff00;
        aClass6_Sub1_724.FloatText("Cancel", 256, 208, 1, j);
    }

    public Class2 method76(int i, int j, int k, int l)
    {
        int i1 = Class1.anInt144;
        if(aClass2Array891[i] == null)
        {
            aClass2Array891[i] = new Class2();
            aClass2Array891[i].ID = i;
            aClass2Array891[i].anInt148 = 0;
        }
        Class2 class2 = aClass2Array891[i];
        boolean flag = false;
        int j1 = 0;
        do
        {
            if(j1 >= anInt743)
                break;
            if(aClass2Array923[j1].ID == i)
            {
                flag = true;
                break;
            }
            j1++;
        } while(true);
        if(flag)
        {
            class2.anInt154 = l;
            int k1 = class2.anInt156;
            if(j != class2.anIntArray157[k1] || k != class2.anIntArray158[k1])
            {
                class2.anInt156 = k1 = (k1 + 1) % 10;
                class2.anIntArray157[k1] = j;
                class2.anIntArray158[k1] = k;
            }
        } else
        {
            class2.ID = i;
            class2.anInt155 = 0;
            class2.anInt156 = 0;
            class2.anIntArray157[0] = class2.posX = j;
            class2.anIntArray158[0] = class2.posY = k;
            class2.anInt154 = class2.status = l;
            class2.anInt152 = 0;
        }
        PlayerArray[PlayerCount++] = class2;
        return class2;
    }

    public void method77()
    {
        int i = Class1.anInt144;
        int j = 0;
        byte byte0 = 50;
        byte byte1 = 50;
        aClass19_883.method416(byte0 * 48 + 23, byte1 * 48 + 23, j);
        aClass19_883.method425(aClass5Array994);
        char c = '\u2600';
        char c1 = '\u1900';
        char c2 = '\u044C';
        char c3 = '\u0378';
        aClass10_739.anInt390 = 4100;
        aClass10_739.anInt391 = 4100;
        aClass10_739.anInt392 = 1;
        aClass10_739.anInt393 = 4000;
        aClass10_739.method298(c, -aClass19_883.method421(c, c1), c1, 912, c3, 0, c2 * 2);
        aClass10_739.method286();
        aClass6_Sub1_724.method221();
        aClass6_Sub1_724.method221();
        aClass6_Sub1_724.method216(0, 0, 512, 6, 0);
        for(int k = 6; k >= 1; k--)
            aClass6_Sub1_724.method222(0, k, 0, k, 512, 8);

        aClass6_Sub1_724.method216(0, 194, 512, 20, 0);
        for(int l = 6; l >= 1; l--)
            aClass6_Sub1_724.method222(0, l, 0, 194 - l, 512, 8);

        aClass6_Sub1_724.method231(15, 15, anInt948 + 10);
        aClass6_Sub1_724.method230(anInt954, 0, 0, 512, 200);
        aClass6_Sub1_724.method227(anInt954);
        c = '\u2400';
        c1 = '\u2400';
        c2 = '\u044C';
        c3 = '\u0378';
        aClass10_739.anInt390 = 4100;
        aClass10_739.anInt391 = 4100;
        aClass10_739.anInt392 = 1;
        aClass10_739.anInt393 = 4000;
        aClass10_739.method298(c, -aClass19_883.method421(c, c1), c1, 912, c3, 0, c2 * 2);
        aClass10_739.method286();
        aClass6_Sub1_724.method221();
        aClass6_Sub1_724.method221();
        aClass6_Sub1_724.method216(0, 0, 512, 6, 0);
        for(int i1 = 6; i1 >= 1; i1--)
            aClass6_Sub1_724.method222(0, i1, 0, i1, 512, 8);

        aClass6_Sub1_724.method216(0, 194, 512, 20, 0);
        for(int j1 = 6; j1 >= 1; j1--)
            aClass6_Sub1_724.method222(0, j1, 0, 194 - j1, 512, 8);

        aClass6_Sub1_724.method231(15, 15, anInt948 + 10);
        aClass6_Sub1_724.method230(anInt954 + 1, 0, 0, 512, 200);
        aClass6_Sub1_724.method227(anInt954 + 1);
        for(int k1 = 0; k1 < 64; k1++)
        {
            aClass10_739.method270(aClass19_883.aClass5ArrayArray603[0][k1]);
            aClass10_739.method270(aClass19_883.aClass5ArrayArray605[1][k1]);
            aClass10_739.method270(aClass19_883.aClass5ArrayArray603[1][k1]);
            aClass10_739.method270(aClass19_883.aClass5ArrayArray605[2][k1]);
            aClass10_739.method270(aClass19_883.aClass5ArrayArray603[2][k1]);
        }

        c = '\u2B80';
        c1 = '\u2880';
        c2 = '\u01F4';
        c3 = '\u0178';
        aClass10_739.anInt390 = 4100;
        aClass10_739.anInt391 = 4100;
        aClass10_739.anInt392 = 1;
        aClass10_739.anInt393 = 4000;
        aClass10_739.method298(c, -aClass19_883.method421(c, c1), c1, 912, c3, 0, c2 * 2);
        aClass10_739.method286();
        aClass6_Sub1_724.method221();
        aClass6_Sub1_724.method221();
        aClass6_Sub1_724.method216(0, 0, 512, 6, 0);
        for(int l1 = 6; l1 >= 1; l1--)
            aClass6_Sub1_724.method222(0, l1, 0, l1, 512, 8);

        aClass6_Sub1_724.method216(0, 194, 512, 20, 0);
        for(int i2 = 6; i2 >= 1; i2--)
            aClass6_Sub1_724.method222(0, i2, 0, 194, 512, 8);

        aClass6_Sub1_724.method231(15, 15, anInt948 + 10);
        aClass6_Sub1_724.method230(anInt948 + 10, 0, 0, 512, 200);
        aClass6_Sub1_724.method227(anInt948 + 10);
    }

    public void method78()
    {
        int i = Class1.anInt144;
        if((anInt940 & 1) == 1 && FileLoad2(anInt940))
            return;
        if((anInt940 & 1) == 0 && FileLoad2(anInt940))
        {
            if(FileLoad2(anInt940 + 1 & 7))
            {
                anInt940 = anInt940 + 1 & 7;
                return;
            }
            if(FileLoad2(anInt940 + 7 & 7))
                anInt940 = anInt940 + 7 & 7;
            return;
        }
        int ai[] = {
            1, -1, 2, -2, 3, -3, 4
        };
        int j = 0;
        do
        {
            if(j >= 7)
                break;
            if(FileLoad2(anInt940 + ai[j] + 8 & 7))
            {
                anInt940 = anInt940 + ai[j] + 8 & 7;
                break;
            }
            j++;
        } while(true);
        if((anInt940 & 1) == 0 && FileLoad2(anInt940))
        {
            if(FileLoad2(anInt940 + 1 & 7))
            {
                anInt940 = anInt940 + 1 & 7;
                return;
            }
            if(FileLoad2(anInt940 + 7 & 7))
                anInt940 = anInt940 + 7 & 7;
            return;
        } else
        {
            return;
        }
    }

    public boolean method79(int i)
    {
        for(int j = 0; j < inventoryItemCounter; j++)
            if(inventoryItemID[j] == i && anIntArray711[j] == 1)
                return true;

        return false;
    }

    public void FriendsActions(boolean flag)
    {
        int i = Class1.anInt144;
        int j = ((Class6) (aClass6_Sub1_724)).anInt311 - 199;
        int k = 36;
        aClass6_Sub1_724.method231(j - 49, 3, anInt948 + 5);
        char c = '\304';
        char c1 = '\266';
        int l;
        int i1 = l = Class6.method223(160, 160, 160);
        if(anInt927 == 0)
            i1 = Class6.method223(220, 220, 220);
        else
            l = Class6.method223(220, 220, 220);
        aClass6_Sub1_724.method214(j, k, c / 2, 24, i1, 128);
        aClass6_Sub1_724.method214(j + c / 2, k, c / 2, 24, l, 128);
        aClass6_Sub1_724.method214(j, k + 24, c, c1 - 24, Class6.method223(220, 220, 220), 128);
        aClass6_Sub1_724.method218(j, k + 24, c, 0);
        aClass6_Sub1_724.method219(j + c / 2, k, 24, 0);
        aClass6_Sub1_724.method218(j, (k + c1) - 16, c, 0);
        aClass6_Sub1_724.FloatText("Friends", j + c / 4, k + 16, 4, 0);
        aClass6_Sub1_724.FloatText("Ignore", j + c / 4 + c / 2, k + 16, 4, 0);
        aClass4_925.method165(anInt926);
        if(anInt927 == 0)
        {
            for(int j1 = 0; j1 < super.anInt624; j1++)
            {
                String s;
                if(super.anIntArray626[j1] == 99)
                    s = "@gre@";
                else
                if(super.anIntArray626[j1] > 0)
                    s = "@yel@";
                else
                    s = "@red@";
                aClass4_925.method167(anInt926, j1, s + Class15.method363(super.aLongArray625[j1]) + "~439~@whi@Remove         WWWWWWWWWW");
            }

        }
        if(anInt927 == 1)
        {
            for(int k1 = 0; k1 < super.anInt627; k1++)
                aClass4_925.method167(anInt926, k1, "@yel@" + Class15.method363(super.aLongArray628[k1]) + "~439~@whi@Remove         WWWWWWWWWW");

        }
        aClass4_925.method142();
        if(anInt927 == 0)
        {
            int l1 = aClass4_925.method174(anInt926);
            if(l1 >= 0 && super.mouseX < 489)
            {
                if(super.mouseX > 429)
                    aClass6_Sub1_724.FloatText("Click to remove " + Class15.method363(super.aLongArray625[l1]), j + c / 2, k + 35, 1, 0xffffff);
                else
                if(super.anIntArray626[l1] == 99)
                    aClass6_Sub1_724.FloatText("Click to message " + Class15.method363(super.aLongArray625[l1]), j + c / 2, k + 35, 1, 0xffffff);
                else
                if(super.anIntArray626[l1] > 0)
                    aClass6_Sub1_724.FloatText(Class15.method363(super.aLongArray625[l1]) + " is on world " + super.anIntArray626[l1], j + c / 2, k + 35, 1, 0xffffff);
                else
                    aClass6_Sub1_724.FloatText(Class15.method363(super.aLongArray625[l1]) + " is offline", j + c / 2, k + 35, 1, 0xffffff);
            } else
            {
                aClass6_Sub1_724.FloatText("Click a name to send a message", j + c / 2, k + 35, 1, 0xffffff);
            }
            int l2;
            if(super.mouseX > j && super.mouseX < j + c && super.mouseY > (k + c1) - 16 && super.mouseY < k + c1)
                l2 = 0xffff00;
            else
                l2 = 0xffffff;
            aClass6_Sub1_724.FloatText("Click here to add a friend", j + c / 2, (k + c1) - 3, 1, l2);
        }
        if(anInt927 == 1)
        {
            int i2 = aClass4_925.method174(anInt926);
            if(i2 >= 0 && super.mouseX < 489 && super.mouseX > 429)
            {
                if(super.mouseX > 429)
                    aClass6_Sub1_724.FloatText("Click to remove " + Class15.method363(super.aLongArray628[i2]), j + c / 2, k + 35, 1, 0xffffff);
            } else
            {
                aClass6_Sub1_724.FloatText("Blocking messages from:", j + c / 2, k + 35, 1, 0xffffff);
            }
            int i3;
            if(super.mouseX > j && super.mouseX < j + c && super.mouseY > (k + c1) - 16 && super.mouseY < k + c1)
                i3 = 0xffff00;
            else
                i3 = 0xffffff;
            aClass6_Sub1_724.FloatText("Click here to add a name", j + c / 2, (k + c1) - 3, 1, i3);
        }
        if(!flag)
            return;
        j = super.mouseX - (((Class6) (aClass6_Sub1_724)).anInt311 - 199);
        k = super.mouseY - 36;
        if(j >= 0 && k >= 0 && j < 196 && k < 182)
        {
            aClass4_925.method139(j + (((Class6) (aClass6_Sub1_724)).anInt311 - 199), k + 36, super.anInt36, super.anInt35);
            if(k <= 24 && mouseClick == 1)
                if(j < 98 && anInt927 == 1)
                {
                    anInt927 = 0;
                    aClass4_925.method166(anInt926);
                } else
                if(j > 98 && anInt927 == 0)
                {
                    anInt927 = 1;
                    aClass4_925.method166(anInt926);
                }
            if(mouseClick == 1 && anInt927 == 0)
            {
                int j2 = aClass4_925.method174(anInt926);
                if(j2 >= 0 && super.mouseX < 489)
                    if(super.mouseX > 429)
                        method32(super.aLongArray625[j2]);
                    else
                    if(super.anIntArray626[j2] != 0)
                    {
                        anInt931 = 2;
                        aLong928 = super.aLongArray625[j2];
                        super.aString42 = "";
                        super.aString43 = "";
                    }
            }
            if(mouseClick == 1 && anInt927 == 1)
            {
                int k2 = aClass4_925.method174(anInt926);
                if(k2 >= 0 && super.mouseX < 489 && super.mouseX > 429)
                    method30(super.aLongArray628[k2]);
            }
            if(k > 166 && mouseClick == 1 && anInt927 == 0)
            {
                anInt931 = 1;
                super.aString40 = "";
                super.aString41 = "";
            }
            if(k > 166 && mouseClick == 1 && anInt927 == 1)
            {
                anInt931 = 3;
                super.aString40 = "";
                super.aString41 = "";
            }
            mouseClick = 0;
        }
    }

    public void method81()
    {
        int i = Class1.anInt144;
        char c = '\u0198';
        char c1 = '\u014E';
        if(anInt812 > 0 && anInt889 <= 48)
            anInt812 = 0;
        if(anInt812 > 1 && anInt889 <= 96)
            anInt812 = 1;
        if(anInt812 > 2 && anInt889 <= 144)
            anInt812 = 2;
        if(bankSlots >= anInt889 || bankSlots < 0)
            bankSlots = -1;
        if(bankSlots != -1 && bankItemID[bankSlots] != anInt835)
        {
            bankSlots = -1;
            anInt835 = -2;
        }
        if(mouseClick != 0)
        {
            mouseClick = 0;
            int j = super.mouseX - (256 - c / 2);
            int l = super.mouseY - (170 - c1 / 2);
            if(j >= 0 && l >= 12 && j < 408 && l < 280)
            {
                int j1 = anInt812 * 48;
                for(int l1 = 0; l1 < 6; l1++)
                {
                    for(int k2 = 0; k2 < 8; k2++)
                    {
                        int i4 = 7 + k2 * 49;
                        int k4 = 28 + l1 * 34;
                        if(j > i4 && j < i4 + 49 && l > k4 && l < k4 + 34 && j1 < anInt889 && bankItemID[j1] != -1)
                        {
                            anInt835 = bankItemID[j1];
                            bankSlots = j1;
                        }
                        j1++;
                    }

                }

                j = 256 - c / 2;
                l = 170 - c1 / 2;
                int i2;
                if(bankSlots < 0)
                    i2 = -1;
                else
                    i2 = bankItemID[bankSlots];
                if(i2 != -1)
                {
                    int l2 = bankItemCount[bankSlots];
                    if(Class1.anIntArray55[i2] == 1 && l2 > 1)
                        l2 = 1;
                    if(l2 >= 1 && super.mouseX >= j + 190 && super.mouseY >= l + 238 && super.mouseX < j + 220 && super.mouseY <= l + 249)
                    {
                        withdrawAllID = i2;
                        withdrawthread = new withdrawallbyid();
                        System.out.println("WithdrawAll(" + i2 + ")");
                    }
                    if(l2 >= 1 && super.mouseX >= j + 220 && super.mouseY >= l + 238 && super.mouseX < j + 250 && super.mouseY <= l + 249)
                    {
                        super.packets.packetID(83);
                        super.packets.variables343(i2);
                        super.packets.variables343(1);
                        super.packets.sendpacket();
                        System.out.println("Withdraw(" + i2 + "," + "1)");
                    }
                    if(l2 >= 5 && super.mouseX >= j + 250 && super.mouseY >= l + 238 && super.mouseX < j + 280 && super.mouseY <= l + 249)
                    {
                        super.packets.packetID(83);
                        super.packets.variables343(i2);
                        super.packets.variables343(5);
                        super.packets.sendpacket();
                        System.out.println("Withdraw(" + i2 + "," + "5)");
                    }
                    if(l2 >= 25 && super.mouseX >= j + 280 && super.mouseY >= l + 238 && super.mouseX < j + 305 && super.mouseY <= l + 249)
                    {
                        super.packets.packetID(83);
                        super.packets.variables343(i2);
                        super.packets.variables343(25);
                        super.packets.sendpacket();
                        System.out.println("Withdraw(" + i2 + "," + "25)");
                    }
                    if(l2 >= 100 && super.mouseX >= j + 305 && super.mouseY >= l + 238 && super.mouseX < j + 335 && super.mouseY <= l + 249)
                    {
                        super.packets.packetID(83);
                        super.packets.variables343(i2);
                        super.packets.variables343(100);
                        super.packets.sendpacket();
                        System.out.println("Withdraw(" + i2 + "," + "100)");
                    }
                    if(l2 >= 500 && super.mouseX >= j + 335 && super.mouseY >= l + 238 && super.mouseX < j + 368 && super.mouseY <= l + 249)
                    {
                        super.packets.packetID(83);
                        super.packets.variables343(i2);
                        super.packets.variables343(500);
                        super.packets.sendpacket();
                        System.out.println("Withdraw(" + i2 + "," + "500)");
                    }
                    if(l2 >= 2500 && super.mouseX >= j + 370 && super.mouseY >= l + 238 && super.mouseX < j + 400 && super.mouseY <= l + 249)
                    {
                        super.packets.packetID(83);
                        super.packets.variables343(i2);
                        super.packets.variables343(2500);
                        super.packets.sendpacket();
                        System.out.println("Withdraw(" + i2 + "," + "2500)");
                    }
                    if(inventoryCount(i2) >= 1 && super.mouseX >= j + 190 && super.mouseY >= l + 263 && super.mouseX < j + 220 && super.mouseY <= l + 274)
                    {
                        depositAllID = i2;
                        depositthread2 = new depositallbyid();
                        System.out.println("DepositAll(" + i2 + ")");
                    }
                    if(inventoryCount(i2) >= 1 && super.mouseX >= j + 220 && super.mouseY >= l + 263 && super.mouseX < j + 250 && super.mouseY <= l + 274)
                    {
                        super.packets.packetID(145);
                        super.packets.variables343(i2);
                        super.packets.variables343(1);
                        super.packets.sendpacket();
                        System.out.println("Deposit(" + i2 + "," + "1)");
                    }
                    if(inventoryCount(i2) >= 5 && super.mouseX >= j + 250 && super.mouseY >= l + 263 && super.mouseX < j + 280 && super.mouseY <= l + 274)
                    {
                        super.packets.packetID(145);
                        super.packets.variables343(i2);
                        super.packets.variables343(5);
                        super.packets.sendpacket();
                        System.out.println("Deposit(" + i2 + "," + "5)");
                    }
                    if(inventoryCount(i2) >= 25 && super.mouseX >= j + 280 && super.mouseY >= l + 263 && super.mouseX < j + 305 && super.mouseY <= l + 274)
                    {
                        super.packets.packetID(145);
                        super.packets.variables343(i2);
                        super.packets.variables343(25);
                        super.packets.sendpacket();
                        System.out.println("Deposit(" + i2 + "," + "25)");
                    }
                    if(inventoryCount(i2) >= 100 && super.mouseX >= j + 305 && super.mouseY >= l + 263 && super.mouseX < j + 335 && super.mouseY <= l + 274)
                    {
                        super.packets.packetID(145);
                        super.packets.variables343(i2);
                        super.packets.variables343(100);
                        super.packets.sendpacket();
                        System.out.println("Deposit(" + i2 + "," + "100)");
                    }
                    if(inventoryCount(i2) >= 500 && super.mouseX >= j + 335 && super.mouseY >= l + 263 && super.mouseX < j + 368 && super.mouseY <= l + 274)
                    {
                        super.packets.packetID(145);
                        super.packets.variables343(i2);
                        super.packets.variables343(500);
                        super.packets.sendpacket();
                        System.out.println("Deposit(" + i2 + "," + "500)");
                    }
                    if(inventoryCount(i2) >= 2500 && super.mouseX >= j + 370 && super.mouseY >= l + 263 && super.mouseX < j + 400 && super.mouseY <= l + 274)
                    {
                        super.packets.packetID(145);
                        super.packets.variables343(i2);
                        super.packets.variables343(2500);
                        super.packets.sendpacket();
                        System.out.println("Deposit(" + i2 + "," + "2500)");
                    }
                }
            } else
            if(anInt889 > 48 && j >= 50 && j <= 115 && l <= 12)
                anInt812 = 0;
            else
            if(anInt889 > 48 && j >= 115 && j <= 180 && l <= 12)
                anInt812 = 1;
            else
            if(anInt889 > 96 && j >= 180 && j <= 245 && l <= 12)
                anInt812 = 2;
            else
            if(anInt889 > 144 && j >= 245 && j <= 310 && l <= 12)
            {
                anInt812 = 3;
            } else
            {
                super.packets.packetID(50);
                super.packets.sendpacket();
                aBoolean879 = false;
                System.out.println("CloseBank()");
                return;
            }
        }
        int k = 256 - c / 2;
        int i1 = 170 - c1 / 2;
        aClass6_Sub1_724.method216(k, i1, 408, 12, 192);
        int k1 = 0x989898;
        aClass6_Sub1_724.method214(k, i1 + 12, 408, 17, k1, 160);
        aClass6_Sub1_724.method214(k, i1 + 29, 8, 204, k1, 160);
        aClass6_Sub1_724.method214(k + 399, i1 + 29, 9, 204, k1, 160);
        aClass6_Sub1_724.method214(k, i1 + 233, 408, 47, k1, 160);
        aClass6_Sub1_724.method257("Bank", k + 1, i1 + 10, 1, 0xffffff);
        int j2 = 50;
        if(anInt889 > 48)
        {
            int i3 = 0xffffff;
            if(anInt812 == 0)
                i3 = 0xff0000;
            else
            if(super.mouseX > k + j2 && super.mouseY >= i1 && super.mouseX < k + j2 + 65 && super.mouseY < i1 + 12)
                i3 = 0xffff00;
            aClass6_Sub1_724.method257("<page 1>", k + j2, i1 + 10, 1, i3);
            j2 += 65;
            i3 = 0xffffff;
            if(anInt812 == 1)
                i3 = 0xff0000;
            else
            if(super.mouseX > k + j2 && super.mouseY >= i1 && super.mouseX < k + j2 + 65 && super.mouseY < i1 + 12)
                i3 = 0xffff00;
            aClass6_Sub1_724.method257("<page 2>", k + j2, i1 + 10, 1, i3);
            j2 += 65;
        }
        if(anInt889 > 96)
        {
            int j3 = 0xffffff;
            if(anInt812 == 2)
                j3 = 0xff0000;
            else
            if(super.mouseX > k + j2 && super.mouseY >= i1 && super.mouseX < k + j2 + 65 && super.mouseY < i1 + 12)
                j3 = 0xffff00;
            aClass6_Sub1_724.method257("<page 3>", k + j2, i1 + 10, 1, j3);
            j2 += 65;
        }
        if(anInt889 > 144)
        {
            int k3 = 0xffffff;
            if(anInt812 == 3)
                k3 = 0xff0000;
            else
            if(super.mouseX > k + j2 && super.mouseY >= i1 && super.mouseX < k + j2 + 65 && super.mouseY < i1 + 12)
                k3 = 0xffff00;
            aClass6_Sub1_724.method257("<page 4>", k + j2, i1 + 10, 1, k3);
            j2 += 65;
        }
        int l3 = 0xffffff;
        if(super.mouseX > k + 320 && super.mouseY >= i1 && super.mouseX < k + 408 && super.mouseY < i1 + 12)
            l3 = 0xff0000;
        aClass6_Sub1_724.method254("Close window", k + 406, i1 + 10, 1, l3);
        aClass6_Sub1_724.method257("Number in bank in green", k + 7, i1 + 24, 1, 65280);
        aClass6_Sub1_724.method257("Number held in blue", k + 289, i1 + 24, 1, 65535);
        int j4 = 0xd0d0d0;
        int l4 = anInt812 * 48;
        for(int i5 = 0; i5 < 6; i5++)
        {
            for(int k5 = 0; k5 < 8; k5++)
            {
                int i6 = k + 7 + k5 * 49;
                int l6 = i1 + 28 + i5 * 34;
                if(bankSlots == l4)
                    aClass6_Sub1_724.method214(i6, l6, 49, 34, 0xff0000, 160);
                else
                    aClass6_Sub1_724.method214(i6, l6, 49, 34, j4, 160);
                aClass6_Sub1_724.method217(i6, l6, 50, 35, 0);
                if(l4 < anInt889 && bankItemID[l4] != -1)
                {
                    aClass6_Sub1_724.method247(i6, l6, 48, 32, anInt950 + Class1.anIntArray53[bankItemID[l4]], Class1.anIntArray58[bankItemID[l4]], 0, 0, false);
                    aClass6_Sub1_724.method257(String.valueOf(bankItemCount[l4]), i6 + 1, l6 + 10, 1, 65280);
                    aClass6_Sub1_724.method254(String.valueOf(inventoryCount(bankItemID[l4])), i6 + 47, l6 + 29, 1, 65535);
                }
                l4++;
            }

        }

        aClass6_Sub1_724.method218(k + 5, i1 + 256, 398, 0);
        if(bankSlots == -1)
        {
            aClass6_Sub1_724.FloatText("Select an object to withdraw or deposit", k + 204, i1 + 248, 3, 0xffff00);
            return;
        }
        int j5;
        if(bankSlots < 0)
            j5 = -1;
        else
            j5 = bankItemID[bankSlots];
        if(j5 != -1)
        {
            int l5 = bankItemCount[bankSlots];
            if(Class1.anIntArray55[j5] == 1 && l5 > 1)
                l5 = 1;
            if(l5 > 0)
            {
                aClass6_Sub1_724.method257("Withdraw " + Class1.itemNameArray[j5], k + 2, i1 + 248, 1, 0xffffff);
                int j6 = 0xffffff;
                if(super.mouseX >= k + 190 && super.mouseY >= i1 + 238 && super.mouseX < k + 220 && super.mouseY <= i1 + 249)
                    j6 = 0xff0000;
                aClass6_Sub1_724.method257("ALL", k + 192, i1 + 248, 1, j6);
                int i7 = 0xffffff;
                if(super.mouseX >= k + 220 && super.mouseY >= i1 + 238 && super.mouseX < k + 250 && super.mouseY <= i1 + 249)
                    i7 = 0xff0000;
                aClass6_Sub1_724.method257("One", k + 222, i1 + 248, 1, i7);
                if(l5 >= 5)
                {
                    int k7 = 0xffffff;
                    if(super.mouseX >= k + 250 && super.mouseY >= i1 + 238 && super.mouseX < k + 280 && super.mouseY <= i1 + 249)
                        k7 = 0xff0000;
                    aClass6_Sub1_724.method257("Five", k + 252, i1 + 248, 1, k7);
                }
                if(l5 >= 25)
                {
                    int l7 = 0xffffff;
                    if(super.mouseX >= k + 280 && super.mouseY >= i1 + 238 && super.mouseX < k + 305 && super.mouseY <= i1 + 249)
                        l7 = 0xff0000;
                    aClass6_Sub1_724.method257("25", k + 282, i1 + 248, 1, l7);
                }
                if(l5 >= 100)
                {
                    int i8 = 0xffffff;
                    if(super.mouseX >= k + 305 && super.mouseY >= i1 + 238 && super.mouseX < k + 335 && super.mouseY <= i1 + 249)
                        i8 = 0xff0000;
                    aClass6_Sub1_724.method257("100", k + 307, i1 + 248, 1, i8);
                }
                if(l5 >= 500)
                {
                    int j8 = 0xffffff;
                    if(super.mouseX >= k + 335 && super.mouseY >= i1 + 238 && super.mouseX < k + 368 && super.mouseY <= i1 + 249)
                        j8 = 0xff0000;
                    aClass6_Sub1_724.method257("500", k + 337, i1 + 248, 1, j8);
                }
                if(l5 >= 2500)
                {
                    int k8 = 0xffffff;
                    if(super.mouseX >= k + 370 && super.mouseY >= i1 + 238 && super.mouseX < k + 400 && super.mouseY <= i1 + 249)
                        k8 = 0xff0000;
                    aClass6_Sub1_724.method257("2500", k + 370, i1 + 248, 1, k8);
                }
            }
            if(inventoryCount(j5) > 0)
            {
                aClass6_Sub1_724.method257("Deposit " + Class1.itemNameArray[j5], k + 2, i1 + 273, 1, 0xffffff);
                int k6 = 0xffffff;
                if(super.mouseX >= k + 190 && super.mouseY >= i1 + 263 && super.mouseX < k + 220 && super.mouseY <= i1 + 274)
                    k6 = 0xff0000;
                aClass6_Sub1_724.method257("ALL", k + 192, i1 + 273, 1, k6);
                int j7 = 0xffffff;
                if(super.mouseX >= k + 220 && super.mouseY >= i1 + 263 && super.mouseX < k + 250 && super.mouseY <= i1 + 274)
                    j7 = 0xff0000;
                aClass6_Sub1_724.method257("One", k + 222, i1 + 273, 1, j7);
                if(inventoryCount(j5) >= 5)
                {
                    int l8 = 0xffffff;
                    if(super.mouseX >= k + 250 && super.mouseY >= i1 + 263 && super.mouseX < k + 280 && super.mouseY <= i1 + 274)
                        l8 = 0xff0000;
                    aClass6_Sub1_724.method257("Five", k + 252, i1 + 273, 1, l8);
                }
                if(inventoryCount(j5) >= 25)
                {
                    int i9 = 0xffffff;
                    if(super.mouseX >= k + 280 && super.mouseY >= i1 + 263 && super.mouseX < k + 305 && super.mouseY <= i1 + 274)
                        i9 = 0xff0000;
                    aClass6_Sub1_724.method257("25", k + 282, i1 + 273, 1, i9);
                }
                if(inventoryCount(j5) >= 100)
                {
                    int j9 = 0xffffff;
                    if(super.mouseX >= k + 305 && super.mouseY >= i1 + 263 && super.mouseX < k + 335 && super.mouseY <= i1 + 274)
                        j9 = 0xff0000;
                    aClass6_Sub1_724.method257("100", k + 307, i1 + 273, 1, j9);
                }
                if(inventoryCount(j5) >= 500)
                {
                    int k9 = 0xffffff;
                    if(super.mouseX >= k + 335 && super.mouseY >= i1 + 263 && super.mouseX < k + 368 && super.mouseY <= i1 + 274)
                        k9 = 0xff0000;
                    aClass6_Sub1_724.method257("500", k + 337, i1 + 273, 1, k9);
                }
                if(inventoryCount(j5) >= 2500)
                {
                    int l9 = 0xffffff;
                    if(super.mouseX >= k + 370 && super.mouseY >= i1 + 263 && super.mouseX < k + 400 && super.mouseY <= i1 + 274)
                        l9 = 0xff0000;
                    aClass6_Sub1_724.method257("2500", k + 370, i1 + 273, 1, l9);
                }
            }
        }
    }

    public void ConnectionStuff()
    {
        int i = Class1.anInt144;
        if(anInt749 > 1)
            anInt749--;
        method25();
        if(anInt746 > 0)
            anInt746--;
        if(super.anInt12 > 4500 && anInt869 == 0 && anInt746 == 0 && !macroOn)
        {
            if(super.min5 == 0)
            {
                takeat(posX(), posY() - 1, 0);
                super.min5 = 1;
                return;
            }
            if(super.min5 == 1)
            {
                takeat(posX(), posY() + 1, 0);
                super.min5 = 0;
                return;
            }
        }
        if(myPlayer.status == 8 || myPlayer.status == 9)
            anInt869 = 500;
        if(anInt869 > 0)
            anInt869--;
        if(aBoolean992)
        {
            method120();
            return;
        }
        for(int j = 0; j < PlayerCount; j++)
        {
            Class2 class2 = PlayerArray[j];
            int k3 = (class2.anInt156 + 1) % 10;
            if(class2.anInt155 != k3)
            {
                int j4 = -1;
                int l4 = class2.anInt155;
                int j5;
                if(l4 < k3)
                    j5 = k3 - l4;
                else
                    j5 = (10 + k3) - l4;
                int l5 = 4;
                if(j5 > 2)
                    l5 = (j5 - 1) * 4;
                if(class2.anIntArray157[l4] - class2.posX > anInt946 * 3 || class2.anIntArray158[l4] - class2.posY > anInt946 * 3 || class2.anIntArray157[l4] - class2.posX < -anInt946 * 3 || class2.anIntArray158[l4] - class2.posY < -anInt946 * 3 || j5 > 8)
                {
                    class2.posX = class2.anIntArray157[l4];
                    class2.posY = class2.anIntArray158[l4];
                } else
                {
                    if(class2.posX < class2.anIntArray157[l4])
                    {
                        class2.posX += l5;
                        class2.anInt152++;
                        j4 = 2;
                    } else
                    if(class2.posX > class2.anIntArray157[l4])
                    {
                        class2.posX -= l5;
                        class2.anInt152++;
                        j4 = 6;
                    }
                    if(class2.posX - class2.anIntArray157[l4] < l5 && class2.posX - class2.anIntArray157[l4] > -l5)
                        class2.posX = class2.anIntArray157[l4];
                    if(class2.posY < class2.anIntArray158[l4])
                    {
                        class2.posY += l5;
                        class2.anInt152++;
                        if(j4 == -1)
                            j4 = 4;
                        else
                        if(j4 == 2)
                            j4 = 3;
                        else
                            j4 = 5;
                    } else
                    if(class2.posY > class2.anIntArray158[l4])
                    {
                        class2.posY -= l5;
                        class2.anInt152++;
                        if(j4 == -1)
                            j4 = 0;
                        else
                        if(j4 == 2)
                            j4 = 1;
                        else
                            j4 = 7;
                    }
                    if(class2.posY - class2.anIntArray158[l4] < l5 && class2.posY - class2.anIntArray158[l4] > -l5)
                        class2.posY = class2.anIntArray158[l4];
                }
                if(j4 != -1)
                    class2.status = j4;
                if(class2.posX == class2.anIntArray157[l4] && class2.posY == class2.anIntArray158[l4])
                    class2.anInt155 = (l4 + 1) % 10;
            } else
            {
                class2.status = class2.anInt154;
            }
            if(class2.anInt161 > 0)
                class2.anInt161--;
            if(class2.anInt163 > 0)
                class2.anInt163--;
            if(class2.anInt167 > 0)
                class2.anInt167--;
            if(anInt993 <= 0)
                continue;
            anInt993--;
            if(anInt993 == 0)
                chatText("@red@You have died, don't blame me... its your own fault", 3);
            if(anInt993 == 0)
                chatText("@red@You retain your skills, although you lose your objects", 3);
        }

        for(int k = 0; k < npccount; k++)
        {
            Class2 class2_1 = NPCArray[k];
            int l3 = (class2_1.anInt156 + 1) % 10;
            if(class2_1.anInt155 != l3)
            {
                int k4 = -1;
                int i5 = class2_1.anInt155;
                int k5;
                if(i5 < l3)
                    k5 = l3 - i5;
                else
                    k5 = (10 + l3) - i5;
                int i6 = 4;
                if(k5 > 2)
                    i6 = (k5 - 1) * 4;
                if(class2_1.anIntArray157[i5] - class2_1.posX > anInt946 * 3 || class2_1.anIntArray158[i5] - class2_1.posY > anInt946 * 3 || class2_1.anIntArray157[i5] - class2_1.posX < -anInt946 * 3 || class2_1.anIntArray158[i5] - class2_1.posY < -anInt946 * 3 || k5 > 8)
                {
                    class2_1.posX = class2_1.anIntArray157[i5];
                    class2_1.posY = class2_1.anIntArray158[i5];
                } else
                {
                    if(class2_1.posX < class2_1.anIntArray157[i5])
                    {
                        class2_1.posX += i6;
                        class2_1.anInt152++;
                        k4 = 2;
                    } else
                    if(class2_1.posX > class2_1.anIntArray157[i5])
                    {
                        class2_1.posX -= i6;
                        class2_1.anInt152++;
                        k4 = 6;
                    }
                    if(class2_1.posX - class2_1.anIntArray157[i5] < i6 && class2_1.posX - class2_1.anIntArray157[i5] > -i6)
                        class2_1.posX = class2_1.anIntArray157[i5];
                    if(class2_1.posY < class2_1.anIntArray158[i5])
                    {
                        class2_1.posY += i6;
                        class2_1.anInt152++;
                        if(k4 == -1)
                            k4 = 4;
                        else
                        if(k4 == 2)
                            k4 = 3;
                        else
                            k4 = 5;
                    } else
                    if(class2_1.posY > class2_1.anIntArray158[i5])
                    {
                        class2_1.posY -= i6;
                        class2_1.anInt152++;
                        if(k4 == -1)
                            k4 = 0;
                        else
                        if(k4 == 2)
                            k4 = 1;
                        else
                            k4 = 7;
                    }
                    if(class2_1.posY - class2_1.anIntArray158[i5] < i6 && class2_1.posY - class2_1.anIntArray158[i5] > -i6)
                        class2_1.posY = class2_1.anIntArray158[i5];
                }
                if(k4 != -1)
                    class2_1.status = k4;
                if(class2_1.posX == class2_1.anIntArray157[i5] && class2_1.posY == class2_1.anIntArray158[i5])
                    class2_1.anInt155 = (i5 + 1) % 10;
            } else
            {
                class2_1.status = class2_1.anInt154;
                if(class2_1.combatlvl == 43)
                    class2_1.anInt152++;
            }
            if(class2_1.anInt161 > 0)
                class2_1.anInt161--;
            if(class2_1.anInt163 > 0)
                class2_1.anInt163--;
            if(class2_1.anInt167 > 0)
                class2_1.anInt167--;
        }

        if(toolbar != 2)
        {
            if(Class6.anInt346 > 0)
                anInt884++;
            if(Class6.anInt347 > 0)
                anInt884 = 0;
            Class6.anInt346 = 0;
            Class6.anInt347 = 0;
        }
        for(int l = 0; l < PlayerCount; l++)
        {
            Class2 class2_2 = PlayerArray[l];
            if(class2_2.anInt176 > 0)
                class2_2.anInt176--;
        }

        if(aBoolean757)
        {
            if(anInt714 - myPlayer.posX < -500 || anInt714 - myPlayer.posX > 500 || anInt715 - myPlayer.posY < -500 || anInt715 - myPlayer.posY > 500)
            {
                anInt714 = myPlayer.posX;
                anInt715 = myPlayer.posY;
            }
        } else
        {
            if(anInt714 - myPlayer.posX < -500 || anInt714 - myPlayer.posX > 500 || anInt715 - myPlayer.posY < -500 || anInt715 - myPlayer.posY > 500)
            {
                anInt714 = myPlayer.posX;
                anInt715 = myPlayer.posY;
            }
            if(anInt714 != myPlayer.posX)
                anInt714 += (myPlayer.posX - anInt714) / (16 + (CameraZoom - 500) / 15);
            if(anInt715 != myPlayer.posY)
                anInt715 += (myPlayer.posY - anInt715) / (16 + (CameraZoom - 500) / 15);
            if(aBoolean675)
            {
                int i1 = anInt940 * 32;
                int k2 = i1 - mapangle;
                byte byte0 = 1;
                if(k2 != 0)
                {
                    anInt941++;
                    if(k2 > 128)
                    {
                        byte0 = -1;
                        k2 = 256 - k2;
                    } else
                    if(k2 > 0)
                        byte0 = 1;
                    else
                    if(k2 < -128)
                    {
                        byte0 = 1;
                        k2 = 256 + k2;
                    } else
                    if(k2 < 0)
                    {
                        byte0 = -1;
                        k2 = -k2;
                    }
                    mapangle += ((anInt941 * k2 + 255) / 256) * byte0;
                    mapangle &= 0xff;
                } else
                {
                    anInt941 = 0;
                }
            }
        }
        if(anInt884 > 20)
        {
            aBoolean880 = false;
            anInt884 = 0;
        }
        if(aBoolean870)
        {
            if(super.aString41.length() > 0)
                if(super.aString41.equalsIgnoreCase("::lostcon") && !aBoolean979)
                    super.packets.method329();
                else
                if(super.aString41.equalsIgnoreCase("::closecon") && !aBoolean979)
                {
                    method22();
                    loggedout = true;
                } else
                {
                    super.packets.packetID(60);
                    super.packets.method347(super.aString41);
                    if(!aBoolean880)
                    {
                        super.packets.variables348(0);
                        aBoolean880 = true;
                    }
                    super.packets.sendpacket();
                    super.aString40 = "";
                    super.aString41 = "";
                    aString846 = "Please wait...";
                }
            if(super.anInt36 == 1 && super.mouseY > 275 && super.mouseY < 310 && super.mouseX > 56 && super.mouseX < 456)
            {
                super.packets.packetID(60);
                super.packets.method347("-null-");
                if(!aBoolean880)
                {
                    super.packets.variables348(0);
                    aBoolean880 = true;
                }
                super.packets.sendpacket();
                super.aString40 = "";
                super.aString41 = "";
                aString846 = "Please wait...";
            }
            super.anInt36 = 0;
            return;
        }
        if(super.mouseY > anInt677 - 4)
        {
            if(super.mouseX > 15 && super.mouseX < 96 && super.anInt36 == 1)
                anInt780 = 0;
            if(super.mouseX > 110 && super.mouseX < 194 && super.anInt36 == 1)
            {
                anInt780 = 1;
                aClass4_775.anIntArray187[anInt776] = 0xf423f;
            }
            if(super.mouseX > 215 && super.mouseX < 295 && super.anInt36 == 1)
            {
                anInt780 = 2;
                aClass4_775.anIntArray187[anInt778] = 0xf423f;
            }
            if(super.mouseX > 315 && super.mouseX < 395 && super.anInt36 == 1)
            {
                anInt780 = 3;
                aClass4_775.anIntArray187[anInt779] = 0xf423f;
            }
            if(super.mouseX > 417 && super.mouseX < 497 && super.anInt36 == 1)
                chatText2("@bot@WasteDBoT Chat Clicked - Not finished (-.-)");
            super.anInt36 = 0;
            super.anInt35 = 0;
        }
        aClass4_775.method139(super.mouseX, super.mouseY, super.anInt36, super.anInt35);
        if(anInt780 > 0 && super.mouseX >= 494 && super.mouseY >= anInt677 - 66)
            super.anInt36 = 0;
        if(aClass4_775.method140(anInt777))
        {
            String s = aClass4_775.method170(anInt777);
            aClass4_775.method169(anInt777, "");
            if(s.startsWith("::"))
            {
                if(s.equalsIgnoreCase("::closecon") && !aBoolean979)
                    super.packets.method329();
                else
                if(s.equalsIgnoreCase("::logout") && !aBoolean979)
                {
                    method22();
                    loggedout = true;
                } else
                if(s.equalsIgnoreCase("::lostcon") && !aBoolean979)
                    method23();
                else
                    method35(s.substring(2));
            } else
            {
                int l2 = Class17.method400(s);
                method34(Class17.aByteArray569, l2);
                s = Class17.method399(Class17.aByteArray569, 0, l2);
                s = Class16.ChatFilter(s);
                myPlayer.anInt161 = 150;
                myPlayer.lastChatMessage = s;
                chatText("@yel@[" + myPlayer.name + "] " + s, 2);
                myChat = "MYCHAT " + myPlayer.name + ":" + s;
                XClient.sendPacketIG(myChat);
            }
        }
        if(anInt780 == 0)
        {
            for(int j1 = 0; j1 < 5; j1++)
                if(anIntArray935[j1] > 0)
                    anIntArray935[j1]--;

        }
        if(anInt993 != 0)
            super.anInt36 = 0;
        if(aBoolean856 || aBoolean917)
        {
            if(super.anInt35 != 0)
                anInt818++;
            else
                anInt818 = 0;
            if(anInt818 > 600)
                anInt819 += 5000;
            else
            if(anInt818 > 450)
                anInt819 += 500;
            else
            if(anInt818 > 300)
                anInt819 += 50;
            else
            if(anInt818 > 150)
                anInt819 += 5;
            else
            if(anInt818 > 50)
                anInt819++;
            else
            if(anInt818 > 20 && (anInt818 & 5) == 0)
                anInt819++;
        } else
        {
            anInt818 = 0;
            anInt819 = 0;
        }
        if(super.anInt36 == 1)
            mouseClick = 1;
        else
        if(super.anInt36 == 2)
            mouseClick = 2;
        aClass10_739.method277(super.mouseX, super.mouseY);
        super.anInt36 = 0;
        if(aBoolean675)
        {
            if(anInt941 == 0 || aBoolean757)
            {
                if(super.aBoolean26)
                {
                    anInt940 = anInt940 + 1 & 7;
                    super.aBoolean26 = false;
                    if(!aBoolean789)
                    {
                        if((anInt940 & 1) == 0)
                            anInt940 = anInt940 + 1 & 7;
                        for(int k1 = 0; k1 < 8 && !FileLoad2(anInt940); k1++)
                            anInt940 = anInt940 + 1 & 7;

                    }
                }
                if(super.aBoolean27)
                {
                    anInt940 = anInt940 + 7 & 7;
                    super.aBoolean27 = false;
                    if(!aBoolean789)
                    {
                        if((anInt940 & 1) == 0)
                            anInt940 = anInt940 + 7 & 7;
                        for(int l1 = 0; l1 < 8 && !FileLoad2(anInt940); l1++)
                            anInt940 = anInt940 + 7 & 7;

                    }
                }
            }
        } else
        if(super.aBoolean26)
            mapangle = mapangle + 2 & 0xff;
        else
        if(super.aBoolean27)
            mapangle = mapangle - 2 & 0xff;
        if(pgdowndown && pgupdown)
            xrotate += 3;
        if(pgdowndown)
            xrotate += 3;
        if(pgupdown)
            xrotate -= 3;
        if(arrowkeydown && arrowkeyup && !super.caps && CameraZoom < 4500)
            CameraZoom += 10;
        if(arrowkeydown && !super.caps && CameraZoom < 4500)
            CameraZoom += 10;
        if(arrowkeyup && !super.caps && CameraZoom > 150)
            CameraZoom -= 10;
        if(super.peenor)
            focusx += 20;
        if(super.phateshouldlookherecoshehasnopeenorandwillneverseethisunlessitellhimto)
            focusx -= 20;
        if(arrowkeydown && super.caps)
            focusy += 20;
        if(arrowkeyup && super.caps)
            focusy -= 20;
        if(arrowkeyup && arrowkeydown && super.caps)
            focusy -= 10;
        if(super.peenor && super.phateshouldlookherecoshehasnopeenorandwillneverseethisunlessitellhimto)
            focusx -= 10;
        if(homedown)
            maphax += 10;
        if(enddown)
            maphax -= 10;
        if(homedown && enddown)
            maphax -= 5;
        if(anInt670 > 0)
            anInt670--;
        else
        if(anInt670 < 0)
            anInt670++;
        aClass10_739.method307(17);
        anInt964++;
        if(anInt964 > 5)
        {
            anInt964 = 0;
            anInt839 = (anInt839 + 1) % 3;
            anInt840 = (anInt840 + 1) % 4;
            anInt841 = (anInt841 + 1) % 5;
        }
        for(int i2 = 0; i2 < objCount; i2++)
        {
            int i3 = objXArray[i2];
            int i4 = objYArray[i2];
            if(i3 >= 0 && i4 >= 0 && i3 < 96 && i4 < 96 && objID[i2] == 74)
                aClass5Array814[i2].method189(1, 0, 0);
        }

        for(int j2 = 0; j2 < anInt833; j2++)
        {
            anIntArray972[j2]++;
            if(anIntArray972[j2] <= 50)
                continue;
            anInt833--;
            for(int j3 = j2; j3 < anInt833; j3++)
            {
                anIntArray881[j3] = anIntArray881[j3 + 1];
                anIntArray934[j3] = anIntArray934[j3 + 1];
                anIntArray972[j3] = anIntArray972[j3 + 1];
                anIntArray730[j3] = anIntArray730[j3 + 1];
            }

        }

    }

    public boolean method83(int i, int j, int k, int l, int i1, int j1, boolean flag, 
            boolean flag1)
    {
        int k1 = Class1.anInt144;
        int l1 = aClass19_883.method411(i, j, k, l, i1, j1, anIntArray962, anIntArray963, flag);
        if(l1 == -1)
            if(flag1)
            {
                l1 = 1;
                anIntArray962[0] = k;
                anIntArray963[0] = l;
            } else
            {
                return false;
            }
        l1--;
        i = anIntArray962[l1];
        j = anIntArray963[l1];
        l1--;
        if(flag1)
            super.packets.packetID(230);
        else
            super.packets.packetID(21);
        super.packets.variables343(i + myPlayerX1);
        super.packets.variables343(j + myPlayerY1);
        if(flag1 && l1 == -1 && (i + myPlayerX1) % 5 == 0)
            l1 = 0;
        for(int i2 = l1; i2 >= 0 && i2 > l1 - 25; i2--)
        {
            super.packets.variables348(anIntArray962[i2] - i);
            super.packets.variables348(anIntArray963[i2] - j);
        }

        super.packets.sendpacket();
        anInt670 = -24;
        anInt671 = super.mouseX;
        anInt672 = super.mouseY;
        return true;
    }

    public boolean method84(int i, int j, int k, int l, int i1, int j1, boolean flag, 
            boolean flag1)
    {
        int k1 = Class1.anInt144;
        int l1 = aClass19_883.method411(i, j, k, l, i1, j1, anIntArray962, anIntArray963, flag);
        if(l1 == -1)
            return false;
        l1--;
        i = anIntArray962[l1];
        j = anIntArray963[l1];
        l1--;
        if(flag1)
            super.packets.packetID(230);
        else
            super.packets.packetID(21);
        super.packets.variables343(i + myPlayerX1);
        super.packets.variables343(j + myPlayerY1);
        if(flag1 && l1 == -1 && (i + myPlayerX1) % 5 == 0)
            l1 = 0;
        for(int i2 = l1; i2 >= 0 && i2 > l1 - 25; i2--)
        {
            super.packets.variables348(anIntArray962[i2] - i);
            super.packets.variables348(anIntArray963[i2] - j);
        }

        super.packets.sendpacket();
        anInt670 = -24;
        anInt671 = super.mouseX;
        anInt672 = super.mouseY;
        return true;
    }

    public void method85()
    {
        try
        {
            if(aClass6_Sub1_724 != null)
            {
                aClass6_Sub1_724.method224();
                aClass6_Sub1_724.anIntArray317 = null;
                aClass6_Sub1_724 = null;
            }
            if(aClass10_739 != null)
            {
                aClass10_739.method271();
                aClass10_739 = null;
            }
            aClass5Array994 = null;
            aClass5Array814 = null;
            aClass5Array781 = null;
            aClass2Array891 = null;
            PlayerArray = null;
            aClass2Array957 = null;
            NPCArray = null;
            myPlayer = null;
            if(aClass19_883 != null)
            {
                aClass19_883.aClass5Array600 = null;
                aClass19_883.aClass5ArrayArray605 = (Class5[][])null;
                aClass19_883.aClass5ArrayArray603 = (Class5[][])null;
                aClass19_883.aClass5_586 = null;
                aClass19_883 = null;
            }
            System.gc();
            return;
        }
        catch(Exception exception)
        {
            return;
        }
    }

    public void UnpackFiles()
    {
        int i = Class1.anInt144;
        byte abyte0[] = null;
        byte abyte1[] = null;
        abyte0 = UnPack("entity" + Class18.anInt579 + ".jag", "people and monsters", 30);
        if(abyte0 == null)
        {
            aBoolean922 = true;
            return;
        }
        abyte1 = Class15.method366("index.dat", 0, abyte0);
        byte abyte2[] = null;
        byte abyte3[] = null;
        if(members)
        {
            abyte2 = UnPack("entity" + Class18.anInt579 + ".mem", "member graphics", 45);
            if(abyte2 == null)
            {
                aBoolean922 = true;
                return;
            }
            abyte3 = Class15.method366("index.dat", 0, abyte2);
        }
        int j = 0;
        anInt942 = 0;
        anInt943 = anInt942;
label0:
        for(int k = 0; k < Class1.anInt123; k++)
        {
            String s = Class1.aStringArray77[k];
            for(int l = 0; l < k; l++)
                if(Class1.aStringArray77[l].equalsIgnoreCase(s))
                {
                    Class1.anIntArray87[k] = Class1.anIntArray87[l];
                    continue label0;
                }

            byte abyte4[] = Class15.method366(s + ".dat", 0, abyte0);
            byte abyte5[] = abyte1;
            if(abyte4 == null && members)
            {
                abyte4 = Class15.method366(s + ".dat", 0, abyte2);
                abyte5 = abyte3;
            }
            if(abyte4 != null)
            {
                aClass6_Sub1_724.method225(anInt943, abyte4, abyte5, 15);
                j += 15;
                if(Class1.anIntArray85[k] == 1)
                {
                    byte abyte6[] = Class15.method366(s + "a.dat", 0, abyte0);
                    byte abyte8[] = abyte1;
                    if(abyte6 == null && members)
                    {
                        abyte6 = Class15.method366(s + "a.dat", 0, abyte2);
                        abyte8 = abyte3;
                    }
                    aClass6_Sub1_724.method225(anInt943 + 15, abyte6, abyte8, 3);
                    j += 3;
                }
                if(Class1.anIntArray86[k] == 1)
                {
                    byte abyte7[] = Class15.method366(s + "f.dat", 0, abyte0);
                    byte abyte9[] = abyte1;
                    if(abyte7 == null && members)
                    {
                        abyte7 = Class15.method366(s + "f.dat", 0, abyte2);
                        abyte9 = abyte3;
                    }
                    aClass6_Sub1_724.method225(anInt943 + 18, abyte7, abyte9, 9);
                    j += 9;
                }
                if(Class1.anIntArray84[k] != 0)
                {
                    for(int i1 = anInt943; i1 < anInt943 + 27; i1++)
                        aClass6_Sub1_724.method228(i1);

                }
            }
            Class1.anIntArray87[k] = anInt943;
            anInt943 += 27;
        }

    }

    public void DuelOpts()
    {
        int i = Class1.anInt144;
        if(mouseClick != 0 && anInt819 == 0)
            anInt819 = 1;
        if(anInt819 > 0)
        {
            int j = super.mouseX - 22;
            int k = super.mouseY - 36;
            if(j >= 0 && k >= 0 && j < 468 && k < 262)
            {
                if(j > 216 && k > 30 && j < 462 && k < 235)
                {
                    int l = (j - 217) / 49 + ((k - 31) / 34) * 5;
                    if(l >= 0 && l < inventoryItemCounter)
                    {
                        boolean flag1 = false;
                        int i2 = 0;
                        int k4 = inventoryItemID[l];
label0:
                        for(int l5 = 0; l5 < anInt910; l5++)
                        {
                            if(anIntArray911[l5] != k4)
                                continue;
                            if(Class1.anIntArray55[k4] == 0)
                            {
                                int i7 = 0;
                                do
                                {
                                    if(i7 >= anInt819)
                                        continue label0;
                                    if(anIntArray912[l5] < anIntArray710[l])
                                        anIntArray912[l5]++;
                                    flag1 = true;
                                    i7++;
                                } while(true);
                            }
                            i2++;
                        }

                        if(inventoryCount(k4) <= i2)
                            flag1 = true;
                        if(Class1.anIntArray59[k4] == 1)
                        {
                            chatText("This object cannot be added to a duel offer", 3);
                            flag1 = true;
                        }
                        if(!flag1 && anInt910 < 8)
                        {
                            anIntArray911[anInt910] = k4;
                            anIntArray912[anInt910] = 1;
                            anInt910++;
                            flag1 = true;
                        }
                        if(flag1)
                        {
                            super.packets.packetID(154);
                            super.packets.variables348(anInt910);
                            for(int i6 = 0; i6 < anInt910; i6++)
                            {
                                super.packets.variables343(anIntArray911[i6]);
                                super.packets.method332(anIntArray912[i6]);
                            }

                            super.packets.sendpacket();
                            aBoolean668 = false;
                            duelWindow2 = false;
                        }
                    }
                }
                if(j > 8 && k > 30 && j < 205 && k < 129)
                {
                    int i1 = (j - 9) / 49 + ((k - 31) / 34) * 4;
                    if(i1 >= 0 && i1 < anInt910)
                    {
                        int k1 = anIntArray911[i1];
                        int j2 = 0;
                        do
                        {
                            if(j2 >= anInt819)
                                break;
                            if(Class1.anIntArray55[k1] == 0 && anIntArray912[i1] > 1)
                            {
                                anIntArray912[i1]--;
                            } else
                            {
                                anInt910--;
                                anInt818 = 0;
                                for(int l4 = i1; l4 < anInt910; l4++)
                                {
                                    anIntArray911[l4] = anIntArray911[l4 + 1];
                                    anIntArray912[l4] = anIntArray912[l4 + 1];
                                }

                                break;
                            }
                            j2++;
                        } while(true);
                        super.packets.packetID(154);
                        super.packets.variables348(anInt910);
                        for(int k2 = 0; k2 < anInt910; k2++)
                        {
                            super.packets.variables343(anIntArray911[k2]);
                            super.packets.method332(anIntArray912[k2]);
                        }

                        super.packets.sendpacket();
                        aBoolean668 = false;
                        duelWindow2 = false;
                    }
                }
                boolean flag = false;
                if(j >= 93 && k >= 221 && j <= 104 && k <= 232)
                {
                    aBoolean718 = !aBoolean718;
                    flag = true;
                }
                if(j >= 93 && k >= 240 && j <= 104 && k <= 251)
                {
                    aBoolean719 = !aBoolean719;
                    flag = true;
                }
                if(j >= 191 && k >= 221 && j <= 202 && k <= 232)
                {
                    aBoolean720 = !aBoolean720;
                    flag = true;
                }
                if(j >= 191 && k >= 240 && j <= 202 && k <= 251)
                {
                    aBoolean721 = !aBoolean721;
                    flag = true;
                }
                if(flag)
                {
                    super.packets.packetID(10);
                    super.packets.variables348(aBoolean718 ? 1 : 0);
                    super.packets.variables348(aBoolean719 ? 1 : 0);
                    super.packets.variables348(aBoolean720 ? 1 : 0);
                    super.packets.variables348(aBoolean721 ? 1 : 0);
                    super.packets.sendpacket();
                    aBoolean668 = false;
                    duelWindow2 = false;
                }
                if(j >= 217 && k >= 238 && j <= 286 && k <= 259)
                {
                    duelWindow2 = true;
                    super.packets.packetID(245);
                    super.packets.sendpacket();
                }
                if(j >= 394 && k >= 238 && j < 463 && k < 259)
                {
                    aBoolean917 = false;
                    super.packets.packetID(82);
                    super.packets.sendpacket();
                }
            } else
            if(mouseClick != 0)
            {
                aBoolean917 = false;
                super.packets.packetID(82);
                super.packets.sendpacket();
            }
            mouseClick = 0;
            anInt819 = 0;
        }
        if(!aBoolean917)
            return;
        byte byte0 = 22;
        byte byte1 = 36;
        aClass6_Sub1_724.method216(byte0, byte1, 468, 12, 0xc90b1d);
        int j1 = 0x989898;
        aClass6_Sub1_724.method214(byte0, byte1 + 12, 468, 18, j1, 160);
        aClass6_Sub1_724.method214(byte0, byte1 + 30, 8, 248, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 205, byte1 + 30, 11, 248, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 462, byte1 + 30, 6, 248, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 99, 197, 24, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 192, 197, 23, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 258, 197, 20, j1, 160);
        aClass6_Sub1_724.method214(byte0 + 216, byte1 + 235, 246, 43, j1, 160);
        int l1 = 0xd0d0d0;
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 30, 197, 69, l1, 160);
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 123, 197, 69, l1, 160);
        aClass6_Sub1_724.method214(byte0 + 8, byte1 + 215, 197, 43, l1, 160);
        aClass6_Sub1_724.method214(byte0 + 216, byte1 + 30, 246, 205, l1, 160);
        for(int l2 = 0; l2 < 3; l2++)
            aClass6_Sub1_724.method218(byte0 + 8, byte1 + 30 + l2 * 34, 197, 0);

        for(int i3 = 0; i3 < 3; i3++)
            aClass6_Sub1_724.method218(byte0 + 8, byte1 + 123 + i3 * 34, 197, 0);

        for(int j3 = 0; j3 < 7; j3++)
            aClass6_Sub1_724.method218(byte0 + 216, byte1 + 30 + j3 * 34, 246, 0);

        for(int k3 = 0; k3 < 6; k3++)
        {
            if(k3 < 5)
                aClass6_Sub1_724.method219(byte0 + 8 + k3 * 49, byte1 + 30, 69, 0);
            if(k3 < 5)
                aClass6_Sub1_724.method219(byte0 + 8 + k3 * 49, byte1 + 123, 69, 0);
            aClass6_Sub1_724.method219(byte0 + 216 + k3 * 49, byte1 + 30, 205, 0);
        }

        aClass6_Sub1_724.method218(byte0 + 8, byte1 + 215, 197, 0);
        aClass6_Sub1_724.method218(byte0 + 8, byte1 + 257, 197, 0);
        aClass6_Sub1_724.method219(byte0 + 8, byte1 + 215, 43, 0);
        aClass6_Sub1_724.method219(byte0 + 204, byte1 + 215, 43, 0);
        aClass6_Sub1_724.method257("Preparing to duel with: " + aString824, byte0 + 1, byte1 + 10, 1, 0xffffff);
        aClass6_Sub1_724.method257("Your Stake", byte0 + 9, byte1 + 27, 4, 0xffffff);
        aClass6_Sub1_724.method257("Opponent's Stake", byte0 + 9, byte1 + 120, 4, 0xffffff);
        aClass6_Sub1_724.method257("Duel Options", byte0 + 9, byte1 + 212, 4, 0xffffff);
        aClass6_Sub1_724.method257("Your Inventory", byte0 + 216, byte1 + 27, 4, 0xffffff);
        aClass6_Sub1_724.method257("No retreating", byte0 + 8 + 1, byte1 + 215 + 16, 3, 0xffff00);
        aClass6_Sub1_724.method257("No magic", byte0 + 8 + 1, byte1 + 215 + 35, 3, 0xffff00);
        aClass6_Sub1_724.method257("No prayer", byte0 + 8 + 102, byte1 + 215 + 16, 3, 0xffff00);
        aClass6_Sub1_724.method257("No weapons", byte0 + 8 + 102, byte1 + 215 + 35, 3, 0xffff00);
        aClass6_Sub1_724.method217(byte0 + 93, byte1 + 215 + 6, 11, 11, 0xffff00);
        if(aBoolean718)
            aClass6_Sub1_724.method216(byte0 + 95, byte1 + 215 + 8, 7, 7, 0xffff00);
        aClass6_Sub1_724.method217(byte0 + 93, byte1 + 215 + 25, 11, 11, 0xffff00);
        if(aBoolean719)
            aClass6_Sub1_724.method216(byte0 + 95, byte1 + 215 + 27, 7, 7, 0xffff00);
        aClass6_Sub1_724.method217(byte0 + 191, byte1 + 215 + 6, 11, 11, 0xffff00);
        if(aBoolean720)
            aClass6_Sub1_724.method216(byte0 + 193, byte1 + 215 + 8, 7, 7, 0xffff00);
        aClass6_Sub1_724.method217(byte0 + 191, byte1 + 215 + 25, 11, 11, 0xffff00);
        if(aBoolean721)
            aClass6_Sub1_724.method216(byte0 + 193, byte1 + 215 + 27, 7, 7, 0xffff00);
        if(!duelWindow2)
            aClass6_Sub1_724.method231(byte0 + 217, byte1 + 238, anInt948 + 25);
        aClass6_Sub1_724.method231(byte0 + 394, byte1 + 238, anInt948 + 26);
        if(aBoolean668)
        {
            aClass6_Sub1_724.FloatText("Other player", byte0 + 341, byte1 + 246, 1, 0xffffff);
            aClass6_Sub1_724.FloatText("has accepted", byte0 + 341, byte1 + 256, 1, 0xffffff);
        }
        if(duelWindow2)
        {
            aClass6_Sub1_724.FloatText("Waiting for", byte0 + 217 + 35, byte1 + 246, 1, 0xffffff);
            aClass6_Sub1_724.FloatText("other player", byte0 + 217 + 35, byte1 + 256, 1, 0xffffff);
        }
        for(int l3 = 0; l3 < inventoryItemCounter; l3++)
        {
            int i5 = 217 + byte0 + (l3 % 5) * 49;
            int j6 = 31 + byte1 + (l3 / 5) * 34;
            aClass6_Sub1_724.method247(i5, j6, 48, 32, anInt950 + Class1.anIntArray53[inventoryItemID[l3]], Class1.anIntArray58[inventoryItemID[l3]], 0, 0, false);
            if(Class1.anIntArray55[inventoryItemID[l3]] == 0)
                aClass6_Sub1_724.method257(String.valueOf(anIntArray710[l3]), i5 + 1, j6 + 10, 1, 0xffff00);
        }

        for(int i4 = 0; i4 < anInt910; i4++)
        {
            int j5 = 9 + byte0 + (i4 % 4) * 49;
            int k6 = 31 + byte1 + (i4 / 4) * 34;
            aClass6_Sub1_724.method247(j5, k6, 48, 32, anInt950 + Class1.anIntArray53[anIntArray911[i4]], Class1.anIntArray58[anIntArray911[i4]], 0, 0, false);
            if(Class1.anIntArray55[anIntArray911[i4]] == 0)
                aClass6_Sub1_724.method257(String.valueOf(anIntArray912[i4]), j5 + 1, k6 + 10, 1, 0xffff00);
            if(super.mouseX > j5 && super.mouseX < j5 + 48 && super.mouseY > k6 && super.mouseY < k6 + 32)
                aClass6_Sub1_724.method257("@yel@[" + Class1.itemNameArray[anIntArray911[i4]] + "] " + Class1.aStringArray110[anIntArray911[i4]], byte0 + 8, byte1 + 273, 1, 0xffff00);
        }

        for(int j4 = 0; j4 < anInt959; j4++)
        {
            int k5 = 9 + byte0 + (j4 % 4) * 49;
            int l6 = 124 + byte1 + (j4 / 4) * 34;
            aClass6_Sub1_724.method247(k5, l6, 48, 32, anInt950 + Class1.anIntArray53[anIntArray960[j4]], Class1.anIntArray58[anIntArray960[j4]], 0, 0, false);
            if(Class1.anIntArray55[anIntArray960[j4]] == 0)
                aClass6_Sub1_724.method257(String.valueOf(anIntArray961[j4]), k5 + 1, l6 + 10, 1, 0xffff00);
            if(super.mouseX > k5 && super.mouseX < k5 + 48 && super.mouseY > l6 && super.mouseY < l6 + 32)
                aClass6_Sub1_724.method257("@yel@[" + Class1.itemNameArray[anIntArray960[j4]] + "] " + Class1.aStringArray110[anIntArray960[j4]], byte0 + 8, byte1 + 273, 1, 0xffff00);
        }

    }

    public void LogOutSucceess()
    {
        aClass6_Sub1_724.method216(126, 137, 260, 60, 0);
        aClass6_Sub1_724.method217(126, 137, 260, 60, 0xffffff);
        aClass6_Sub1_724.FloatText("Logging out...", 256, 173, 5, 0xffffff);
    }

    public void method89(int i, String s)
    {
        int j = objXArray[i];
        int k = objYArray[i];
        int l = j - myPlayer.posX / 128;
        int i1 = k - myPlayer.posY / 128;
        byte byte0 = 7;
        if(j >= 0 && k >= 0 && j < 96 && k < 96 && l > -byte0 && l < byte0 && i1 > -byte0 && i1 < byte0)
        {
            aClass10_739.method270(aClass5Array814[i]);
            int j1 = Class1.method124(s);
            Class5 class5 = aClass5Array994[j1].method204();
            aClass10_739.method269(class5);
            class5.method185(true, 48, 48, -50, -10, -50);
            class5.method206(aClass5Array814[i]);
            class5.anInt257 = i;
            aClass5Array814[i] = class5;
        }
    }

    public void CombatStyle()
    {
        int i = Class1.anInt144;
        byte byte0 = 7;
        byte byte1 = 15;
        char c = '\257';
        if(mouseClick != 0)
        {
            int j = 0;
            do
            {
                if(j >= 5)
                    break;
                if(j > 0 && super.mouseX > 7 && super.mouseX < 100 && super.mouseY > byte1 + j * 20 && super.mouseY < byte1 + j * 20 + 20)
                {
                    fightMode = j - 1;
                    lastFightMode = j - 1;
                    if(!macroOn)
                        lockedFightMode = j - 1;
                    mouseClick = 0;
                    super.packets.packetID(119);
                    super.packets.variables348(fightMode);
                    super.packets.sendpacket();
                    System.out.println("FightMode(" + fightMode + ")");
                    break;
                }
                j++;
            } while(true);
        }
        for(int k = 1; k < 5; k++)
        {
            if(k == fightMode + 1)
                aClass6_Sub1_724.method214(byte0, byte1 + k * 20, 90, 20, Class6.method223(190, 190, 190), 88);
            else
                aClass6_Sub1_724.method214(byte0, byte1 + k * 20, 90, 20, Class6.method223(100, 100, 100), 88);
            aClass6_Sub1_724.method218(byte0, byte1 + k * 20, 90, 0);
            aClass6_Sub1_724.method218(byte0, byte1 + k * 20 + 20, 90, 0);
        }

        aClass6_Sub1_724.FloatText("All (+1)", 50, byte1 + 36, 3, 0);
        aClass6_Sub1_724.FloatText("Str (+3)", 50, byte1 + 56, 3, 0);
        aClass6_Sub1_724.FloatText("Atk (+3)", 50, byte1 + 76, 3, 0);
        aClass6_Sub1_724.FloatText("Def (+3)", 50, byte1 + 96, 3, 0);
    }

    public void TargetStuff()
    {
        int i = Class1.anInt144;
        if(selectedSpell >= 0 || selectedItem >= 0)
        {
            optionNameArray[optionCount] = "Cancel";
            optionObjectArray[optionCount] = "";
            optionIDArray[optionCount] = 4000;
            optionCount++;
        }
        for(int j = 0; j < optionCount; j++)
            anIntArray984[j] = j;

        boolean flag = false;
        while(!flag) 
        {
            flag = true;
            int l = 0;
            while(l < optionCount - 1) 
            {
                int j1 = anIntArray984[l];
                int l1 = anIntArray984[l + 1];
                if(optionIDArray[j1] > optionIDArray[l1])
                {
                    anIntArray984[l] = l1;
                    anIntArray984[l + 1] = j1;
                    flag = false;
                }
                l++;
            }
        }
        if(optionCount > 20)
            optionCount = 20;
        if(optionCount > 0)
        {
            int k = -1;
            int i1 = 0;
            do
            {
                if(i1 >= optionCount)
                    break;
                if(optionObjectArray[anIntArray984[i1]] != null && optionObjectArray[anIntArray984[i1]].length() > 0)
                {
                    k = i1;
                    break;
                }
                i1++;
            } while(true);
            String s = null;
            if((selectedItem >= 0 || selectedSpell >= 0) && optionCount == 1)
                s = "Choose a target";
            else
            if((selectedItem >= 0 || selectedSpell >= 0) && optionCount > 1)
                s = "@whi@" + optionNameArray[anIntArray984[0]] + " " + optionObjectArray[anIntArray984[0]];
            else
            if(k != -1)
                s = optionObjectArray[anIntArray984[k]] + ": @whi@" + optionNameArray[anIntArray984[0]];
            if(optionCount == 2 && s != null)
                s = s + "@whi@ / 1 more option";
            if(optionCount > 2 && s != null)
                s = s + "@whi@ / " + (optionCount - 1) + " more options";
            if(s != null)
                aClass6_Sub1_724.method257(s, 6, 14, 1, 0xffff00);
            if(!aBoolean767 && mouseClick == 1 || aBoolean767 && mouseClick == 1 && optionCount == 1)
            {
                optionPacketSender(anIntArray984[0]);
                mouseClick = 0;
                return;
            }
            if(!aBoolean767 && mouseClick == 2 || aBoolean767 && mouseClick == 1)
            {
                anInt755 = (optionCount + 1) * 15;
                anInt754 = aClass6_Sub1_724.method263("Choose option", 1) + 5;
                for(int k1 = 0; k1 < optionCount; k1++)
                {
                    int i2 = aClass6_Sub1_724.method263(optionNameArray[k1] + " " + optionObjectArray[k1], 1) + 5;
                    if(i2 > anInt754)
                        anInt754 = i2;
                }

                anInt752 = super.mouseX - anInt754 / 2;
                anInt753 = super.mouseY - 7;
                aBoolean854 = true;
                if(anInt752 < 0)
                    anInt752 = 0;
                if(anInt753 < 0)
                    anInt753 = 0;
                if(anInt752 + anInt754 > 510)
                    anInt752 = 510 - anInt754;
                if(anInt753 + anInt755 > 315)
                    anInt753 = 315 - anInt755;
                mouseClick = 0;
            }
        }
    }

    public void TradeFinish()
    {
        int i = Class1.anInt144;
        byte byte0 = 22;
        byte byte1 = 36;
        aClass6_Sub1_724.method216(byte0, byte1, 468, 16, 192);
        int j = 0x989898;
        aClass6_Sub1_724.method214(byte0, byte1 + 16, 468, 246, j, 160);
        aClass6_Sub1_724.FloatText("Please confirm your trade with @yel@" + Class15.method363(aLong847), byte0 + 234, byte1 + 12, 1, 0xffffff);
        aClass6_Sub1_724.FloatText("You are about to give:", byte0 + 117, byte1 + 30, 1, 0xffff00);
        for(int k = 0; k < anInt836; k++)
        {
            String s = Class1.itemNameArray[anIntArray837[k]];
            if(Class1.anIntArray55[anIntArray837[k]] == 0)
                s = s + " x " + Currency(anIntArray838[k]);
            aClass6_Sub1_724.FloatText(s, byte0 + 117, byte1 + 42 + k * 12, 1, 0xffffff);
        }

        if(anInt836 == 0)
            aClass6_Sub1_724.FloatText("Nothing!", byte0 + 117, byte1 + 42, 1, 0xffffff);
        aClass6_Sub1_724.FloatText("In return you will receive:", byte0 + 351, byte1 + 30, 1, 0xffff00);
        for(int l = 0; l < anInt691; l++)
        {
            String s1 = Class1.itemNameArray[anIntArray692[l]];
            if(Class1.anIntArray55[anIntArray692[l]] == 0)
                s1 = s1 + " x " + Currency(anIntArray693[l]);
            aClass6_Sub1_724.FloatText(s1, byte0 + 351, byte1 + 42 + l * 12, 1, 0xffffff);
        }

        if(anInt691 == 0)
            aClass6_Sub1_724.FloatText("Nothing!", byte0 + 351, byte1 + 42, 1, 0xffffff);
        aClass6_Sub1_724.FloatText("Are you sure you want to do this?", byte0 + 234, byte1 + 200, 4, 65535);
        aClass6_Sub1_724.FloatText("There is NO WAY to reverse a trade if you change your mind.", byte0 + 234, byte1 + 215, 1, 0xffffff);
        aClass6_Sub1_724.FloatText("Remember that not all players are trustworthy", byte0 + 234, byte1 + 230, 1, 0xffffff);
        if(!tradeFinished)
        {
            aClass6_Sub1_724.method231((byte0 + 118) - 35, byte1 + 238, anInt948 + 25);
            aClass6_Sub1_724.method231((byte0 + 352) - 35, byte1 + 238, anInt948 + 26);
        } else
        {
            aClass6_Sub1_724.FloatText("Waiting for other player...", byte0 + 234, byte1 + 250, 1, 0xffff00);
        }
        if(mouseClick == 1)
        {
            if(super.mouseX < byte0 || super.mouseY < byte1 || super.mouseX > byte0 + 468 || super.mouseY > byte1 + 262)
            {
                tradeWindow = false;
                super.packets.packetID(178);
                super.packets.sendpacket();
            }
            if(super.mouseX >= (byte0 + 118) - 35 && super.mouseX <= byte0 + 118 + 70 && super.mouseY >= byte1 + 238 && super.mouseY <= byte1 + 238 + 21)
            {
                tradeFinished = true;
                super.packets.packetID(65);
                super.packets.sendpacket();
            }
            if(super.mouseX >= (byte0 + 352) - 35 && super.mouseX <= byte0 + 353 + 70 && super.mouseY >= byte1 + 238 && super.mouseY <= byte1 + 238 + 21)
            {
                tradeWindow = false;
                super.packets.packetID(178);
                super.packets.sendpacket();
            }
            mouseClick = 0;
        }
    }

    public void optionPacketSender(int i)
    {
        int j = optionObjXArray[i];
        int k = optionObjYArray[i];
        int l = optionObjIDArray[i];
        int i1 = optionObjNameArray[i];
        int j1 = anIntArray805[i];
        int k1 = optionIDArray[i];
        if(k1 == 200)
        {
            method55(myPlayerX2, myPlayerY2, j, k, true);
            super.packets.packetID(31);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables343(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            selectedSpell = -1;
            System.out.println("CastOnGroundItem(" + l + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 210)
        {
            method55(myPlayerX2, myPlayerY2, j, k, true);
            super.packets.packetID(70);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables343(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            selectedItem = -1;
            System.out.println("UseItemOnGroundItem(" + l + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 220)
        {
            method55(myPlayerX2, myPlayerY2, j, k, true);
            super.packets.packetID(104);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables343(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            System.out.println("Take(" + l + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 3200)
        {
            chatText(Class1.aStringArray110[l], 3);
            System.out.println("Examine(" + l + ")");
        }
        if(k1 == 300)
        {
            method111(j, k, l);
            super.packets.packetID(48);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables348(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            selectedSpell = -1;
            System.out.println("CastOnObject1(" + i1 + "," + l + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 310)
        {
            method111(j, k, l);
            super.packets.packetID(167);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables348(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            selectedItem = -1;
            System.out.println("UseItemOnObject(" + i1 + "," + l + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 320)
        {
            method111(j, k, l);
            super.packets.packetID(114);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables348(l);
            super.packets.sendpacket();
            System.out.println("ObjectCommandA(" + l + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 2300)
        {
            method111(j, k, l);
            super.packets.packetID(163);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables348(l);
            super.packets.sendpacket();
            System.out.println("ObjectCommandA2(" + l + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 3300)
        {
            chatText(Class1.aStringArray71[l], 3);
            System.out.println("Examine(" + l + ")");
        }
        if(k1 == 400)
        {
            method105(j, k, l, i1);
            super.packets.packetID(14);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables343(j1);
            super.packets.sendpacket();
            selectedSpell = -1;
            System.out.println("CastOnObject(" + j1 + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 410)
        {
            method105(j, k, l, i1);
            super.packets.packetID(153);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables343(j1);
            super.packets.sendpacket();
            System.out.println("UseItemOnObject(" + j1 + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
            selectedItem = -1;
        }
        if(k1 == 420)
        {
            method105(j, k, l, i1);
            super.packets.packetID(90);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.sendpacket();
            System.out.println("ObjectCommandB(" + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 2400)
        {
            method105(j, k, l, i1);
            super.packets.packetID(227);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.sendpacket();
            System.out.println("ObjectCommandB2(" + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 3400)
        {
            chatText(Class1.aStringArray92[l], 3);
            System.out.println("Examine(" + l + ")");
        }
        if(k1 == 600)
        {
            super.packets.packetID(159);
            super.packets.variables343(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            System.out.println("CastOnItem(" + i1 + "," + l + ")");
            selectedSpell = -1;
        }
        if(k1 == 610)
        {
            super.packets.packetID(172);
            super.packets.variables343(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            System.out.println("UseItemWithItem(" + i1 + "," + l + ")");
            selectedItem = -1;
        }
        if(k1 == 620)
        {
            super.packets.packetID(170);
            super.packets.variables343(l);
            super.packets.sendpacket();
            System.out.println("Remove(" + l + ")");
        }
        if(k1 == 630)
        {
            super.packets.packetID(12);
            super.packets.variables343(l);
            super.packets.sendpacket();
            System.out.println("Wield(" + l + ")");
        }
        if(k1 == 640)
        {
            super.packets.packetID(219);
            super.packets.variables343(l);
            super.packets.sendpacket();
            System.out.println("ItemCommand(" + l + ")");
        }
        if(k1 == 650)
        {
            selectedItem = l;
            toolbar = 0;
            selectedItemName = Class1.itemNameArray[inventoryItemID[selectedItem]];
            System.out.println("Use(" + l + ")");
        }
        if(k1 == 660)
        {
            super.packets.packetID(196);
            super.packets.variables343(l);
            super.packets.sendpacket();
            selectedItem = -1;
            toolbar = 0;
            System.out.println("Drop(" + l + ")");
        }
        if(k1 == 3600)
        {
            chatText(Class1.aStringArray110[l], 3);
            System.out.println("Examine(" + l + ")");
        }
        if(k1 == 700)
        {
            int l1 = (j - 64) / anInt946;
            int l3 = (k - 64) / anInt946;
            method99(myPlayerX2, myPlayerY2, l1, l3, true);
            super.packets.packetID(49);
            super.packets.variables343(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            selectedSpell = -1;
            System.out.println("CastOnNPC(" + i1 + "," + l + ")");
        }
        if(k1 == 710)
        {
            int i2 = (j - 64) / anInt946;
            int i4 = (k - 64) / anInt946;
            method99(myPlayerX2, myPlayerY2, i2, i4, true);
            super.packets.packetID(160);
            super.packets.variables343(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            selectedItem = -1;
            System.out.println("UseItemOnNPC(" + i1 + "," + l + ")");
        }
        if(k1 == 720)
        {
            int j2 = (j - 64) / anInt946;
            int j4 = (k - 64) / anInt946;
            method99(myPlayerX2, myPlayerY2, j2, j4, true);
            super.packets.packetID(7);
            super.packets.variables343(l);
            super.packets.sendpacket();
            System.out.println("TalkToNPC(" + l + ")");
        }
        if(k1 == 725)
        {
            int k2 = (j - 64) / anInt946;
            int k4 = (k - 64) / anInt946;
            method99(myPlayerX2, myPlayerY2, k2, k4, true);
            super.packets.packetID(151);
            super.packets.variables343(l);
            super.packets.sendpacket();
            System.out.println("TheiveNPC(" + l + ")");
        }
        if(k1 == 715 || k1 == 2715)
        {
            int l2 = (j - 64) / anInt946;
            int l4 = (k - 64) / anInt946;
            method99(myPlayerX2, myPlayerY2, l2, l4, true);
            super.packets.packetID(47);
            super.packets.variables343(l);
            super.packets.sendpacket();
            if(!macroOn)
                System.out.println("AttackNPC(" + l + ")");
        }
        if(k1 == 3700)
        {
            chatText(Class1.aStringArray128[l], 3);
            System.out.println("ExamineNPC(" + l + ")");
        }
        if(k1 == 4300)
        {
            System.out.println("SelectNPC(" + l + ")");
            XClient.sendPacket("SELNPC " + l);
            selectedNPC = l;
            GETNPC = false;
        }
        if(k1 == 800)
        {
            int i3 = (j - 64) / anInt946;
            int i5 = (k - 64) / anInt946;
            method99(myPlayerX2, myPlayerY2, i3, i5, true);
            super.packets.packetID(169);
            super.packets.variables343(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            selectedSpell = -1;
            System.out.println("CastOnPlayer(" + i1 + "," + l + ")");
        }
        if(k1 == 810)
        {
            int j3 = (j - 64) / anInt946;
            int j5 = (k - 64) / anInt946;
            method99(myPlayerX2, myPlayerY2, j3, j5, true);
            super.packets.packetID(177);
            super.packets.variables343(l);
            super.packets.variables343(i1);
            super.packets.sendpacket();
            selectedItem = -1;
            System.out.println("UseItemWithPlayer(" + i1 + "," + l + ")");
        }
        if(k1 == 805 || k1 == 2805)
        {
            int k3 = (j - 64) / anInt946;
            int k5 = (k - 64) / anInt946;
            method99(myPlayerX2, myPlayerY2, k3, k5, true);
            super.packets.packetID(210);
            super.packets.variables343(l);
            super.packets.sendpacket();
            System.out.println("AttackPlayer(" + l + ")");
        }
        if(k1 == 2806)
        {
            super.packets.packetID(89);
            super.packets.variables343(l);
            super.packets.sendpacket();
            System.out.println("DuelPlayer(" + l + ")");
        }
        if(k1 == 2810)
        {
            super.packets.packetID(250);
            super.packets.variables343(l);
            super.packets.sendpacket();
            System.out.println("TradePlayer(" + l + ")");
        }
        if(k1 == 2820)
        {
            super.packets.packetID(36);
            super.packets.variables343(l);
            super.packets.sendpacket();
            System.out.println("FollowPlayer(" + l + ")");
        }
        if(k1 == 9999)
        {
            System.out.println("SelectPlayer(" + l + ")");
            XClient.sendPacket("SELPLAYER " + l);
        }
        if(k1 == 900)
        {
            method99(myPlayerX2, myPlayerY2, j, k, true);
            super.packets.packetID(220);
            super.packets.variables343(j + myPlayerX1);
            super.packets.variables343(k + myPlayerY1);
            super.packets.variables343(l);
            super.packets.sendpacket();
            selectedSpell = -1;
            System.out.println("CastOnGround(" + l + "," + (j + myPlayerX1) + "," + (k + myPlayerY1) + ")");
        }
        if(k1 == 920)
        {
            method99(myPlayerX2, myPlayerY2, j, k, false);
            if(anInt670 == -24)
                anInt670 = 24;
            System.out.println("WalkTo(" + (chosenx + myPlayerX1) + "," + (choseny + myPlayerY1) + ")");
        }
        if(k1 == 1000)
        {
            super.packets.packetID(156);
            super.packets.variables343(l);
            super.packets.sendpacket();
            selectedSpell = -1;
            System.out.println("CastOnSelf(" + l + ")");
        }
        if(k1 == 4000)
        {
            selectedItem = -1;
            selectedSpell = -1;
            System.out.println("Cancel()");
        }
    }

    public void method94()
    {
        aClass4_775 = new Class4(aClass6_Sub1_724, 10);
        anInt776 = aClass4_775.method160(5, 269, 502, 56, 1, 20, true);
        anInt777 = aClass4_775.method161(7, 324, 498, 14, 1, 80, false, true);
        anInt778 = aClass4_775.method160(5, 269, 502, 56, 1, 20, true);
        anInt779 = aClass4_775.method160(5, 269, 502, 56, 1, 20, true);
        aClass4_775.method173(anInt777);
    }

    public void DownloadJunk()
    {
        aClass19_883.aByteArray593 = UnPack("maps" + Class18.anInt575 + ".jag", "map", 70);
        if(members)
            aClass19_883.aByteArray612 = UnPack("maps" + Class18.anInt575 + ".mem", "members map", 75);
        aClass19_883.aByteArray592 = UnPack("land" + Class18.anInt575 + ".jag", "landscape", 80);
        if(members)
            aClass19_883.aByteArray611 = UnPack("land" + Class18.anInt575 + ".mem", "members landscape", 85);
    }

    void method96(int i, int j, int k, int l, int i1, int j1, int k1)
    {
        int l1 = Class1.anInt144;
        Class2 class2 = PlayerArray[i1];
        if(class2.anInt171 == 255)
            return;
        int i2 = class2.status + (mapangle + 16) / 32 & 7;
        boolean flag = false;
        int j2 = i2;
        if(j2 == 5)
        {
            j2 = 3;
            flag = true;
        } else
        if(j2 == 6)
        {
            j2 = 2;
            flag = true;
        } else
        if(j2 == 7)
        {
            j2 = 1;
            flag = true;
        }
        int k2 = j2 * 3 + anIntArray726[(class2.anInt152 / 6) % 4];
        if(class2.status == 8)
        {
            j2 = 5;
            i2 = 2;
            flag = false;
            i -= (5 * k1) / 100;
            k2 = j2 * 3 + anIntArray939[(anInt918 / 5) % 8];
        } else
        if(class2.status == 9)
        {
            j2 = 5;
            i2 = 2;
            flag = true;
            i += (5 * k1) / 100;
            k2 = j2 * 3 + anIntArray909[(anInt918 / 6) % 8];
        }
        for(int l2 = 0; l2 < 12; l2++)
        {
            int l3 = anIntArrayArray684[i2][l2];
            int k4 = class2.anIntArray159[l3] - 1;
            if(k4 < 0)
                continue;
            int i5 = 0;
            int j5 = 0;
            int k5 = k2;
            if(flag && j2 >= 1 && j2 <= 3)
                if(Class1.anIntArray86[k4] == 1)
                    k5 += 15;
                else
                if(l3 == 4 && j2 == 1)
                {
                    i5 = -22;
                    j5 = -3;
                    k5 = j2 * 3 + anIntArray726[(2 + class2.anInt152 / 6) % 4];
                } else
                if(l3 == 4 && j2 == 2)
                {
                    i5 = 0;
                    j5 = -8;
                    k5 = j2 * 3 + anIntArray726[(2 + class2.anInt152 / 6) % 4];
                } else
                if(l3 == 4 && j2 == 3)
                {
                    i5 = 26;
                    j5 = -5;
                    k5 = j2 * 3 + anIntArray726[(2 + class2.anInt152 / 6) % 4];
                } else
                if(l3 == 3 && j2 == 1)
                {
                    i5 = 22;
                    j5 = 3;
                    k5 = j2 * 3 + anIntArray726[(2 + class2.anInt152 / 6) % 4];
                } else
                if(l3 == 3 && j2 == 2)
                {
                    i5 = 0;
                    j5 = 8;
                    k5 = j2 * 3 + anIntArray726[(2 + class2.anInt152 / 6) % 4];
                } else
                if(l3 == 3 && j2 == 3)
                {
                    i5 = -26;
                    j5 = 5;
                    k5 = j2 * 3 + anIntArray726[(2 + class2.anInt152 / 6) % 4];
                }
            if(j2 == 5 && Class1.anIntArray85[k4] != 1)
                continue;
            int l5 = k5 + Class1.anIntArray87[k4];
            i5 = (i5 * k) / ((Class6) (aClass6_Sub1_724)).anIntArray328[l5];
            j5 = (j5 * l) / ((Class6) (aClass6_Sub1_724)).anIntArray329[l5];
            int i6 = (k * ((Class6) (aClass6_Sub1_724)).anIntArray328[l5]) / ((Class6) (aClass6_Sub1_724)).anIntArray328[Class1.anIntArray87[k4]];
            i5 -= (i6 - k) / 2;
            int j6 = Class1.anIntArray83[k4];
            int k6 = anIntArray829[class2.anInt172];
            if(j6 == 1)
                j6 = anIntArray885[class2.anInt169];
            else
            if(j6 == 2)
                j6 = anIntArray832[class2.anInt170];
            else
            if(j6 == 3)
                j6 = anIntArray832[class2.anInt171];
            aClass6_Sub1_724.method247(i + i5, j + j5, i6, l, l5, j6, k6, j1, flag);
        }

        if(class2.anInt161 > 0)
        {
            anIntArray967[anInt820] = aClass6_Sub1_724.method263(class2.lastChatMessage, 1) / 2;
            if(anIntArray967[anInt820] > 150)
                anIntArray967[anInt820] = 150;
            anIntArray968[anInt820] = (aClass6_Sub1_724.method263(class2.lastChatMessage, 1) / 300) * aClass6_Sub1_724.method261(1);
            anIntArray965[anInt820] = i + k / 2;
            anIntArray966[anInt820] = j;
            aStringArray821[anInt820++] = class2.lastChatMessage;
        }
        if(class2.anInt163 > 0)
        {
            anIntArray758[anInt958] = i + k / 2;
            anIntArray759[anInt958] = j;
            anIntArray722[anInt958] = k1;
            anIntArray723[anInt958++] = class2.anInt162;
        }
        if(class2.status == 8 || class2.status == 9 || class2.anInt167 != 0)
        {
            if(class2.anInt167 > 0)
            {
                int i3 = i;
                if(class2.status == 8)
                    i3 -= (20 * k1) / 100;
                else
                if(class2.status == 9)
                    i3 += (20 * k1) / 100;
                int i4 = (class2.anInt165 * 30) / class2.anInt166;
                anIntArray687[anInt766] = i3 + k / 2;
                anIntArray688[anInt766] = j;
                anIntArray689[anInt766++] = i4;
            }
            if(class2.anInt167 > 150)
            {
                int j3 = i;
                if(class2.status == 8)
                    j3 -= (10 * k1) / 100;
                else
                if(class2.status == 9)
                    j3 += (10 * k1) / 100;
                aClass6_Sub1_724.method231((j3 + k / 2) - 12, (j + l / 2) - 12, anInt948 + 11);
                aClass6_Sub1_724.FloatText(String.valueOf(class2.anInt164), (j3 + k / 2) - 1, j + l / 2 + 5, 3, 0xffffff);
            }
        }
        if(class2.anInt179 == 1 && class2.anInt163 == 0)
        {
            int k3 = j1 + i + k / 2;
            if(class2.status == 8)
                k3 -= (20 * k1) / 100;
            else
            if(class2.status == 9)
                k3 += (20 * k1) / 100;
            int j4 = (16 * k1) / 100;
            int l4 = (16 * k1) / 100;
            aClass6_Sub1_724.method232(k3 - j4 / 2, j - l4 / 2 - (10 * k1) / 100, j4, l4, anInt948 + 13);
        }
    }

    public void method97(String s)
    {
        if(anInputStream_Sub1_901 == null)
            return;
        if(aBoolean853)
        {
            return;
        } else
        {
            anInputStream_Sub1_901.method123(aByteArray987, Class15.method364(s + ".pcm", aByteArray987), Class15.method365(s + ".pcm", aByteArray987));
            return;
        }
    }

    public boolean Loading(int i, int j)
    {
        int k = Class1.anInt144;
        if(anInt993 != 0)
        {
            aClass19_883.aBoolean609 = false;
            return false;
        }
        aBoolean717 = false;
        i += anInt806;
        j += anInt807;
        if(anInt809 == anInt785 && i > anInt842 && i < anInt844 && j > anInt843 && j < anInt845)
        {
            aClass19_883.aBoolean609 = true;
            return false;
        }
        aClass6_Sub1_724.FloatText("Loading... Please wait", 256, 192, 1, 0xffffff);
        ChatTypes();
        aClass6_Sub1_724.method211(aGraphics857, 0, 0);
        int l = myPlayerX1;
        int i1 = myPlayerY1;
        int j1 = (i + 24) / 48;
        int k1 = (j + 24) / 48;
        anInt809 = anInt785;
        myPlayerX1 = j1 * 48 - 48;
        myPlayerY1 = k1 * 48 - 48;
        anInt842 = j1 * 48 - 32;
        anInt843 = k1 * 48 - 32;
        anInt844 = j1 * 48 + 32;
        anInt845 = k1 * 48 + 32;
        aClass19_883.method416(i, j, anInt809);
        myPlayerX1 -= anInt806;
        myPlayerY1 -= anInt807;
        int l1 = myPlayerX1 - l;
        int i2 = myPlayerY1 - i1;
        for(int j2 = 0; j2 < objCount;)
        {
            objXArray[j2] -= l1;
            objYArray[j2] -= i2;
            int k3 = objXArray[j2];
            int i4 = objYArray[j2];
            int i5 = objID[j2];
            Class5 class5 = aClass5Array814[j2];
            try
            {
                int l5 = anIntArray763[j2];
                int i6;
                int j6;
                if(l5 == 0 || l5 == 4)
                {
                    i6 = Class1.anIntArray63[i5];
                    j6 = Class1.anIntArray64[i5];
                } else
                {
                    j6 = Class1.anIntArray63[i5];
                    i6 = Class1.anIntArray64[i5];
                }
                int k6 = ((k3 + k3 + i6) * anInt946) / 2;
                int l6 = ((i4 + i4 + j6) * anInt946) / 2;
                if(k3 < 0 || i4 < 0 || k3 >= 96 || i4 >= 96)
                    continue;
                aClass10_739.method269(class5);
                class5.method192(k6, -aClass19_883.method421(k6, l6), l6);
                aClass19_883.method407(k3, i4, i5);
                if(i5 == 74)
                    class5.method191(0, -480, 0);
                continue;
            }
            catch(RuntimeException runtimeexception)
            {
                System.out.println("Loc Error: " + runtimeexception.getMessage());
                System.out.println("i:" + j2 + " obj:" + class5);
                runtimeexception.printStackTrace();
                j2++;
            }
        }

        for(int k2 = 0; k2 < anInt855;)
        {
            anIntArray747[k2] -= l1;
            anIntArray748[k2] -= i2;
            int l3 = anIntArray747[k2];
            int j4 = anIntArray748[k2];
            int j5 = anIntArray741[k2];
            int k5 = anIntArray740[k2];
            try
            {
                aClass19_883.method415(l3, j4, k5, j5);
                Class5 class5_1 = method106(l3, j4, k5, j5, k2);
                aClass5Array781[k2] = class5_1;
                continue;
            }
            catch(RuntimeException runtimeexception1)
            {
                System.out.println("Bound Error: " + runtimeexception1.getMessage());
                runtimeexception1.printStackTrace();
                k2++;
            }
        }

        for(int l2 = 0; l2 < itemCount; l2++)
        {
            itemXArray[l2] -= l1;
            itemYArray[l2] -= i2;
        }

        for(int i3 = 0; i3 < PlayerCount; i3++)
        {
            Class2 class2 = PlayerArray[i3];
            class2.posX -= l1 * anInt946;
            class2.posY -= i2 * anInt946;
            for(int k4 = 0; k4 <= class2.anInt156; k4++)
            {
                class2.anIntArray157[k4] -= l1 * anInt946;
                class2.anIntArray158[k4] -= i2 * anInt946;
            }

        }

        for(int j3 = 0; j3 < npccount; j3++)
        {
            Class2 class2_1 = NPCArray[j3];
            class2_1.posX -= l1 * anInt946;
            class2_1.posY -= i2 * anInt946;
            for(int l4 = 0; l4 <= class2_1.anInt156; l4++)
            {
                class2_1.anIntArray157[l4] -= l1 * anInt946;
                class2_1.anIntArray158[l4] -= i2 * anInt946;
            }

        }

        aClass19_883.aBoolean609 = true;
        return true;
    }

    public void method99(int i, int j, int k, int l, boolean flag)
    {
        method83(i, j, k, l, k, l, false, flag);
    }

    public Random generator;
    Toolkit toolkit;
    public File slword;
    public int ARROWUP;
    public int ARROWDOWN;
    public int PGDN;
    public int PGUP;
    public int serv;
    public int objid;
    public String server;
    public String currenttime;
    public String Xusername;
    public String Xpassword;
    public String word;
    public boolean arrowkeydown;
    public boolean arrowkeyup;
    public boolean pgupdown;
    public boolean pgdowndown;
    public boolean adown;
    public boolean ddown;
    public boolean sdown;
    public boolean wdown;
    public boolean homedown;
    public boolean enddown;
    public boolean pkermap;
    public boolean lefty;
    public boolean loggedout;
    public boolean show;
    public Calendar cal;
    public long modifiedTime;
    public int lastFightMode;
    public int sleepthresh;
    public String myChat;
    public String playerChat;
    public String NPCChat;
    public boolean asleep;
    public int focusx;
    public int focusy;
    public int maphax;
    public int lastitempos;
    public int selectedplayer;
    public int chosenx;
    public int choseny;
    public autofight fightthread;
    public boolean macroOn;
    public int selectedNPC;
    public int attackAttempts;
    public boolean isSleeping;
    public int startXP;
    public int currentXP;
    public int lockedFightMode;
    public int depositAllID;
    public int withdrawAllID;
    public depositeverything depositthread;
    public depositallbyid depositthread2;
    public withdrawallbyid withdrawthread;
    public String sleepword;
    public doorcheck doorthread;
    public int doorx;
    public int doory;
    public boolean boundsocket;
    public boolean nogfxplz;
    public boolean ShowCombat;
    public boolean HideGFX;
    public boolean WText1;
    public boolean WText2;
    public boolean WText3;
    public boolean WText4;
    public boolean WText5;
    public boolean WText6;
    public boolean WText7;
    public boolean WText8;
    public boolean WText9;
    public String WText1Text;
    public String WText2Text;
    public String WText3Text;
    public String WText4Text;
    public String WText5Text;
    public String WText6Text;
    public String WText7Text;
    public String WText8Text;
    public String WText9Text;
    public int WText1X;
    public int WText1Y;
    public int WText2X;
    public int WText2Y;
    public int WText3X;
    public int WText3Y;
    public int WText4X;
    public int WText4Y;
    public int WText5X;
    public int WText5Y;
    public int WText6X;
    public int WText6Y;
    public int WText7X;
    public int WText7Y;
    public int WText8X;
    public int WText8Y;
    public int WText9X;
    public int WText9Y;
    public int WBoTint1;
    public int WBoTint2;
    public int MYLastMousePosX;
    public int MYLastMousePosY;
    public int MYLastPosX;
    public int MYLastPosY;
    public boolean FogOfWar;
    public boolean GETNPC;
    public boolean aBoolean666;
    public boolean aBoolean668;
    public boolean duelWindow2;
    public boolean tradeWindow;
    public boolean tradeFinished;
    public boolean aBoolean675;
    public boolean aBoolean680;
    public boolean aBoolean717;
    public boolean aBoolean718;
    public boolean aBoolean719;
    public boolean aBoolean720;
    public boolean aBoolean721;
    public boolean aBoolean727;
    public boolean aBoolean745;
    public boolean aBoolean757;
    public boolean aBoolean767;
    public boolean aBoolean789;
    public boolean duelWindow;
    public boolean duelFinished;
    public boolean aBoolean810;
    public boolean aBoolean849;
    public boolean answerMenu;
    public boolean aBoolean853;
    public boolean aBoolean854;
    public boolean aBoolean856;
    public boolean aBoolean870;
    public boolean aBoolean879;
    public boolean aBoolean880;
    public boolean aBoolean890;
    public boolean aBoolean908;
    public boolean members;
    public boolean aBoolean917;
    public boolean aBoolean922;
    public boolean hasAccepted;
    public boolean tradeWindow2;
    public boolean aBoolean979;
    public boolean aBoolean992;
    public boolean aBooleanArray662[];
    public boolean aBooleanArray679[];
    public boolean aBooleanArray716[];
    public boolean aBooleanArray831[];
    public byte aByteArray987[];
    public Class10 aClass10_739;
    public Class19 aClass19_883;
    public Class2 NPCArray[];
    public Class2 aClass2Array822[];
    public Class2 aClass2Array891[];
    public Class2 aClass2Array923[];
    public Class2 aClass2Array957[];
    public Class2 PlayerArray[];
    public Class2 myPlayer;
    public Class4 aClass4_667;
    public Class4 aClass4_751;
    public Class4 aClass4_775;
    public Class4 aClass4_798;
    public Class4 aClass4_826;
    public Class4 aClass4_830;
    public Class4 aClass4_858;
    public Class4 aClass4_925;
    public Class5 aClass5Array781[];
    public Class5 aClass5Array814[];
    public Class5 aClass5Array994[];
    public Class6_Sub1 aClass6_Sub1_724;
    public Graphics aGraphics857;
    public long aLong847;
    public long aLong907;
    long aLong928;
    public String aString681;
    public String aString682;
    public String username;
    public String password;
    String selectedItemName;
    public String aString794;
    public String aString824;
    public String aString846;
    public String aString848;
    public String aString861;
    public String aString862;
    public String aString894;
    public static String PacketStore;
    public static boolean PacketStored;
    public String StatNameArray[] = {
        "Attack", "Defense", "Strength", "Hits", "Ranged", "Prayer", "Magic", "Cooking", "Woodcut", "Fletching", 
        "Fishing", "Firemaking", "Crafting", "Smithing", "Mining", "Herblaw", "Agility", "Thieving"
    };
    public String optionObjectArray[];
    public String aStringArray774[];
    public String aStringArray795[] = {
        "Attack", "Defense", "Strength", "Hits", "Ranged", "Prayer", "Magic", "Cooking", "Woodcutting", "Fletching", 
        "Fishing", "Firemaking", "Crafting", "Smithing", "Mining", "Herblaw", "Agility", "Thieving"
    };
    String aStringArray821[];
    public String aStringArray913[];
    public String aStringArray930[] = {
        "Black knight's fortress", "Cook's assistant", "Demon slayer", "Doric's quest", "The restless ghost", "Goblin diplomacy", "Ernest the chicken", "Imp catcher", "Pirate's treasure", "Prince Ali rescue", 
        "Romeo & Juliet", "Sheep shearer", "Shield of Arrav", "The knight's sword", "Vampire slayer", "Witch's potion", "Dragon slayer", "Witch's house (members)", "Lost city (members)", "Hero's quest (members)", 
        "Druidic ritual (members)", "Merlin's crystal (members)", "Scorpion catcher (members)", "Family crest (members)", "Tribal totem (members)", "Fishing contest (members)", "Monk's friend (members)", "Temple of Ikov (members)", "Clock tower (members)", "The Holy Grail (members)", 
        "Fight Arena (members)", "Tree Gnome Village (members)", "The Hazeel Cult (members)", "Sheep Herder (members)", "Plague City (members)", "Sea Slug (members)", "Waterfall quest (members)", "Biohazard (members)", "Jungle potion (members)", "Grand tree (members)", 
        "Shilo village (members)", "Underground pass (members)", "Observatory quest (members)", "Tourist trap (members)", "Watchtower (members)", "Dwarf Cannon (members)", "Murder Mystery (members)", "Digsite (members)", "Gertrude's Cat (members)", "Legend's Quest (members)"
    };
    public String aStringArray932[] = {
        "Armour", "WeaponAim", "WeaponPower", "Magic", "Prayer"
    };
    public String optionNameArray[];
    public String aStringArray997[] = {
        "Where were you born?", "What was your first teachers name?", "What is your fathers middle name?", "Who was your first best friend?", "What is your favourite vacation spot?", "What is your mothers middle name?", "What was your first pets name?", "What was the name of your first school?", "What is your mothers maiden name?", "Who was your first boyfriend/girlfriend?", 
        "What was the first computer game you purchased?", "Who is your favourite actor/actress?", "Who is your favourite author?", "Who is your favourite musician?", "Who is your favourite cartoon character?", "What is your favourite book?", "What is your favourite food?", "What is your favourite movie?"
    };
    public int xrotate;
    public InputStream_Sub1 anInputStream_Sub1_901;
    public int anInt650;
    public int anInt651;
    public int anInt652;
    public int anInt653;
    public int anInt654;
    public int anInt655;
    public int anInt656;
    public int anInt657;
    public int anInt658;
    public int anInt659;
    public int anInt660;
    public int anInt661;
    public int anInt663;
    public int anInt670;
    int anInt671;
    int anInt672;
    public int anInt676;
    public int anInt677;
    public int anInt678;
    public int CameraZoom;
    public int anInt685;
    public int anInt690;
    public int anInt691;
    public int anInt694;
    public int anInt695;
    public int anInt696;
    public int anInt697;
    public int anInt698;
    public int anInt699;
    public int anInt700;
    public int anInt701;
    public int anInt702;
    public int anInt703;
    public int anInt704;
    public int anInt705;
    public int anInt706;
    public int anInt707;
    public int inventoryItemCounter;
    public int anInt714;
    public int anInt715;
    public int anInt725;
    public int mapangle;
    public int anInt731;
    public int anInt732;
    public int anInt733;
    public int PlayerCount;
    public int anInt743;
    public int anInt744;
    public int anInt746;
    public int anInt749;
    public int fightMode;
    public int anInt752;
    public int anInt753;
    public int anInt754;
    public int anInt755;
    public int optionCount;
    public int selectedItem;
    public int anInt766;
    int anInt776;
    int anInt777;
    int anInt778;
    int anInt779;
    int anInt780;
    public int anInt782;
    public int myPlayerX1;
    public int myPlayerY1;
    public int anInt785;
    public int anInt786;
    public int anInt790;
    public int anInt791;
    public int anInt792;
    public int anInt793;
    public int objCount;
    int anInt799;
    int anInt800;
    public int anInt806;
    public int anInt807;
    public int anInt808;
    public int anInt809;
    public int selectedSpell;
    public int anInt812;
    public int mouseClick;
    public int anInt818;
    public int anInt819;
    public int anInt820;
    public int itemCount;
    int anInt827;
    int anInt828;
    public int anInt833;
    public int bankSlots;
    public int anInt835;
    public int anInt836;
    public int anInt839;
    public int anInt840;
    public int anInt841;
    public int anInt842;
    public int anInt843;
    public int anInt844;
    public int anInt845;
    public int anInt850;
    public int anInt851;
    public int anInt855;
    public int anInt859;
    public int anInt860;
    public int anInt863;
    public int anInt864;
    public int intUsername;
    public int intPassword;
    public int anInt867;
    public int intCancel;
    public int anInt869;
    public int anInt871;
    public int anInt872;
    public int anInt873;
    public int anInt874;
    public int anInt875;
    public int anInt876;
    public int anInt877;
    public int anInt878;
    public int anInt884;
    public int anInt886;
    public int anInt889;
    public int fatigue;
    public int anInt893;
    public int anInt895;
    public int anInt896;
    public int anInt897;
    public int anInt898;
    public int anInt899;
    public int anInt900;
    public int anInt902;
    public int selectedShopItem;
    public int anInt904;
    public int npccount;
    public int anInt906;
    public int anInt910;
    public int toolbar;
    public int anInt916;
    public int anInt918;
    public int anInt919;
    public int anInt920;
    public int anInt921;
    public int anInt924;
    public int BTNtype;
    int anInt926;
    int anInt927;
    public int anInt929;
    public int anInt931;
    public int anInt933;
    public int anInt936;
    public int anInt940;
    public int anInt941;
    public int anInt942;
    public int anInt943;
    public int anInt946;
    public int anInt947;
    public int anInt948;
    public int anInt949;
    public int anInt950;
    public int anInt951;
    public int anInt952;
    public int anInt953;
    public int anInt954;
    public int anInt958;
    public int anInt959;
    public int anInt964;
    public int tradePosCount;
    public int anInt973;
    public int anInt974;
    int myPlayerX2;
    int myPlayerY2;
    int anInt978;
    public int anInt980;
    public int anInt986;
    public int anInt988;
    public int anInt989;
    public int anInt990;
    public int anInt991;
    public int anInt993;
    public int anInt995;
    public int anInt996;
    public int anIntArray664[];
    public int anIntArray665[];
    public int anIntArray686[];
    public int anIntArray687[];
    public int anIntArray688[];
    public int anIntArray689[];
    public int anIntArray692[];
    public int anIntArray693[];
    public int inventoryItemID[];
    public int anIntArray710[];
    public int anIntArray711[];
    public int CurrentXPArray[];
    public int anIntArray722[];
    public int anIntArray723[];
    public int anIntArray726[] = {
        0, 1, 2, 1
    };
    public int CurrentStatLevelArray[];
    public int anIntArray730[];
    public int shopItemID[];
    public int shopItemCount[];
    public int anIntArray738[];
    public int anIntArray740[];
    public int anIntArray741[];
    public int anIntArray747[];
    public int anIntArray748[];
    public int anIntArray758[];
    public int anIntArray759[];
    public int objXArray[];
    public int objYArray[];
    public int objID[];
    public int anIntArray763[];
    public int itemXArray[];
    public int itemYArray[];
    public int itemIDArray[];
    public int anIntArray773[];
    public int anIntArray787[];
    public int anIntArray788[];
    public int anIntArray797[];
    public int optionObjIDArray[];
    public int optionObjNameArray[];
    public int anIntArray805[];
    public int anIntArray815[];
    public int anIntArray816[];
    public int anIntArray817[];
    public int RealStatLevelArray[];
    public int anIntArray829[] = {
        0xecded0, 0xccb366, 0xb38c40, 0x997326, 0x906020
    };
    public int anIntArray832[] = {
        0xff0000, 0xff8000, 0xffe000, 0xa0e000, 57344, 32768, 41088, 45311, 33023, 12528, 
        0xe000e0, 0x303030, 0x604000, 0x805000, 0xffffff
    };
    public int anIntArray837[];
    public int anIntArray838[];
    public int anIntArray881[];
    public int optionIDArray[];
    public int anIntArray885[] = {
        0xffc030, 0xffa040, 0x805030, 0x604020, 0x303030, 0xff6020, 0xff4000, 0xffffff, 65280, 65535
    };
    public int anIntArray887[];
    public int anIntArray888[];
    public int anIntArray909[] = {
        0, 0, 0, 0, 0, 1, 2, 1
    };
    public int anIntArray911[];
    public int anIntArray912[];
    public int anIntArray934[];
    public int anIntArray935[];
    public int optionObjXArray[];
    public int optionObjYArray[];
    public int anIntArray939[] = {
        0, 1, 2, 1, 0, 0, 0, 0
    };
    public int bankItemID[];
    public int bankItemCount[];
    public int anIntArray960[];
    public int anIntArray961[];
    public int anIntArray962[];
    public int anIntArray963[];
    public int anIntArray965[];
    public int anIntArray966[];
    public int anIntArray967[];
    public int anIntArray968[];
    public int tradeItemID[];
    public int tradeItemCount[];
    public int anIntArray972[];
    int anIntArray981[];
    int anIntArray982[];
    int head;
    public int anIntArray984[];
    public int anIntArrayArray684[][] = {
        {
            11, 2, 9, 7, 1, 6, 10, 0, 5, 8, 
            3, 4
        }, {
            11, 2, 9, 7, 1, 6, 10, 0, 5, 8, 
            3, 4
        }, {
            11, 3, 2, 9, 7, 1, 6, 10, 0, 5, 
            8, 4
        }, {
            3, 4, 2, 9, 7, 1, 6, 10, 8, 11, 
            0, 5
        }, {
            3, 4, 2, 9, 7, 1, 6, 10, 8, 11, 
            0, 5
        }, {
            4, 3, 2, 9, 7, 1, 6, 10, 8, 11, 
            0, 5
        }, {
            11, 4, 2, 9, 7, 1, 6, 10, 0, 5, 
            8, 3
        }, {
            11, 2, 9, 7, 1, 6, 10, 0, 5, 8, 
            4, 3
        }
    };
}