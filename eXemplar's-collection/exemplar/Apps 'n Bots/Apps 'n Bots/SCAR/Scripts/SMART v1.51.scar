///////////////////////////////////////////////////
//         SMART - SCAR Script Generator         //
//            SMART v1.5 (c) asdf 2005           //
///////////////////////////////////////////////////
// SCAR     // Version History:                  //
// Mouse    //   -1BETA First release            //
// Auto     //   -1.5 Added Accuracy Threshold   //
// Recorder //        Conventional variables     //
// Thingy   //   -1.51 Fixed small time bug      //
///////////////////////////////////////////////////
// Instructions:                                 //
//   Run this script, it will record your mouse  //
//   movements / clicks and output the relevant  //
//   data in the debug window.                   //
///////////////////////////////////////////////////
// About:                                        //
//   This was written to make basic macros to do //
//   basic mouse recording. I tried to make it   //
//   noob proof so that beginners can see how    //
//   some basic SCAR functions work              //
///////////////////////////////////////////////////

program SMART;
var
  xInteger, yInteger, xoldInteger, yoldInteger, counterInteger,
  timeInteger, integer, waittimeInteger: Integer;
  scriptStringArray: Array[0..1024] of String;
  clickedBoolean, movedBoolean: Boolean;

procedure OutputScript(reasonString: String);
begin
  WriteLn('--- Copy Below ---')
  For integer:= 0 to counterInteger - 1 do
    WriteLn(scriptStringArray[integer]);
  WriteLn('end.');
  WriteLn('--- Copy Above ---');
  If(reasonString = 'overflow')Then
    begin
      WriteLn('ERROR: Array overflow');
      WriteLn('This means you ran the recorder for too long');
      WriteLn('and breached the 1024 line limit');
    end
  If(reasonString = 'finished')Then
    WriteLn('Thanks for using SMART');
end;

procedure AddLn(lineString: String);
begin
  If(counterInteger = 1024)Then
  begin
    OutputScript('overflow');
    TerminateScript;
  end
  scriptStringArray[counterInteger]:= lineString;
  counterInteger:= counterInteger + 1;
  Status('CTRL + SHIFT to stop recording :: Generated lines: ' + IntToStr(counterInteger))
end;

function StopKey: Boolean;
begin
  If(IsFunctionKeyDown(0) and IsFunctionKeyDown(1))
  or (IsFunctionKeyDown(0) and IsFunctionKeyDown(4))
  or (IsFunctionKeyDown(3) and IsFunctionKeyDown(1))
  or (IsFunctionKeyDown(3) and IsFunctionKeyDown(4))Then
    result:= True
  else
    result:= False
end;

procedure Initialise;
begin
  Status('CTRL + SHIFT to stop recording');
  WriteLn('Press CTRL + SHIFT to stop recording');
  AddLn('//////////////////////////////////////');
  AddLn('//  SCAR Script Generated by SMART  //');
  AddLn('//     SMART v1.5 (c) asdf 2005     //');
  AddLn('//////////////////////////////////////');
  AddLn('');
  AddLn('program ' + ReadLn('Macro name? (No spaces)') + ';');
  AddLn('');
  AddLn('begin');
  AddLn('///////////////////');
  AddLn('// The begining. //');
  AddLn('///////////////////');
  AddLn('')
end;

begin
  Initialise;
  waittimeInteger:= StrToInt(ReadLn('Accuracy? (1-1000) 1 = Accurate but long script, 1000 = Inaccurate but short script'));
  timeInteger:= GetSystemTime;
  repeat
    GetMousePos(xInteger, yInteger);
    If(IsMouseButtonDown(True))Then
    begin
      If Not(clickedBoolean)Then
      begin
        AddLn('  ClickMouse(' + IntToStr(xInteger) + ', ' + IntToStr(yInteger) + ', True);');
        AddLn('  Wait(' + IntToStr(GetSystemTime - timeInteger) + ');');
        repeat
          Wait(10);
          timeInteger:= GetSystemTime
        until not(IsMouseButtonDown(True))
        clickedBoolean:= True;
      end
    end
    Wait(waittimeInteger);
    If(IsMouseButtonDown(True))Then
    begin
      If Not(clickedBoolean)Then
      begin
        AddLn('  ClickMouse(' + IntToStr(xInteger) + ', ' + IntToStr(yInteger) + ', False);');
        AddLn('  Wait(' + IntToStr(GetSystemTime - timeInteger) + ');');
        repeat
          Wait(10);
          timeInteger:= GetSystemTime
        until not(IsMouseButtonDown(False))
        clickedBoolean:= True;
      end
    end
    Wait(waittimeInteger);
    If not(movedBoolean) and not(clickedBoolean)Then
    begin
      If Not(xoldInteger = xInteger) and Not(yoldInteger = yInteger)Then
      begin
        AddLn('  MoveMouse(' + IntToStr(xInteger) + ', ' + IntToStr(yInteger) + ');');
        AddLn('  Wait(' + IntToStr(GetSystemTime - timeInteger) + ');');
        movedBoolean:= True;
        GetMousePos(xoldInteger, yoldInteger)
        timeInteger:= GetSystemTime
      end
    end
    Wait(waittimeInteger);
    clickedBoolean:= False;
    movedBoolean:= False;
  until(StopKey)
  OutputScript('finished');
end.
