// Decompiled by DJ v3.7.7.81 Copyright 2004 Atanas Neshkov  Date: 22/12/2005 19:18:53
// Home Page : http://members.fortunecity.com/neshkov/dj.html  - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   kb.java

import java.applet.*;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.Enumeration;
import java.util.Iterator;

public class kb
    implements AppletContext, AppletStub
{

    public kb()
    {
    }

    public void appletResize(int i, int j)
    {
    }

    public AppletContext getAppletContext()
    {
        return this;
    }

    public Applet getApplet(String s)
    {
        return null;
    }

    public Enumeration getApplets()
    {
        return null;
    }

    public AudioClip getAudioClip(URL url)
    {
        return null;
    }

    public Image getImage(URL url)
    {
        byte abyte0[];
        URLConnection urlconnection = url.openConnection();
        abyte0 = new byte[urlconnection.getContentLength()];
        urlconnection.getInputStream().read(abyte0);
        return Toolkit.getDefaultToolkit().createImage(abyte0);
        IOException ioexception;
        ioexception;
        return null;
    }

    public InputStream getStream(String s)
    {
        return null;
    }

    public Iterator getStreamKeys()
    {
        return null;
    }

    public void setStream(String s, InputStream inputstream)
        throws IOException
    {
    }

    public void showDocument(URL url)
    {
    }

    public void showDocument(URL url, String s)
    {
    }

    public void showStatus(String s)
    {
    }

    public final URL getCodeBase()
    {
        return new URL(z[1]);
        Exception exception;
        exception;
        return null;
    }

    public final URL getDocumentBase()
    {
        return new URL(z[0]);
        Exception exception;
        exception;
        return null;
    }

    public String getParameter(String s)
    {
        return null;
    }

    public boolean isActive()
    {
        return true;
    }

    private static String z[];

    static 
    {
        String as[];
        as = new String[2];
        as[0] = "m*Ys{*qZt6+,Xm$v=Ls$+=Bn";
        as[1] = "m*Ys{*qXhp+,Xm$v=Ls$+=Bn";
        z = as;
        break MISSING_BLOCK_LABEL_137;
        local;
        toCharArray();
        JVM INSTR dup ;
        JVM INSTR arraylength .length;
        JVM INSTR swap ;
        int i = 0;
        JVM INSTR swap ;
        JVM INSTR dup_x1 ;
        1;
        JVM INSTR icmpgt 116;
           goto _L1 _L2
_L1:
        JVM INSTR dup ;
        i;
_L4:
        JVM INSTR dup2 ;
        JVM INSTR caload ;
        byte byte0;
        switch(i % 5)
        {
        case 0: // '\0'
            byte0 = 5;
            break;

        case 1: // '\001'
            byte0 = 94;
            break;

        case 2: // '\002'
            byte0 = 45;
            break;

        case 3: // '\003'
            byte0 = 3;
            break;

        default:
            byte0 = 65;
            break;
        }
        byte0;
        JVM INSTR ixor ;
        (char);
        JVM INSTR castore ;
        i++;
        JVM INSTR swap ;
        JVM INSTR dup_x1 ;
        JVM INSTR ifne 116;
           goto _L3 _L2
_L3:
        JVM INSTR dup2 ;
        JVM INSTR swap ;
          goto _L4
_L2:
        JVM INSTR swap ;
        JVM INSTR dup_x1 ;
        i;
        JVM INSTR icmpgt 41;
           goto _L5 _L1
_L5:
        JVM INSTR new #96  <Class String>;
        JVM INSTR dup_x1 ;
        JVM INSTR swap ;
        String();
        intern();
        JVM INSTR swap ;
        JVM INSTR pop ;
        JVM INSTR ret 0;
    }
}